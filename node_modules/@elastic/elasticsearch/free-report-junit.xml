<?xml version="1.0"?>
<testsuites id="2023-04-12T18:09:29.088Z" name="Integration test for Free api" time="1236" tests="1934" failures="37" skipped="379">
  <testsuite id="2023-04-12T18:09:29.105Z" name="free/aggregations - /free/aggregations/adjacency_matrix.yml" time="2" tests="2" failures="0" skipped="1">
    <testcase id="2023-04-12T18:09:29.105Z" name="Filters intersections" time="2"/>
    <testcase id="2023-04-12T18:09:30.705Z" name="Terms lookup" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "fixed in 7.9.0",
  "features": [
    "node_selector"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:09:31.016Z" name="free/aggregations - /free/aggregations/auto_date_histogram.yml" time="2" tests="4" failures="0" skipped="0">
    <testcase id="2023-04-12T18:09:31.016Z" name="basic" time="0"/>
    <testcase id="2023-04-12T18:09:31.378Z" name="avg_bucket" time="0"/>
    <testcase id="2023-04-12T18:09:31.726Z" name="profile at top level" time="0"/>
    <testcase id="2023-04-12T18:09:32.091Z" name="Auto date histogram on two indices with same field but different date type" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:09:32.706Z" name="free/aggregations - /free/aggregations/avg_bucket.yml" time="4" tests="9" failures="0" skipped="7">
    <testcase id="2023-04-12T18:09:32.706Z" name="basic" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:09:33.156Z" name="format" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:09:33.606Z" name="gap_policy=skip" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:09:34.036Z" name="gap_policy=insert_zeros" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:09:34.475Z" name="gap_policy=keep_value" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:09:34.903Z" name="dotted name" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:09:35.322Z" name="dotted value" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:09:35.734Z" name="no results" time="0"/>
    <testcase id="2023-04-12T18:09:36.158Z" name="bad path" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:09:36.572Z" name="free/aggregations - /free/aggregations/avg_metric.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2023-04-12T18:09:36.572Z" name="Basic test" time="0"/>
    <testcase id="2023-04-12T18:09:36.857Z" name="Only aggs test" time="0"/>
    <testcase id="2023-04-12T18:09:37.146Z" name="Filtered test" time="0"/>
    <testcase id="2023-04-12T18:09:37.418Z" name="Missing field with missing param" time="0"/>
    <testcase id="2023-04-12T18:09:37.689Z" name="Missing field without missing param" time="0"/>
    <testcase id="2023-04-12T18:09:37.955Z" name="Metadata test" time="0"/>
    <testcase id="2023-04-12T18:09:38.227Z" name="Aggregating wrong datatype test" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:09:38.506Z" name="free/aggregations - /free/aggregations/bucket_selector.yml" time="4" tests="13" failures="1" skipped="0">
    <testcase id="2023-04-12T18:09:38.506Z" name="prune some buckets" time="0"/>
    <testcase id="2023-04-12T18:09:38.900Z" name="prune no buckets" time="0"/>
    <testcase id="2023-04-12T18:09:39.201Z" name="prune all buckets" time="0"/>
    <testcase id="2023-04-12T18:09:39.490Z" name="input is unmapped sum" time="0"/>
    <testcase id="2023-04-12T18:09:39.775Z" name="input is unmapped avg" time="0"/>
    <testcase id="2023-04-12T18:09:40.047Z" name="params" time="0"/>
    <testcase id="2023-04-12T18:09:40.327Z" name="default gap_policy is skip" time="0"/>
    <testcase id="2023-04-12T18:09:40.605Z" name="gap_policy is skip" time="0"/>
    <testcase id="2023-04-12T18:09:40.882Z" name="gap_policy is insert_zeros" time="0"/>
    <testcase id="2023-04-12T18:09:41.158Z" name="gap_policy is keep_values" time="0"/>
    <testcase id="2023-04-12T18:09:41.434Z" name="bad script" time="0">
      <failure message="the error should be: /NullPointerException/" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: the error should be: /NullPointerException/
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:507:14)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:09:41.551Z" name="invalid path" time="0"/>
    <testcase id="2023-04-12T18:09:41.735Z" name="top level fails" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:09:42.013Z" name="free/aggregations - /free/aggregations/bucket_sort.yml" time="6" tests="22" failures="0" skipped="0">
    <testcase id="2023-04-12T18:09:42.013Z" name="single sort" time="0"/>
    <testcase id="2023-04-12T18:09:42.293Z" name="two sorts" time="0"/>
    <testcase id="2023-04-12T18:09:42.565Z" name="sort terms on _key" time="0"/>
    <testcase id="2023-04-12T18:09:42.845Z" name="sort terms on _count" time="0"/>
    <testcase id="2023-04-12T18:09:43.113Z" name="sort terms on _count with secondary sort" time="0"/>
    <testcase id="2023-04-12T18:09:43.393Z" name="sort date_histogram on _key" time="0"/>
    <testcase id="2023-04-12T18:09:43.661Z" name="default gap_policy is skip" time="0"/>
    <testcase id="2023-04-12T18:09:43.943Z" name="gap_policy=skip" time="0"/>
    <testcase id="2023-04-12T18:09:44.211Z" name="gap_policy=skip and size" time="0"/>
    <testcase id="2023-04-12T18:09:44.485Z" name="gap_policy=skip and primary has gaps but secondary doesn't" time="0"/>
    <testcase id="2023-04-12T18:09:44.756Z" name="gap_policy=skip and secondary has gaps but primary doesn't" time="0"/>
    <testcase id="2023-04-12T18:09:45.028Z" name="gap_policy=skip and primary and secondary have gaps" time="0"/>
    <testcase id="2023-04-12T18:09:45.297Z" name="gap_policy=insert_zeros" time="0"/>
    <testcase id="2023-04-12T18:09:45.572Z" name="gap_policy=keep_values" time="0"/>
    <testcase id="2023-04-12T18:09:45.839Z" name="just limit size" time="0"/>
    <testcase id="2023-04-12T18:09:46.104Z" name="just offset" time="0"/>
    <testcase id="2023-04-12T18:09:46.378Z" name="limit size and offset" time="0"/>
    <testcase id="2023-04-12T18:09:46.665Z" name="no matches" time="0"/>
    <testcase id="2023-04-12T18:09:46.930Z" name="sort is stable" time="0"/>
    <testcase id="2023-04-12T18:09:47.200Z" name="no action fails" time="0"/>
    <testcase id="2023-04-12T18:09:47.474Z" name="invalid path fails" time="0"/>
    <testcase id="2023-04-12T18:09:47.740Z" name="top level fails" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:09:48.008Z" name="free/aggregations - /free/aggregations/cardinality_metric.yml" time="4" tests="16" failures="0" skipped="0">
    <testcase id="2023-04-12T18:09:48.008Z" name="Basic test" time="0"/>
    <testcase id="2023-04-12T18:09:48.276Z" name="Only aggs test" time="0"/>
    <testcase id="2023-04-12T18:09:48.533Z" name="Filtered test" time="0"/>
    <testcase id="2023-04-12T18:09:48.792Z" name="Missing field with missing param" time="0"/>
    <testcase id="2023-04-12T18:09:49.050Z" name="Missing field without missing param" time="0"/>
    <testcase id="2023-04-12T18:09:49.307Z" name="Metadata test" time="0"/>
    <testcase id="2023-04-12T18:09:49.563Z" name="Invalid Precision test" time="0"/>
    <testcase id="2023-04-12T18:09:49.823Z" name="profiler int" time="0"/>
    <testcase id="2023-04-12T18:09:50.079Z" name="profiler double" time="0"/>
    <testcase id="2023-04-12T18:09:50.334Z" name="profiler string" time="0"/>
    <testcase id="2023-04-12T18:09:50.593Z" name="profiler string save memory hint" time="0"/>
    <testcase id="2023-04-12T18:09:50.848Z" name="profiler string save time hint" time="0"/>
    <testcase id="2023-04-12T18:09:51.103Z" name="profiler string global ords hint" time="0"/>
    <testcase id="2023-04-12T18:09:51.354Z" name="profiler string segment ords hint" time="0"/>
    <testcase id="2023-04-12T18:09:51.609Z" name="profiler string direct hint" time="0"/>
    <testcase id="2023-04-12T18:09:51.864Z" name="invalid execution hint throws" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:09:52.128Z" name="free/aggregations - /free/aggregations/composite.yml" time="24" tests="34" failures="0" skipped="0">
    <testcase id="2023-04-12T18:09:52.128Z" name="Simple Composite aggregation" time="1"/>
    <testcase id="2023-04-12T18:09:52.814Z" name="Nested Composite aggregation" time="1"/>
    <testcase id="2023-04-12T18:09:53.483Z" name="Aggregate After" time="1"/>
    <testcase id="2023-04-12T18:09:54.146Z" name="Aggregate After Missing" time="1"/>
    <testcase id="2023-04-12T18:09:54.827Z" name="Invalid Composite aggregation" time="1"/>
    <testcase id="2023-04-12T18:09:55.490Z" name="Composite aggregation with format and calendar_interval" time="1"/>
    <testcase id="2023-04-12T18:09:56.151Z" name="Composite aggregation with invalid format" time="1"/>
    <testcase id="2023-04-12T18:09:56.811Z" name="Composite aggregation with lossy format" time="1"/>
    <testcase id="2023-04-12T18:09:57.460Z" name="Composite aggregation with date_histogram offset" time="1"/>
    <testcase id="2023-04-12T18:09:58.124Z" name="Composite aggregation with after_key in the response" time="1"/>
    <testcase id="2023-04-12T18:09:58.817Z" name="Composite aggregation and array size" time="1"/>
    <testcase id="2023-04-12T18:09:59.515Z" name="Composite aggregation with unmapped field" time="1"/>
    <testcase id="2023-04-12T18:10:00.214Z" name="Missing source" time="1"/>
    <testcase id="2023-04-12T18:10:00.975Z" name="Duplicate sources" time="1"/>
    <testcase id="2023-04-12T18:10:01.754Z" name="Simple Composite aggregation with GeoTile grid" time="1"/>
    <testcase id="2023-04-12T18:10:02.551Z" name="Simple Composite aggregation with geotile grid add aggregate after" time="1"/>
    <testcase id="2023-04-12T18:10:03.273Z" name="Mixed ip and unmapped fields" time="1"/>
    <testcase id="2023-04-12T18:10:04.202Z" name="date_histogram with time_zone" time="1"/>
    <testcase id="2023-04-12T18:10:04.963Z" name="date_histogram with time_zone epoch format" time="1"/>
    <testcase id="2023-04-12T18:10:05.719Z" name="date_histogram on date_nanos" time="1"/>
    <testcase id="2023-04-12T18:10:06.481Z" name="Terms source from sorted" time="1"/>
    <testcase id="2023-04-12T18:10:07.330Z" name="Terms source from part of sorted" time="1"/>
    <testcase id="2023-04-12T18:10:08.140Z" name="Nested as parent" time="1"/>
    <testcase id="2023-04-12T18:10:08.844Z" name="Nested parent with compound key" time="1"/>
    <testcase id="2023-04-12T18:10:09.478Z" name="Nested with a nested sub aggregation" time="1"/>
    <testcase id="2023-04-12T18:10:10.116Z" name="Nested then filter then nested then terms" time="1"/>
    <testcase id="2023-04-12T18:10:10.761Z" name="Filter without nesting" time="1"/>
    <testcase id="2023-04-12T18:10:11.416Z" name="Simple Composite aggregation with missing_bucket" time="1"/>
    <testcase id="2023-04-12T18:10:12.068Z" name="Simple Composite aggregation with missing_order" time="1"/>
    <testcase id="2023-04-12T18:10:12.718Z" name="missing_order with missing_bucket = false" time="1"/>
    <testcase id="2023-04-12T18:10:13.359Z" name="missing_order without missing_bucket" time="1"/>
    <testcase id="2023-04-12T18:10:14.005Z" name="Nested Composite aggregation with missing_order" time="1"/>
    <testcase id="2023-04-12T18:10:14.640Z" name="date_histogram and date_histogram_composite timezone" time="1"/>
    <testcase id="2023-04-12T18:10:15.283Z" name="Composite with date histogram on two indices with same field but different date type" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:16.127Z" name="free/aggregations - /free/aggregations/composite_sorted.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2023-04-12T18:10:16.127Z" name="one source - first page" time="0"/>
    <testcase id="2023-04-12T18:10:16.466Z" name="one source - second page" time="0"/>
    <testcase id="2023-04-12T18:10:16.806Z" name="two sources - first page" time="0"/>
    <testcase id="2023-04-12T18:10:17.157Z" name="two sources - second page" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:17.494Z" name="free/aggregations - /free/aggregations/cumulative_sum.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2023-04-12T18:10:17.494Z" name="basic" time="0"/>
    <testcase id="2023-04-12T18:10:17.757Z" name="format" time="0"/>
    <testcase id="2023-04-12T18:10:18.020Z" name="no results" time="0"/>
    <testcase id="2023-04-12T18:10:18.286Z" name="bad path" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:18.546Z" name="free/aggregations - /free/aggregations/date_agg_per_day_of_week.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:10:18.546Z" name="Date aggregartion per day of week" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:18.803Z" name="free/aggregations - /free/aggregations/date_histogram.yml" time="8" tests="12" failures="0" skipped="0">
    <testcase id="2023-04-12T18:10:18.803Z" name="date_histogram on range with hard bounds" time="1"/>
    <testcase id="2023-04-12T18:10:19.434Z" name="date_histogram on date_nanos without timezone fixed interval" time="1"/>
    <testcase id="2023-04-12T18:10:20.057Z" name="date_histogram on date_nanos with timezone fixed interval" time="1"/>
    <testcase id="2023-04-12T18:10:20.685Z" name="date_histogram on date_nanos without timezone calendar interval" time="1"/>
    <testcase id="2023-04-12T18:10:21.312Z" name="date_histogram on date_nanos with timezone calendar interval" time="1"/>
    <testcase id="2023-04-12T18:10:21.931Z" name="date_histogram and date_histogram_composite timezone" time="1"/>
    <testcase id="2023-04-12T18:10:22.552Z" name="Multi-value date histogram" time="1"/>
    <testcase id="2023-04-12T18:10:23.183Z" name="Multi-value date histogram docvalues only" time="1"/>
    <testcase id="2023-04-12T18:10:23.815Z" name="Daylight with offset date_histogram test" time="1"/>
    <testcase id="2023-04-12T18:10:24.433Z" name="Daylight without offset date_histogram test" time="1"/>
    <testcase id="2023-04-12T18:10:25.050Z" name="Date histogram with contradicting filters" time="1"/>
    <testcase id="2023-04-12T18:10:25.779Z" name="Date histogram on two indices with same field but different date type" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:26.576Z" name="free/aggregations - /free/aggregations/date_range.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:10:26.576Z" name="Date range" time="0"/>
    <testcase id="2023-04-12T18:10:26.910Z" name="Date Range Missing" time="0"/>
    <testcase id="2023-04-12T18:10:27.263Z" name="Date range unmapped with children" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:27.665Z" name="free/aggregations - /free/aggregations/derivative.yml" time="4" tests="12" failures="0" skipped="10">
    <testcase id="2023-04-12T18:10:27.665Z" name="in date_histogram" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:28.028Z" name="in histogram" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:28.388Z" name="partially mapped" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:28.757Z" name="format" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:29.119Z" name="gap_policy=skip" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:29.488Z" name="gap_policy=insert_zeros" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:29.871Z" name="gap_policy=keep_values" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:30.264Z" name="dotted name" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:30.647Z" name="dotted value" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:31.023Z" name="no results" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:31.401Z" name="bad path" time="0"/>
    <testcase id="2023-04-12T18:10:31.779Z" name="Not under date_histo" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:32.151Z" name="free/aggregations - /free/aggregations/diversified_sampler.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2023-04-12T18:10:32.151Z" name="small shard_size" time="0"/>
    <testcase id="2023-04-12T18:10:32.444Z" name="defaults" time="0"/>
    <testcase id="2023-04-12T18:10:32.719Z" name="override max_docs_per_value" time="0"/>
    <testcase id="2023-04-12T18:10:32.986Z" name="run on number" time="0"/>
    <testcase id="2023-04-12T18:10:33.249Z" name="force map mode" time="0"/>
    <testcase id="2023-04-12T18:10:33.517Z" name="force global ordinals mode" time="0"/>
    <testcase id="2023-04-12T18:10:33.785Z" name="enable hash mode mode" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:34.047Z" name="free/aggregations - /free/aggregations/doc_count_field.yml" time="2" tests="7" failures="0" skipped="2">
    <testcase id="2023-04-12T18:10:34.047Z" name="Test numeric terms agg with doc_count" time="0"/>
    <testcase id="2023-04-12T18:10:34.325Z" name="Test keyword terms agg with doc_count" time="0"/>
    <testcase id="2023-04-12T18:10:34.608Z" name="Test unmapped string terms agg with doc_count" time="0"/>
    <testcase id="2023-04-12T18:10:34.995Z" name="Test composite str_terms agg with doc_count" time="0"/>
    <testcase id="2023-04-12T18:10:35.286Z" name="Test composite num_terms agg with doc_count" time="0"/>
    <testcase id="2023-04-12T18:10:35.580Z" name="Single bucket filters agg with doc_count" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "implementation change in 8.0",
  "features": [
    "default_shards"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:35.859Z" name="Filters agg with doc_count" time="0">
      <skipped>{
  "version": " - 8.2.99",
  "reason": "implementation changed when there is more than one bucket 8.3.0",
  "features": [
    "default_shards"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:10:36.146Z" name="free/aggregations - /free/aggregations/extended_stats_bucket.yml" time="2" tests="5" failures="0" skipped="5">
    <testcase id="2023-04-12T18:10:36.146Z" name="basic" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:36.518Z" name="format" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:36.884Z" name="gap_policy=skip" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:37.255Z" name="gap_policy=insert_zeros" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:37.630Z" name="gap_policy=keep_value" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:10:38.019Z" name="free/aggregations - /free/aggregations/extended_stats_metric.yml" time="2" tests="8" failures="0" skipped="0">
    <testcase id="2023-04-12T18:10:38.019Z" name="Basic test" time="0"/>
    <testcase id="2023-04-12T18:10:38.296Z" name="Only aggs test" time="0"/>
    <testcase id="2023-04-12T18:10:38.561Z" name="Filtered test" time="0"/>
    <testcase id="2023-04-12T18:10:38.823Z" name="Missing field with missing param" time="0"/>
    <testcase id="2023-04-12T18:10:39.087Z" name="Missing field without missing param" time="0"/>
    <testcase id="2023-04-12T18:10:39.350Z" name="Metadata test" time="0"/>
    <testcase id="2023-04-12T18:10:39.614Z" name="Sigma test" time="0"/>
    <testcase id="2023-04-12T18:10:39.878Z" name="Bad sigma test" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:40.150Z" name="free/aggregations - /free/aggregations/filter.yml" time="1" tests="4" failures="0" skipped="2">
    <testcase id="2023-04-12T18:10:40.150Z" name="Terms lookup gets cached" time="0">
      <skipped>{
  "features": [
    "node_selector"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:40.412Z" name="Standard queries get cached" time="0">
      <skipped>{
  "features": [
    "node_selector"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:40.680Z" name="As a child of terms" time="0"/>
    <testcase id="2023-04-12T18:10:40.971Z" name="Sorting terms" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:41.250Z" name="free/aggregations - /free/aggregations/filters_bucket.yml" time="3" tests="12" failures="0" skipped="2">
    <testcase id="2023-04-12T18:10:41.250Z" name="Basic test" time="0"/>
    <testcase id="2023-04-12T18:10:41.505Z" name="Anonymous filters test" time="0"/>
    <testcase id="2023-04-12T18:10:41.757Z" name="Only aggs test" time="0"/>
    <testcase id="2023-04-12T18:10:42.010Z" name="Filtered test" time="0"/>
    <testcase id="2023-04-12T18:10:42.263Z" name="Metadata test" time="0"/>
    <testcase id="2023-04-12T18:10:42.512Z" name="no meta" time="0"/>
    <testcase id="2023-04-12T18:10:42.764Z" name="empty meta" time="0"/>
    <testcase id="2023-04-12T18:10:43.016Z" name="null meta" time="0"/>
    <testcase id="2023-04-12T18:10:43.267Z" name="Bad params" time="0"/>
    <testcase id="2023-04-12T18:10:43.518Z" name="cache busting" time="0">
      <skipped>{
  "version": " - 7.10.99",
  "reason": "cache fixed in 7.11.0",
  "features": [
    "node_selector"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:10:43.764Z" name="nested" time="0"/>
    <testcase id="2023-04-12T18:10:44.101Z" name="cache hits" time="0">
      <skipped>{
  "features": [
    "node_selector"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:10:44.353Z" name="free/aggregations - /free/aggregations/geo_bounds_centroid.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2023-04-12T18:10:44.353Z" name="Basic test" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:10:44.353Z" name="free/aggregations - /free/aggregations/geo_distance.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:10:44.353Z" name="basic" time="0"/>
    <testcase id="2023-04-12T18:10:44.623Z" name="avg_bucket" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:44.888Z" name="free/aggregations - /free/aggregations/geohash_grid.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:10:44.888Z" name="Basic test" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:45.138Z" name="free/aggregations - /free/aggregations/geotile_grid.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:10:45.138Z" name="Basic test" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:45.390Z" name="free/aggregations - /free/aggregations/global.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:10:45.390Z" name="simple" time="0"/>
    <testcase id="2023-04-12T18:10:45.669Z" name="profile" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:45.936Z" name="free/aggregations - /free/aggregations/histogram.yml" time="6" tests="19" failures="0" skipped="0">
    <testcase id="2023-04-12T18:10:45.936Z" name="Basic test" time="0"/>
    <testcase id="2023-04-12T18:10:46.188Z" name="Format test" time="0"/>
    <testcase id="2023-04-12T18:10:46.439Z" name="Show empty intervals" time="0"/>
    <testcase id="2023-04-12T18:10:46.689Z" name="histogram with min_doc_count" time="0"/>
    <testcase id="2023-04-12T18:10:46.943Z" name="histogram with extended_bounds" time="0"/>
    <testcase id="2023-04-12T18:10:47.198Z" name="histogram with hard bounds" time="0"/>
    <testcase id="2023-04-12T18:10:47.530Z" name="histogram with offset and unmapped" time="0"/>
    <testcase id="2023-04-12T18:10:47.854Z" name="histogram with missing field without missing param" time="0"/>
    <testcase id="2023-04-12T18:10:48.119Z" name="histogram with missing field with missing param" time="0"/>
    <testcase id="2023-04-12T18:10:48.388Z" name="date_histogram" time="0"/>
    <testcase id="2023-04-12T18:10:48.832Z" name="date_histogram with offset" time="0"/>
    <testcase id="2023-04-12T18:10:49.279Z" name="date_histogram on range" time="0"/>
    <testcase id="2023-04-12T18:10:49.717Z" name="date_histogram on range with offset" time="0"/>
    <testcase id="2023-04-12T18:10:50.151Z" name="date_histogram with pre-epoch daylight savings time transition" time="0"/>
    <testcase id="2023-04-12T18:10:50.405Z" name="histogram profiler" time="0"/>
    <testcase id="2023-04-12T18:10:50.733Z" name="date_histogram profiler" time="0"/>
    <testcase id="2023-04-12T18:10:51.102Z" name="date_histogram with extended_bounds and offset and unmapped" time="0"/>
    <testcase id="2023-04-12T18:10:51.522Z" name="Tiny tiny tiny range" time="0"/>
    <testcase id="2023-04-12T18:10:51.805Z" name="Tiny tiny tiny date_range" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:52.319Z" name="free/aggregations - /free/aggregations/ip_prefix.yml" time="4" tests="14" failures="0" skipped="0">
    <testcase id="2023-04-12T18:10:52.319Z" name="IPv4 prefix" time="0"/>
    <testcase id="2023-04-12T18:10:52.581Z" name="IPv4 prefix with incorrect is_ipv6" time="0"/>
    <testcase id="2023-04-12T18:10:52.835Z" name="IPv4 short prefix" time="0"/>
    <testcase id="2023-04-12T18:10:53.087Z" name="IPv6 prefix" time="0"/>
    <testcase id="2023-04-12T18:10:53.338Z" name="IPv6 prefix with incorrect is_ipv6" time="0"/>
    <testcase id="2023-04-12T18:10:53.586Z" name="Invalid IPv4 prefix" time="0"/>
    <testcase id="2023-04-12T18:10:53.840Z" name="Invalid IPv6 prefix" time="0"/>
    <testcase id="2023-04-12T18:10:54.087Z" name="IPv4 prefix sub aggregation" time="0"/>
    <testcase id="2023-04-12T18:10:54.343Z" name="IPv6 prefix sub aggregation" time="0"/>
    <testcase id="2023-04-12T18:10:54.594Z" name="IPv6 prefix metric sub aggregation" time="0"/>
    <testcase id="2023-04-12T18:10:54.846Z" name="IPv4 prefix appended" time="0"/>
    <testcase id="2023-04-12T18:10:55.096Z" name="IPv6 prefix appended" time="0"/>
    <testcase id="2023-04-12T18:10:55.345Z" name="Mixed IPv4 and IPv6 with is_ipv6 false" time="0"/>
    <testcase id="2023-04-12T18:10:55.600Z" name="Mixed IPv4 and IPv6 with is_ipv6 true" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:55.850Z" name="free/aggregations - /free/aggregations/ip_range.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:10:55.850Z" name="IP range" time="0"/>
    <testcase id="2023-04-12T18:10:56.105Z" name="IP Range Key Generation" time="0"/>
    <testcase id="2023-04-12T18:10:56.347Z" name="IP Range avg_bucket" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:56.612Z" name="free/aggregations - /free/aggregations/matrix_stats.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:10:56.612Z" name="Empty Bucket Aggregation" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:10:56.914Z" name="free/aggregations - /free/aggregations/matrix_stats_multi_value_field.yml" time="3" tests="7" failures="0" skipped="0">
    <testcase id="2023-04-12T18:10:56.914Z" name="Unmapped" time="0"/>
    <testcase id="2023-04-12T18:10:57.372Z" name="Multi value field Max" time="0"/>
    <testcase id="2023-04-12T18:10:57.823Z" name="Multi value field Min" time="0"/>
    <testcase id="2023-04-12T18:10:58.299Z" name="Partially unmapped" time="0"/>
    <testcase id="2023-04-12T18:10:58.768Z" name="Partially unmapped with missing defaults" time="0"/>
    <testcase id="2023-04-12T18:10:59.234Z" name="With script" time="0"/>
    <testcase id="2023-04-12T18:10:59.688Z" name="With script params" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:00.143Z" name="free/aggregations - /free/aggregations/matrix_stats_single_value_field.yml" time="3" tests="6" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:00.143Z" name="Unmapped" time="0"/>
    <testcase id="2023-04-12T18:11:00.582Z" name="Single value field" time="0"/>
    <testcase id="2023-04-12T18:11:01.035Z" name="Partially unmapped" time="0"/>
    <testcase id="2023-04-12T18:11:01.498Z" name="Partially unmapped with missing default" time="0"/>
    <testcase id="2023-04-12T18:11:01.959Z" name="With script" time="0"/>
    <testcase id="2023-04-12T18:11:02.414Z" name="With script params" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:02.872Z" name="free/aggregations - /free/aggregations/max_bucket.yml" time="3" tests="9" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:02.872Z" name="basic" time="0"/>
    <testcase id="2023-04-12T18:11:03.251Z" name="format" time="0"/>
    <testcase id="2023-04-12T18:11:03.619Z" name="gap_policy=skip" time="0"/>
    <testcase id="2023-04-12T18:11:03.988Z" name="gap_policy=insert_zeros" time="0"/>
    <testcase id="2023-04-12T18:11:04.370Z" name="gap_policy=keep_value" time="0"/>
    <testcase id="2023-04-12T18:11:04.744Z" name="dotted name" time="0"/>
    <testcase id="2023-04-12T18:11:05.112Z" name="dotted value" time="0"/>
    <testcase id="2023-04-12T18:11:05.487Z" name="no results" time="0"/>
    <testcase id="2023-04-12T18:11:05.853Z" name="bad path" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:06.220Z" name="free/aggregations - /free/aggregations/max_buckets.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:06.220Z" name="Max bucket" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:06.618Z" name="free/aggregations - /free/aggregations/max_metric.yml" time="4" tests="9" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:06.618Z" name="Basic test" time="0"/>
    <testcase id="2023-04-12T18:11:07.050Z" name="Only aggs test" time="0"/>
    <testcase id="2023-04-12T18:11:07.474Z" name="Filtered test" time="0"/>
    <testcase id="2023-04-12T18:11:07.911Z" name="Missing field with missing param" time="0"/>
    <testcase id="2023-04-12T18:11:08.335Z" name="Missing field without missing param" time="0"/>
    <testcase id="2023-04-12T18:11:08.759Z" name="Metadata test" time="0"/>
    <testcase id="2023-04-12T18:11:09.195Z" name="Aggregating wrong datatype test" time="0"/>
    <testcase id="2023-04-12T18:11:09.624Z" name="Merging results with unmapped fields" time="0"/>
    <testcase id="2023-04-12T18:11:10.048Z" name="Counter field" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:10.560Z" name="free/aggregations - /free/aggregations/median_absolute_deviation_metric.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:10.560Z" name="basic test" time="0"/>
    <testcase id="2023-04-12T18:11:10.824Z" name="with setting compression" time="0"/>
    <testcase id="2023-04-12T18:11:11.084Z" name="no documents" time="0"/>
    <testcase id="2023-04-12T18:11:11.345Z" name="missing value" time="0"/>
    <testcase id="2023-04-12T18:11:11.621Z" name="bad arguments" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:11.888Z" name="free/aggregations - /free/aggregations/min_bucket.yml" time="3" tests="9" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:11.888Z" name="basic" time="0"/>
    <testcase id="2023-04-12T18:11:12.266Z" name="format" time="0"/>
    <testcase id="2023-04-12T18:11:12.639Z" name="gap_policy=skip" time="0"/>
    <testcase id="2023-04-12T18:11:13.018Z" name="gap_policy=insert_zeros" time="0"/>
    <testcase id="2023-04-12T18:11:13.372Z" name="gap_policy=keep_value" time="0"/>
    <testcase id="2023-04-12T18:11:13.734Z" name="dotted name" time="0"/>
    <testcase id="2023-04-12T18:11:14.093Z" name="dotted value" time="0"/>
    <testcase id="2023-04-12T18:11:14.446Z" name="no results" time="0"/>
    <testcase id="2023-04-12T18:11:14.800Z" name="bad path" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:15.152Z" name="free/aggregations - /free/aggregations/min_metric.yml" time="2" tests="8" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:15.152Z" name="Basic test" time="0"/>
    <testcase id="2023-04-12T18:11:15.402Z" name="Only aggs test" time="0"/>
    <testcase id="2023-04-12T18:11:15.653Z" name="Filtered test" time="0"/>
    <testcase id="2023-04-12T18:11:15.908Z" name="Missing field with missing param" time="0"/>
    <testcase id="2023-04-12T18:11:16.164Z" name="Missing field without missing param" time="0"/>
    <testcase id="2023-04-12T18:11:16.421Z" name="Metadata test" time="0"/>
    <testcase id="2023-04-12T18:11:16.675Z" name="Aggregating wrong datatype test" time="0"/>
    <testcase id="2023-04-12T18:11:16.923Z" name="Counter field" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:17.257Z" name="free/aggregations - /free/aggregations/missing.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:17.257Z" name="match all" time="0"/>
    <testcase id="2023-04-12T18:11:17.504Z" name="match some" time="0"/>
    <testcase id="2023-04-12T18:11:17.755Z" name="match none" time="0"/>
    <testcase id="2023-04-12T18:11:18.013Z" name="missing param" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:18.267Z" name="free/aggregations - /free/aggregations/moving_fn.yml" time="8" tests="23" failures="0" skipped="20">
    <testcase id="2023-04-12T18:11:18.267Z" name="in date_histogram" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:18.625Z" name="in histogram" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:18.979Z" name="min" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:19.327Z" name="max" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:19.673Z" name="sum" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:20.026Z" name="stdDev" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:20.380Z" name="unweightedAvg" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:20.731Z" name="linearWeightedAvg" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:21.085Z" name="ewma" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:21.431Z" name="holt" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:21.777Z" name="holtWinters" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:22.127Z" name="math on results" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:22.475Z" name="shift" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:22.828Z" name="format" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:23.177Z" name="gap_policy=skip" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:23.528Z" name="gap_policy=insert_zeros" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:23.879Z" name="gap_policy=keep_value" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:24.237Z" name="dotted name" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:24.590Z" name="dotted value" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:24.949Z" name="not results" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:25.305Z" name="bad path" time="0"/>
    <testcase id="2023-04-12T18:11:25.659Z" name="Bad window" time="0"/>
    <testcase id="2023-04-12T18:11:26.013Z" name="Not under date_histo" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:26.365Z" name="free/aggregations - /free/aggregations/nested.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:26.365Z" name="Single Level Nested with Terms" time="0"/>
    <testcase id="2023-04-12T18:11:26.634Z" name="Compound nested key" time="0"/>
    <testcase id="2023-04-12T18:11:26.904Z" name="Nested with a nested sub aggregation" time="0"/>
    <testcase id="2023-04-12T18:11:27.172Z" name="Nested then filter then nested then terms" time="0"/>
    <testcase id="2023-04-12T18:11:27.441Z" name="Nested then filter then nested then reverse nested" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:27.716Z" name="free/aggregations - /free/aggregations/painless_execute.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:27.716Z" name="MovingFunctions are available in the default context" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:27.889Z" name="free/aggregations - /free/aggregations/percentile_ranks_hdr_metric.yml" time="2" tests="7" failures="0" skipped="5">
    <testcase id="2023-04-12T18:11:27.889Z" name="basic" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:28.152Z" name="set significant digits" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:28.404Z" name="filtered" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:28.649Z" name="missing field with missing param" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:28.898Z" name="missing field without missing param" time="0"/>
    <testcase id="2023-04-12T18:11:29.159Z" name="invalid params" time="0"/>
    <testcase id="2023-04-12T18:11:29.410Z" name="non-keyed" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:11:29.658Z" name="free/aggregations - /free/aggregations/percentile_ranks_tdigest_metric.yml" time="1" tests="6" failures="0" skipped="4">
    <testcase id="2023-04-12T18:11:29.658Z" name="basic" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:29.903Z" name="filtered" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:30.150Z" name="missing field with missing param" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:30.396Z" name="missing field without missing param" time="0"/>
    <testcase id="2023-04-12T18:11:30.652Z" name="invalid params" time="0"/>
    <testcase id="2023-04-12T18:11:30.903Z" name="non-keyed test" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:11:31.153Z" name="free/aggregations - /free/aggregations/percentiles_bucket.yml" time="1" tests="9" failures="8" skipped="0">
    <testcase id="2023-04-12T18:11:31.153Z" name="basic" time="0">
      <failure message="[object Object]" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: [object Object]
    at match (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:670:12)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:557:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:31.369Z" name="format" time="0">
      <failure message="should be equal: 6 - 3, action: {&quot;hits.total.value&quot;:3}" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: should be equal: 6 - 3, action: {"hits.total.value":3}
    at match (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:685:12)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:557:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:31.399Z" name="gap_policy=skip" time="0">
      <failure message="should be equal: 9 - 3, action: {&quot;hits.total.value&quot;:3}" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: should be equal: 9 - 3, action: {"hits.total.value":3}
    at match (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:685:12)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:557:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:31.426Z" name="gap_policy=insert_zeros" time="0">
      <failure message="should be equal: 12 - 3, action: {&quot;hits.total.value&quot;:3}" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: should be equal: 12 - 3, action: {"hits.total.value":3}
    at match (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:685:12)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:557:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:31.458Z" name="gap_policy=keep_value" time="0">
      <failure message="should be equal: 15 - 3, action: {&quot;hits.total.value&quot;:3}" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: should be equal: 15 - 3, action: {"hits.total.value":3}
    at match (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:685:12)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:557:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:31.484Z" name="dotted name" time="0">
      <failure message="should be equal: 18 - 3, action: {&quot;hits.total.value&quot;:3}" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: should be equal: 18 - 3, action: {"hits.total.value":3}
    at match (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:685:12)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:557:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:31.510Z" name="dotted value" time="0">
      <failure message="should be equal: 21 - 3, action: {&quot;hits.total.value&quot;:3}" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: should be equal: 21 - 3, action: {"hits.total.value":3}
    at match (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:685:12)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:557:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:31.536Z" name="no results" time="0">
      <failure message="[object Object]" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: [object Object]
    at match (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:670:12)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:557:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:31.562Z" name="bad path" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:31.756Z" name="free/aggregations - /free/aggregations/percentiles_hdr_metric.yml" time="4" tests="10" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:31.756Z" name="Basic test" time="0"/>
    <testcase id="2023-04-12T18:11:32.124Z" name="Only aggs test" time="0"/>
    <testcase id="2023-04-12T18:11:32.481Z" name="Filtered test" time="0"/>
    <testcase id="2023-04-12T18:11:32.835Z" name="Missing field with missing param" time="0"/>
    <testcase id="2023-04-12T18:11:33.192Z" name="Missing field without missing param" time="0"/>
    <testcase id="2023-04-12T18:11:33.546Z" name="Metadata test" time="0"/>
    <testcase id="2023-04-12T18:11:33.903Z" name="Invalid params test" time="0"/>
    <testcase id="2023-04-12T18:11:34.262Z" name="Explicit Percents test" time="0"/>
    <testcase id="2023-04-12T18:11:34.620Z" name="Non-keyed test" time="0"/>
    <testcase id="2023-04-12T18:11:34.974Z" name="Negative values test" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:35.342Z" name="free/aggregations - /free/aggregations/percentiles_tdigest_metric.yml" time="2" tests="9" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:35.342Z" name="Basic test" time="0"/>
    <testcase id="2023-04-12T18:11:35.606Z" name="Only aggs test" time="0"/>
    <testcase id="2023-04-12T18:11:35.867Z" name="Filtered test" time="0"/>
    <testcase id="2023-04-12T18:11:36.127Z" name="Missing field with missing param" time="0"/>
    <testcase id="2023-04-12T18:11:36.385Z" name="Missing field without missing param" time="0"/>
    <testcase id="2023-04-12T18:11:36.644Z" name="Metadata test" time="0"/>
    <testcase id="2023-04-12T18:11:36.902Z" name="Invalid params test" time="0"/>
    <testcase id="2023-04-12T18:11:37.172Z" name="Explicit Percents test" time="0"/>
    <testcase id="2023-04-12T18:11:37.431Z" name="Non-keyed test" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:37.692Z" name="free/aggregations - /free/aggregations/pipeline.yml" time="3" tests="10" failures="0" skipped="5">
    <testcase id="2023-04-12T18:11:37.692Z" name="Max pipeline through terms agg" time="0"/>
    <testcase id="2023-04-12T18:11:37.955Z" name="Max pipeline on terms agg" time="0"/>
    <testcase id="2023-04-12T18:11:38.216Z" name="Max pipeline on percentiles tdigest agg without specifying percent" time="0"/>
    <testcase id="2023-04-12T18:11:38.472Z" name="Max pipeline on percentiles tdigest agg with single percent metric value" time="0">
      <skipped>{
  "version": " - 8.3.99",
  "reason": "behaviour changed in 8.4.0",
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:38.726Z" name="Max pipeline on percentiles tdigest agg with single percent metric field" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:38.977Z" name="Max pipeline on percentiles hdr agg without specifying percent" time="0"/>
    <testcase id="2023-04-12T18:11:39.238Z" name="Max pipeline on percentiles hdr agg with single percent metric value" time="0">
      <skipped>{
  "version": " - 8.3.99",
  "reason": "behaviour changed in 8.4.0",
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:39.488Z" name="Max pipeline on percentiles hdr agg with single percent metric field" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:39.744Z" name="Max pipeline on percentiles with incorrect name" time="0">
      <skipped>{
  "version": " - 8.3.99",
  "reason": "behaviour changed in 8.4.0",
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:40.009Z" name="deep cumulative sum" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:40.431Z" name="free/aggregations - /free/aggregations/random_sampler.yml" time="1" tests="3" failures="0" skipped="1">
    <testcase id="2023-04-12T18:11:40.431Z" name="Test random_sampler aggregation with no filter" time="0">
      <skipped>{
  "features": [
    "close_to"
  ],
  "version": " - 8.1.99",
  "reason": "added in 8.2.0"
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:40.693Z" name="Test random_sampler aggregation with filter" time="0"/>
    <testcase id="2023-04-12T18:11:40.970Z" name="Test random_sampler aggregation with poor settings" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:41.232Z" name="free/aggregations - /free/aggregations/range.yml" time="6" tests="12" failures="1" skipped="0">
    <testcase id="2023-04-12T18:11:41.232Z" name="Float Endpoint Exclusive" time="0"/>
    <testcase id="2023-04-12T18:11:41.664Z" name="Half Float Endpoint Exclusive" time="0"/>
    <testcase id="2023-04-12T18:11:42.118Z" name="Float range" time="0"/>
    <testcase id="2023-04-12T18:11:42.565Z" name="Double range" time="0"/>
    <testcase id="2023-04-12T18:11:43.015Z" name="Double range on long field" time="0"/>
    <testcase id="2023-04-12T18:11:43.463Z" name="Double range no decimal" time="0"/>
    <testcase id="2023-04-12T18:11:43.929Z" name="Double range with missing value" time="0"/>
    <testcase id="2023-04-12T18:11:44.401Z" name="Null to and from" time="1"/>
    <testcase id="2023-04-12T18:11:44.927Z" name="Range agg on long field" time="1"/>
    <testcase id="2023-04-12T18:11:45.474Z" name="Double range default keyed response" time="1"/>
    <testcase id="2023-04-12T18:11:46.011Z" name="Range aggregation on date field" time="1"/>
    <testcase id="2023-04-12T18:11:46.515Z" name="Min and max long range bounds" time="0">
      <failure message="should be equal: 0 - 1, action: {&quot;hits.total.value&quot;:1}" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: should be equal: 0 - 1, action: {"hits.total.value":1}
    at match (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:685:12)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:557:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:11:46.813Z" name="free/aggregations - /free/aggregations/range_timezone_bug.yml" time="0" tests="2" failures="2" skipped="0">
    <testcase id="2023-04-12T18:11:46.813Z" name="respect offsets in range bounds" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test/lY_IYY2OSkiok1u4HmUztQ] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test/lY_IYY2OSkiok1u4HmUztQ] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:46.829Z" name="offsets and timezones play nicely together" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test/lY_IYY2OSkiok1u4HmUztQ] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test/lY_IYY2OSkiok1u4HmUztQ] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:11:46.846Z" name="free/aggregations - /free/aggregations/rare_terms.yml" time="0" tests="11" failures="11" skipped="0">
    <testcase id="2023-04-12T18:11:46.846Z" name="Basic test" time="0">
      <failure message="should be equal: 12 - 3, action: {&quot;hits.total.value&quot;:3}" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: should be equal: 12 - 3, action: {"hits.total.value":3}
    at match (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:685:12)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:557:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:46.975Z" name="IP test" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:46.985Z" name="Boolean test" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:46.996Z" name="Integer test" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:47.006Z" name="Date test" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:47.017Z" name="Unmapped strings" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:47.028Z" name="Unmapped booleans" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:47.038Z" name="Unmapped dates" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:47.047Z" name="Unmapped longs" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:47.058Z" name="sub aggs" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:47.068Z" name="avg_bucket" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test_1/a--vQOmjQ4u-KyTAgftgsA] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:11:47.079Z" name="free/aggregations - /free/aggregations/sampler.yml" time="0" tests="2" failures="2" skipped="0">
    <testcase id="2023-04-12T18:11:47.079Z" name="small shard_size" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test/lY_IYY2OSkiok1u4HmUztQ] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test/lY_IYY2OSkiok1u4HmUztQ] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:47.093Z" name="default shard size" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test/lY_IYY2OSkiok1u4HmUztQ] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test/lY_IYY2OSkiok1u4HmUztQ] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:11:47.105Z" name="free/aggregations - /free/aggregations/serial_diff.yml" time="0" tests="4" failures="4" skipped="0">
    <testcase id="2023-04-12T18:11:47.105Z" name="basic" time="0">
      <failure message="should be equal: 15 - 3, action: {&quot;hits.total.value&quot;:3}" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: should be equal: 15 - 3, action: {"hits.total.value":3}
    at match (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:685:12)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:557:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:47.151Z" name="lag" time="0">
      <failure message="should be equal: 19 - 4, action: {&quot;hits.total.value&quot;:4}" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: should be equal: 19 - 4, action: {"hits.total.value":4}
    at match (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:685:12)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:557:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:47.177Z" name="parent has gap" time="0">
      <failure message="should be equal: 22 - 3, action: {&quot;hits.total.value&quot;:3}" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: should be equal: 22 - 3, action: {"hits.total.value":3}
    at match (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:685:12)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:557:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:11:47.201Z" name="parent has min_doc_count" time="0">
      <failure message="should be equal: 25 - 3, action: {&quot;hits.total.value&quot;:3}" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: should be equal: 25 - 3, action: {"hits.total.value":3}
    at match (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:685:12)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:557:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:11:47.227Z" name="free/aggregations - /free/aggregations/sig_terms.yml" time="2" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:47.227Z" name="Default index" time="0"/>
    <testcase id="2023-04-12T18:11:47.581Z" name="Test background filter count " time="0"/>
    <testcase id="2023-04-12T18:11:47.976Z" name="IP test" time="0"/>
    <testcase id="2023-04-12T18:11:48.275Z" name="Misspelled fields get &quot;did you mean&quot;" time="0"/>
    <testcase id="2023-04-12T18:11:48.452Z" name="Test alias background filter" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:48.768Z" name="free/aggregations - /free/aggregations/significant_text.yml" time="3" tests="11" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:48.768Z" name="simple" time="0"/>
    <testcase id="2023-04-12T18:11:49.059Z" name="Dedup noise" time="0"/>
    <testcase id="2023-04-12T18:11:49.427Z" name="profile" time="0"/>
    <testcase id="2023-04-12T18:11:49.690Z" name="include" time="0"/>
    <testcase id="2023-04-12T18:11:49.937Z" name="exclude" time="0"/>
    <testcase id="2023-04-12T18:11:50.188Z" name="min_doc_count" time="0"/>
    <testcase id="2023-04-12T18:11:50.442Z" name="size" time="0"/>
    <testcase id="2023-04-12T18:11:50.709Z" name="shard_size" time="0"/>
    <testcase id="2023-04-12T18:11:50.963Z" name="significance_heuristics" time="0"/>
    <testcase id="2023-04-12T18:11:51.266Z" name="background_filter" time="0"/>
    <testcase id="2023-04-12T18:11:51.613Z" name="copy_to" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:51.956Z" name="free/aggregations - /free/aggregations/significant_texts.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:51.956Z" name="significant_texts all terms" time="0"/>
    <testcase id="2023-04-12T18:11:52.216Z" name="significant_texts limited size" time="0"/>
    <testcase id="2023-04-12T18:11:52.475Z" name="significant_texts with min_doc_count" time="0"/>
    <testcase id="2023-04-12T18:11:52.726Z" name="significant_texts with exclude" time="0"/>
    <testcase id="2023-04-12T18:11:52.989Z" name="significant_texts with include" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:53.243Z" name="free/aggregations - /free/aggregations/stats_bucket.yml" time="2" tests="5" failures="0" skipped="5">
    <testcase id="2023-04-12T18:11:53.243Z" name="basic" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:53.589Z" name="format" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:53.939Z" name="gap_policy=skip" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:54.294Z" name="gap_policy=insert_zeros" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:11:54.659Z" name="gap_policy=keep_value" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:11:55.014Z" name="free/aggregations - /free/aggregations/stats_metric.yml" time="2" tests="6" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:55.014Z" name="Basic test" time="0"/>
    <testcase id="2023-04-12T18:11:55.275Z" name="Only aggs test" time="0"/>
    <testcase id="2023-04-12T18:11:55.531Z" name="Filtered test" time="0"/>
    <testcase id="2023-04-12T18:11:55.785Z" name="Missing field with missing param" time="0"/>
    <testcase id="2023-04-12T18:11:56.048Z" name="Missing field without missing param" time="0"/>
    <testcase id="2023-04-12T18:11:56.304Z" name="Metadata test" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:56.566Z" name="free/aggregations - /free/aggregations/sum_bucket.yml" time="3" tests="9" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:56.566Z" name="basic" time="0"/>
    <testcase id="2023-04-12T18:11:56.917Z" name="format" time="0"/>
    <testcase id="2023-04-12T18:11:57.274Z" name="gap_policy=skip" time="0"/>
    <testcase id="2023-04-12T18:11:57.633Z" name="gap_policy=insert_zeros" time="0"/>
    <testcase id="2023-04-12T18:11:58.007Z" name="gap_policy=keep_value" time="0"/>
    <testcase id="2023-04-12T18:11:58.376Z" name="dotted name" time="0"/>
    <testcase id="2023-04-12T18:11:58.737Z" name="dotted value" time="0"/>
    <testcase id="2023-04-12T18:11:59.089Z" name="no results" time="0"/>
    <testcase id="2023-04-12T18:11:59.450Z" name="bad path" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:11:59.800Z" name="free/aggregations - /free/aggregations/sum_metric.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2023-04-12T18:11:59.800Z" name="Basic test" time="0"/>
    <testcase id="2023-04-12T18:12:00.048Z" name="Only aggs test" time="0"/>
    <testcase id="2023-04-12T18:12:00.298Z" name="Filtered test" time="0"/>
    <testcase id="2023-04-12T18:12:00.543Z" name="Missing field with missing param" time="0"/>
    <testcase id="2023-04-12T18:12:00.791Z" name="Missing field without missing param" time="0"/>
    <testcase id="2023-04-12T18:12:01.039Z" name="Metadata test" time="0"/>
    <testcase id="2023-04-12T18:12:01.289Z" name="Aggregating wrong datatype test" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:01.541Z" name="free/aggregations - /free/aggregations/terms.yml" time="10" tests="29" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:01.541Z" name="Basic test" time="0"/>
    <testcase id="2023-04-12T18:12:01.884Z" name="IP test" time="0"/>
    <testcase id="2023-04-12T18:12:02.232Z" name="Boolean test" time="0"/>
    <testcase id="2023-04-12T18:12:02.565Z" name="Integer test" time="0"/>
    <testcase id="2023-04-12T18:12:02.896Z" name="Double test" time="0"/>
    <testcase id="2023-04-12T18:12:03.229Z" name="Date test" time="0"/>
    <testcase id="2023-04-12T18:12:03.566Z" name="Partitioned string test" time="0"/>
    <testcase id="2023-04-12T18:12:03.903Z" name="Partitioned integer test" time="0"/>
    <testcase id="2023-04-12T18:12:04.240Z" name="Unmapped strings" time="0"/>
    <testcase id="2023-04-12T18:12:04.568Z" name="Unmapped booleans" time="0"/>
    <testcase id="2023-04-12T18:12:04.899Z" name="Unmapped dates" time="0"/>
    <testcase id="2023-04-12T18:12:05.231Z" name="Unmapped longs" time="0"/>
    <testcase id="2023-04-12T18:12:05.564Z" name="Unmapped doubles" time="0"/>
    <testcase id="2023-04-12T18:12:05.893Z" name="Mixing longs and doubles" time="0"/>
    <testcase id="2023-04-12T18:12:06.231Z" name="Global ordinals are not loaded with the map execution hint" time="0"/>
    <testcase id="2023-04-12T18:12:06.583Z" name="Global ordinals are loaded with the global_ordinals execution hint" time="0"/>
    <testcase id="2023-04-12T18:12:06.926Z" name="No field or script" time="0"/>
    <testcase id="2023-04-12T18:12:07.243Z" name="string profiler via global ordinals filters implementation" time="0"/>
    <testcase id="2023-04-12T18:12:07.579Z" name="string profiler via global ordinals native implementation" time="0"/>
    <testcase id="2023-04-12T18:12:08.007Z" name="string profiler via map" time="0"/>
    <testcase id="2023-04-12T18:12:08.334Z" name="numeric profiler" time="0"/>
    <testcase id="2023-04-12T18:12:08.661Z" name="min_doc_count" time="0"/>
    <testcase id="2023-04-12T18:12:08.993Z" name="order by sub agg" time="0"/>
    <testcase id="2023-04-12T18:12:09.328Z" name="order by sub agg containing nested" time="0"/>
    <testcase id="2023-04-12T18:12:09.689Z" name="order by sub agg containing filter" time="0"/>
    <testcase id="2023-04-12T18:12:10.057Z" name="precise size" time="0"/>
    <testcase id="2023-04-12T18:12:10.396Z" name="huge size" time="0"/>
    <testcase id="2023-04-12T18:12:10.740Z" name="Value type mismatch fails shard" time="1"/>
    <testcase id="2023-04-12T18:12:11.262Z" name="Value type mismatch fails shard with no docs" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:11.766Z" name="free/aggregations - /free/aggregations/terms_disable_opt.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:11.766Z" name="disable optimization" time="0"/>
    <testcase id="2023-04-12T18:12:12.090Z" name="enable optimization" time="0"/>
    <testcase id="2023-04-12T18:12:12.423Z" name="enabled by default" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:12.709Z" name="free/aggregations - /free/aggregations/terms_flattened_field.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:12.709Z" name="Key exists, no missing values" time="0"/>
    <testcase id="2023-04-12T18:12:12.982Z" name="Key exists, missing values, missing specified" time="0"/>
    <testcase id="2023-04-12T18:12:13.246Z" name="Key exists, missing values, missing not specified" time="0"/>
    <testcase id="2023-04-12T18:12:13.508Z" name="Key does not exist, missing specified" time="0"/>
    <testcase id="2023-04-12T18:12:13.771Z" name="Key does not exist, missing not specified" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:14.029Z" name="free/aggregations - /free/aggregations/time_series.yml" time="2" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:14.029Z" name="Basic test" time="0"/>
    <testcase id="2023-04-12T18:12:14.420Z" name="Size test" time="0"/>
    <testcase id="2023-04-12T18:12:14.727Z" name="Sampler aggregation with nested time series aggregation failure" time="0"/>
    <testcase id="2023-04-12T18:12:15.027Z" name="Composite aggregation with nested time series aggregation failure" time="0"/>
    <testcase id="2023-04-12T18:12:15.343Z" name="Global aggregation with nested time series aggregation failure" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:15.653Z" name="free/aggregations - /free/aggregations/top_hits.yml" time="4" tests="13" failures="0" skipped="1">
    <testcase id="2023-04-12T18:12:15.653Z" name="highlight" time="0"/>
    <testcase id="2023-04-12T18:12:15.962Z" name="highlight_query" time="0"/>
    <testcase id="2023-04-12T18:12:16.233Z" name="explain" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:16.503Z" name="from" time="0"/>
    <testcase id="2023-04-12T18:12:16.775Z" name="size" time="0"/>
    <testcase id="2023-04-12T18:12:17.051Z" name="named queries" time="0"/>
    <testcase id="2023-04-12T18:12:17.333Z" name="fetch fields" time="0"/>
    <testcase id="2023-04-12T18:12:17.617Z" name="source filtering" time="0"/>
    <testcase id="2023-04-12T18:12:17.885Z" name="stored fields" time="0"/>
    <testcase id="2023-04-12T18:12:18.154Z" name="docvalue fields" time="0"/>
    <testcase id="2023-04-12T18:12:18.419Z" name="version" time="0"/>
    <testcase id="2023-04-12T18:12:18.681Z" name="sequence number and primary term" time="0"/>
    <testcase id="2023-04-12T18:12:18.946Z" name="synthetic _source" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:19.318Z" name="free/aggregations - /free/aggregations/top_hits_nested_metric.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:19.318Z" name="top_hits aggregation with nested documents" time="0"/>
    <testcase id="2023-04-12T18:12:19.639Z" name="top_hits aggregation with nested documents and disabled _source" time="0"/>
    <testcase id="2023-04-12T18:12:20.053Z" name="top_hits aggregation with sequence numbers" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:20.363Z" name="free/aggregations - /free/aggregations/typed_keys.yml" time="3" tests="13" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:20.363Z" name="Test typed keys parameter for avg aggregation" time="0"/>
    <testcase id="2023-04-12T18:12:20.633Z" name="Test typed keys parameter for cardinality aggregation" time="0"/>
    <testcase id="2023-04-12T18:12:20.898Z" name="Test typed keys parameter for extended_stats aggregation" time="0"/>
    <testcase id="2023-04-12T18:12:21.161Z" name="Test typed keys parameter for max aggregation" time="0"/>
    <testcase id="2023-04-12T18:12:21.423Z" name="Test typed keys parameter for min aggregation" time="0"/>
    <testcase id="2023-04-12T18:12:21.683Z" name="Test typed keys parameter for percentiles aggregation" time="0"/>
    <testcase id="2023-04-12T18:12:21.938Z" name="Test typed keys parameter for percentile_ranks aggregation" time="0"/>
    <testcase id="2023-04-12T18:12:22.202Z" name="Test typed keys parameter for stats aggregation" time="0"/>
    <testcase id="2023-04-12T18:12:22.466Z" name="Test typed keys parameter for sum aggregation" time="0"/>
    <testcase id="2023-04-12T18:12:22.743Z" name="Test typed keys parameter for terms and top_hits aggregation" time="0"/>
    <testcase id="2023-04-12T18:12:23.011Z" name="Test typed keys parameter for terms aggregation" time="0"/>
    <testcase id="2023-04-12T18:12:23.273Z" name="Test typed keys parameter for value_count aggregation" time="0"/>
    <testcase id="2023-04-12T18:12:23.533Z" name="Test typed keys parameter for date_histogram aggregation and max_bucket pipeline aggregation" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:23.789Z" name="free/aggregations - /free/aggregations/value_count_metric.yml" time="1" tests="6" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:23.789Z" name="Basic test" time="0"/>
    <testcase id="2023-04-12T18:12:24.038Z" name="Only aggs test" time="0"/>
    <testcase id="2023-04-12T18:12:24.285Z" name="Filtered test" time="0"/>
    <testcase id="2023-04-12T18:12:24.531Z" name="Missing field with missing param" time="0"/>
    <testcase id="2023-04-12T18:12:24.793Z" name="Missing field without missing param" time="0"/>
    <testcase id="2023-04-12T18:12:25.040Z" name="Metadata test" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:25.286Z" name="free/aggregations - /free/aggregations/variable_width_histogram.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:25.286Z" name="defaults" time="0"/>
    <testcase id="2023-04-12T18:12:25.540Z" name="num_buckets" time="0"/>
    <testcase id="2023-04-12T18:12:25.788Z" name="shard_size" time="0"/>
    <testcase id="2023-04-12T18:12:26.041Z" name="initial_buffer" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:26.296Z" name="free/aggregations - /free/aggregations/weighted_avg.yml" time="2" tests="8" failures="0" skipped="7">
    <testcase id="2023-04-12T18:12:26.296Z" name="Basic test" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:26.541Z" name="Value with explicit missing configuration" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:26.793Z" name="Weight with explicit missing configuration" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:27.041Z" name="Missing value results in skipping document" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:27.287Z" name="Missing weight results in skipping document" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:27.536Z" name="Sum of weights equal to zero results in null weighted average" time="0"/>
    <testcase id="2023-04-12T18:12:27.782Z" name="Multi value field" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:28.029Z" name="Multi weight field not allowed" time="0">
      <skipped>{
  "features": [
    "close_to"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:12:28.280Z" name="free/bulk - /free/bulk/10_basic.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:28.280Z" name="Array of objects" time="0"/>
    <testcase id="2023-04-12T18:12:28.539Z" name="Empty _id" time="0"/>
    <testcase id="2023-04-12T18:12:28.801Z" name="Empty _id with op_type create" time="0"/>
    <testcase id="2023-04-12T18:12:29.061Z" name="empty action" time="0"/>
    <testcase id="2023-04-12T18:12:29.211Z" name="When setting require_alias flag per request" time="0"/>
    <testcase id="2023-04-12T18:12:29.562Z" name="When setting require_alias flag" time="0"/>
    <testcase id="2023-04-12T18:12:29.898Z" name="Return item-level error when no write index defined for an alias" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:30.237Z" name="free/bulk - /free/bulk/11_dynamic_templates.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:30.237Z" name="Dynamic templates" time="0"/>
    <testcase id="2023-04-12T18:12:30.562Z" name="Dynamic templates with op_type" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:30.826Z" name="free/bulk - /free/bulk/20_list_of_strings.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:30.826Z" name="List of strings" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:31.086Z" name="free/bulk - /free/bulk/30_big_string.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:31.086Z" name="One big string" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:31.342Z" name="free/bulk - /free/bulk/40_source.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:31.342Z" name="Source filtering" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:31.648Z" name="free/bulk - /free/bulk/50_refresh.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:31.649Z" name="refresh=true immediately makes changes are visible in search" time="0"/>
    <testcase id="2023-04-12T18:12:31.908Z" name="refresh=empty string immediately makes changes are visible in search" time="0"/>
    <testcase id="2023-04-12T18:12:32.171Z" name="refresh=wait_for waits until changes are visible in search" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:33.372Z" name="free/bulk - /free/bulk/60_deprecated.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:33.372Z" name="Deprecated parameters should fail in Bulk query" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:33.524Z" name="free/bulk - /free/bulk/80_cas.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:33.524Z" name="Compare And Swap Sequence Numbers" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:33.782Z" name="free/bulk - /free/bulk/90_pipeline.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:33.782Z" name="One request has pipeline and another not" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:34.044Z" name="free/cat.aliases - /free/cat.aliases/10_basic.yml" time="3" tests="15" failures="0" skipped="6">
    <testcase id="2023-04-12T18:12:34.044Z" name="Help" time="0"/>
    <testcase id="2023-04-12T18:12:34.192Z" name="Help (pre 7.4.0)" time="0">
      <skipped>{
  "version": "7.4.0 - ",
  "features": "node_selector",
  "reason": "is_write_index is shown in cat.aliases starting version 7.4.0"
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:34.341Z" name="Empty cluster" time="0"/>
    <testcase id="2023-04-12T18:12:34.495Z" name="Simple alias" time="0"/>
    <testcase id="2023-04-12T18:12:34.745Z" name="Simple alias (pre 7.4.0)" time="0">
      <skipped>{
  "version": "7.4.0 - ",
  "features": "node_selector",
  "reason": "is_write_index is shown in cat.aliases starting version 7.4.0"
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:34.896Z" name="Complex alias" time="0"/>
    <testcase id="2023-04-12T18:12:35.150Z" name="Complex alias (pre 7.4.0)" time="0">
      <skipped>{
  "version": "7.4.0 - ",
  "features": "node_selector",
  "reason": "is_write_index is shown in cat.aliases starting version 7.4.0"
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:35.299Z" name="Alias name" time="0"/>
    <testcase id="2023-04-12T18:12:35.562Z" name="Multiple alias names" time="0"/>
    <testcase id="2023-04-12T18:12:35.981Z" name="Column headers" time="0"/>
    <testcase id="2023-04-12T18:12:36.229Z" name="Column headers (pre 7.4.0)" time="0">
      <skipped>{
  "version": "7.4.0 - ",
  "features": "node_selector",
  "reason": "is_write_index is shown in cat.aliases starting version 7.4.0"
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:36.379Z" name="Select columns" time="0"/>
    <testcase id="2023-04-12T18:12:36.627Z" name="Alias against closed index" time="0">
      <skipped>{
  "version": " - 7.3.99",
  "reason": "is_write_index is shown in cat.aliases starting version 7.4.0",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:36.776Z" name="Alias against closed index (pre 7.4.0)" time="0">
      <skipped>{
  "version": "7.4.0 - ",
  "features": [
    "node_selector",
    "allowed_warnings"
  ],
  "reason": "is_write_index is shown in cat.aliases starting version 7.4.0"
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:36.927Z" name="Alias sorting" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:37.239Z" name="free/cat.aliases - /free/cat.aliases/20_headers.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2023-04-12T18:12:37.239Z" name="Simple alias with yaml body through Accept header" time="0">
      <skipped>{
  "features": [
    "headers",
    "yaml"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:12:37.391Z" name="free/cat.aliases - /free/cat.aliases/30_json.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:37.391Z" name="Simple alias with json body through format argument" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:37.646Z" name="free/cat.aliases - /free/cat.aliases/40_hidden.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:37.646Z" name="Test cat aliases output with a hidden index with a hidden alias" time="0"/>
    <testcase id="2023-04-12T18:12:37.886Z" name="Test cat aliases output with a hidden index with a visible alias" time="0"/>
    <testcase id="2023-04-12T18:12:38.133Z" name="Test cat aliases output with a visible index with a hidden alias" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:38.374Z" name="free/cat.allocation - /free/cat.allocation/10_basic.yml" time="0" tests="7" failures="0" skipped="7">
    <testcase id="2023-04-12T18:12:38.374Z" name="Help" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:38.374Z" name="One index" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:38.374Z" name="Node ID" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:38.374Z" name="All Nodes" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:38.374Z" name="Column headers" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:38.374Z" name="Select columns" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:38.374Z" name="Bytes" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:12:38.375Z" name="free/cat.count - /free/cat.count/10_basic.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:38.375Z" name="Test cat count help" time="0"/>
    <testcase id="2023-04-12T18:12:38.526Z" name="Test cat count output" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:38.893Z" name="free/cat.fielddata - /free/cat.fielddata/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:38.893Z" name="Help" time="0"/>
    <testcase id="2023-04-12T18:12:39.046Z" name="Test cat fielddata output" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:39.313Z" name="free/cat.health - /free/cat.health/10_basic.yml" time="0" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:39.313Z" name="Help" time="0"/>
    <testcase id="2023-04-12T18:12:39.464Z" name="Empty cluster" time="0"/>
    <testcase id="2023-04-12T18:12:39.615Z" name="With ts parameter" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:39.767Z" name="free/cat.indices - /free/cat.indices/10_basic.yml" time="2" tests="8" failures="0" skipped="3">
    <testcase id="2023-04-12T18:12:39.767Z" name="Test cat indices output (no indices)" time="0"/>
    <testcase id="2023-04-12T18:12:39.924Z" name="Test cat indices output" time="0"/>
    <testcase id="2023-04-12T18:12:40.161Z" name="Test cat indices output for closed index (pre 7.2.0)" time="0">
      <skipped>{
  "version": "7.2.0 - ",
  "reason": "closed indices are replicated starting version 7.2.0",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:40.312Z" name="Test cat indices output for closed index" time="0">
      <skipped>{
  "version": " - 7.1.99",
  "reason": "closed indices are replicated starting version 7.2.0",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:40.461Z" name="Test cat indices using health status" time="0"/>
    <testcase id="2023-04-12T18:12:40.772Z" name="Test cat indices using wildcards" time="0"/>
    <testcase id="2023-04-12T18:12:41.161Z" name="Test cat indices sort" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:41.312Z" name="Test cat indices with invalid health parameter" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:41.550Z" name="free/cat.indices - /free/cat.indices/20_hidden.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:41.550Z" name="Test cat indices output for hidden index" time="0"/>
    <testcase id="2023-04-12T18:12:41.789Z" name="Test cat indices output for dot-hidden index and dot-prefixed pattern" time="0"/>
    <testcase id="2023-04-12T18:12:42.031Z" name="Test cat indices output with a hidden index with a visible alias" time="0"/>
    <testcase id="2023-04-12T18:12:42.268Z" name="Test cat indices output with a hidden index with a hidden alias" time="0"/>
    <testcase id="2023-04-12T18:12:42.508Z" name="Test cat indices output with a hidden index, dot-hidden alias and dot pattern" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:42.746Z" name="free/cat.nodeattrs - /free/cat.nodeattrs/10_basic.yml" time="6" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:42.746Z" name="Help" time="0"/>
    <testcase id="2023-04-12T18:12:42.899Z" name="Test cat nodes attrs output" time="6"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:48.657Z" name="free/cat.nodes - /free/cat.nodes/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:48.658Z" name="Test cat nodes output" time="0"/>
    <testcase id="2023-04-12T18:12:48.837Z" name="Additional disk information" time="0"/>
    <testcase id="2023-04-12T18:12:49.005Z" name="Test cat nodes output with full_id set" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:49.171Z" name="free/cat.plugins - /free/cat.plugins/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:49.171Z" name="Help" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:49.333Z" name="free/cat.recovery - /free/cat.recovery/10_basic.yml" time="0" tests="2" failures="0" skipped="1">
    <testcase id="2023-04-12T18:12:49.333Z" name="Test cat recovery output" time="0"/>
    <testcase id="2023-04-12T18:12:49.623Z" name="Test cat recovery output for closed index" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "format of bytes output changed in 8.0.0",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:12:49.783Z" name="free/cat.repositories - /free/cat.repositories/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:49.783Z" name="Help" time="0"/>
    <testcase id="2023-04-12T18:12:49.942Z" name="Test cat repositories output" time="0"/>
    <testcase id="2023-04-12T18:12:50.243Z" name="Test cat repositories sort" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:50.526Z" name="free/cat.segments - /free/cat.segments/10_basic.yml" time="2" tests="5" failures="0" skipped="1">
    <testcase id="2023-04-12T18:12:50.526Z" name="Help" time="0"/>
    <testcase id="2023-04-12T18:12:50.685Z" name="Test cat segments output" time="0"/>
    <testcase id="2023-04-12T18:12:51.163Z" name="Test cat segments on closed index behaviour" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:51.320Z" name="Test cat segments using wildcards" time="1"/>
    <testcase id="2023-04-12T18:12:51.829Z" name="tsdb" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:52.115Z" name="free/cat.shards - /free/cat.shards/10_basic.yml" time="2" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:52.115Z" name="Help" time="0"/>
    <testcase id="2023-04-12T18:12:52.280Z" name="Test cat shards output" time="1"/>
    <testcase id="2023-04-12T18:12:52.871Z" name="Test cat shards using wildcards" time="0"/>
    <testcase id="2023-04-12T18:12:53.294Z" name="Test cat shards sort" time="0"/>
    <testcase id="2023-04-12T18:12:53.661Z" name="Test cat shards with hidden indices" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:53.951Z" name="free/cat.snapshots - /free/cat.snapshots/10_basic.yml" time="0" tests="2" failures="0" skipped="1">
    <testcase id="2023-04-12T18:12:53.951Z" name="Help" time="0"/>
    <testcase id="2023-04-12T18:12:54.109Z" name="Test cat snapshots output" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:12:54.109Z" name="free/cat.tasks - /free/cat.tasks/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:54.109Z" name="Test cat tasks output" time="0"/>
    <testcase id="2023-04-12T18:12:54.274Z" name="Test cat tasks output with X-Opaque-Id" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:54.434Z" name="free/cat.templates - /free/cat.templates/10_basic.yml" time="2" tests="9" failures="0" skipped="4">
    <testcase id="2023-04-12T18:12:54.434Z" name="Help" time="0"/>
    <testcase id="2023-04-12T18:12:54.593Z" name="No templates" time="0">
      <skipped>{
  "features": [
    "default_shards, no_xpack"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:54.747Z" name="Normal templates" time="0"/>
    <testcase id="2023-04-12T18:12:54.969Z" name="Filtered templates" time="0"/>
    <testcase id="2023-04-12T18:12:55.188Z" name="Column headers" time="0"/>
    <testcase id="2023-04-12T18:12:55.375Z" name="Select columns" time="0"/>
    <testcase id="2023-04-12T18:12:55.560Z" name="Sort templates" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "format changed in 7.8 to accomodate V2 index templates",
  "features": [
    "default_shards, no_xpack"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:55.717Z" name="Multiple template" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "format changed in 7.8 to accomodate V2 index templates",
  "features": [
    "default_shards, no_xpack"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:55.874Z" name="Mixture of legacy and composable templates" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "format changed in 7.8 to accomodate V2 index templates",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:12:56.036Z" name="free/cat.templates - /free/cat.templates/20_matching.yml" time="0" tests="5" failures="0" skipped="5">
    <testcase id="2023-04-12T18:12:56.036Z" name="Matching all templates" time="0">
      <skipped>{
  "features": [
    "allowed_warnings_regex"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:56.036Z" name="Matching no templates" time="0">
      <skipped>{
  "features": [
    "allowed_warnings_regex"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:56.036Z" name="Matching single names" time="0">
      <skipped>{
  "features": [
    "allowed_warnings_regex"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:56.036Z" name="Matching single patterns" time="0">
      <skipped>{
  "features": [
    "allowed_warnings_regex"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:56.036Z" name="Reject request containing comma" time="0">
      <skipped>{
  "features": [
    "allowed_warnings_regex"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:12:56.036Z" name="free/cat.thread_pool - /free/cat.thread_pool/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:56.036Z" name="Test cat thread_pool output" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:56.212Z" name="free/cluster.allocation_explain - /free/cluster.allocation_explain/10_basic.yml" time="1" tests="4" failures="0" skipped="1">
    <testcase id="2023-04-12T18:12:56.212Z" name="bad cluster shard allocation explanation request" time="0"/>
    <testcase id="2023-04-12T18:12:56.375Z" name="cluster shard allocation explanation test" time="0"/>
    <testcase id="2023-04-12T18:12:56.627Z" name="cluster shard allocation explanation test with empty request" time="0"/>
    <testcase id="2023-04-12T18:12:56.885Z" name="Cluster shard allocation explanation test with a closed index" time="0">
      <skipped>{
  "version": " - 7.1.99",
  "reason": "closed indices are replicated starting version 7.2.0",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:12:57.040Z" name="free/cluster.component_template - /free/cluster.component_template/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:57.040Z" name="Basic CRUD" time="0"/>
    <testcase id="2023-04-12T18:12:57.232Z" name="Delete multiple templates" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:57.489Z" name="free/cluster.desired_balance - /free/cluster.desired_balance/10_basic.yml" time="0" tests="3" failures="0" skipped="3">
    <testcase id="2023-04-12T18:12:57.489Z" name="Test empty desired balance" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.489Z" name="Test cluster_balance_stats" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.490Z" name="Test get desired balance for single shard" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:12:57.492Z" name="free/cluster.desired_nodes - /free/cluster.desired_nodes/10_basic.yml" time="0" tests="47" failures="0" skipped="47">
    <testcase id="2023-04-12T18:12:57.492Z" name="Test update desired nodes" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test update move to a new history id" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test delete desired nodes" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test update desired nodes is idempotent" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test update desired nodes is idempotent with different order" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test going backwards within the same history is forbidden" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test using the same version with different definition is forbidden" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test settings are validated" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test unknown settings are forbidden in known versions" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test unknown settings are allowed in future versions" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test some settings can be overridden" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test external_id or node.name is required" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test external_id must have content" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test duplicated external ids are not allowed" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test version must be a number" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test version must be positive" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test node version must be at least the current master version" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test history_id must be present" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test at least one node must be sent" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test at least one master node is present " time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test node settings are required" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test node settings can not be null" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test node processors are required" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test node memory is required" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test node memory can not be null" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test node storage is required" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test node storage can not be null" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test node version is required" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test node version must have content" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test node version can not be null" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test update desired nodes using processors range field" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test processors min and max are required" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test processors min is required" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test processors max is not required" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test min processors should be less than or equal to max processors" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test processors reject NaN" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test processors reject positive infinity number" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test processors reject negative infinity number" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test processors range min reject NaN" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test processors range min reject positive infinity number" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test processors range min reject negative infinity number" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test processors range min rejects 0.0" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test processors range max reject NaN" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test processors range max reject positive infinity number" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test processors range max reject negative infinity number" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test processors range max rejects 0.0" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.492Z" name="Test processors and processors range are exclusive" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:12:57.493Z" name="free/cluster.desired_nodes - /free/cluster.desired_nodes/20_dry_run.yml" time="0" tests="4" failures="0" skipped="4">
    <testcase id="2023-04-12T18:12:57.493Z" name="Test dry run doesn't update empty desired nodes" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.493Z" name="Test dry run doesn't update existing desired nodes" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.493Z" name="Test validation works for dry run updates" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:57.493Z" name="Test misspelled dry run" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:12:57.493Z" name="free/cluster.health - /free/cluster.health/10_basic.yml" time="2" tests="8" failures="0" skipped="2">
    <testcase id="2023-04-12T18:12:57.493Z" name="cluster health basic test" time="0"/>
    <testcase id="2023-04-12T18:12:57.653Z" name="cluster health basic test, one index" time="0"/>
    <testcase id="2023-04-12T18:12:57.896Z" name="cluster health basic test, one index with wait for active shards" time="0"/>
    <testcase id="2023-04-12T18:12:58.131Z" name="cluster health basic test, one index with wait for all active shards" time="0"/>
    <testcase id="2023-04-12T18:12:58.366Z" name="cluster health basic test, one index with wait for no initializing shards" time="0"/>
    <testcase id="2023-04-12T18:12:58.604Z" name="cluster health levels" time="0"/>
    <testcase id="2023-04-12T18:12:58.847Z" name="cluster health with closed index (pre 7.2.0)" time="0">
      <skipped>{
  "version": "7.2.0 - ",
  "reason": "closed indices are replicated starting version 7.2.0",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:58.998Z" name="cluster health with closed index" time="0">
      <skipped>{
  "version": " - 7.1.99",
  "reason": "closed indices are replicated starting version 7.2.0",
  "features": [
    "allowed_warnings",
    "default_shards"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:12:59.154Z" name="free/cluster.health - /free/cluster.health/20_request_timeout.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:59.154Z" name="cluster health request timeout on waiting for nodes" time="0"/>
    <testcase id="2023-04-12T18:12:59.315Z" name="cluster health request timeout waiting for active shards" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:59.469Z" name="free/cluster.health - /free/cluster.health/30_indices_options.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2023-04-12T18:12:59.469Z" name="cluster health with expand_wildcards" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:12:59.470Z" name="free/cluster.pending_tasks - /free/cluster.pending_tasks/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:59.470Z" name="Test pending tasks" time="0"/>
    <testcase id="2023-04-12T18:12:59.623Z" name="Test pending tasks with local flag" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:12:59.770Z" name="free/cluster.prevalidate_node_removal - /free/cluster.prevalidate_node_removal/10_basic.yml" time="0" tests="4" failures="0" skipped="4">
    <testcase id="2023-04-12T18:12:59.770Z" name="Prevalidation basic test" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:59.770Z" name="Prevalidation with no node specified" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:59.770Z" name="Prevalidation with more than one query parameter" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:12:59.770Z" name="Prevalidation with non-existing node" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:12:59.770Z" name="free/cluster.put_settings - /free/cluster.put_settings/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:12:59.770Z" name="Test put and reset transient settings" time="0"/>
    <testcase id="2023-04-12T18:12:59.939Z" name="Test put and reset persistent settings" time="0"/>
    <testcase id="2023-04-12T18:13:00.127Z" name="Test get a default settings" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:00.294Z" name="free/cluster.remote_info - /free/cluster.remote_info/10_info.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:00.294Z" name="Get an empty remote info" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:00.446Z" name="free/cluster.reroute - /free/cluster.reroute/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:00.446Z" name="Basic sanity check" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:00.603Z" name="free/cluster.reroute - /free/cluster.reroute/11_explain.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:00.603Z" name="Explain API with empty command list" time="0"/>
    <testcase id="2023-04-12T18:13:00.840Z" name="Explain API for non-existent node &amp; shard" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:01.083Z" name="free/cluster.reroute - /free/cluster.reroute/20_deprecated_response_filtering.yml" time="0" tests="2" failures="0" skipped="2">
    <testcase id="2023-04-12T18:13:01.083Z" name="Do not return metadata by default and produce deprecation warning" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:13:01.235Z" name="If requested return metadata and produce deprecation warning" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:13:01.387Z" name="free/cluster.state - /free/cluster.state/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:01.387Z" name="get cluster state" time="0"/>
    <testcase id="2023-04-12T18:13:01.553Z" name="get cluster state returns cluster_uuid at the top level" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:01.719Z" name="free/cluster.state - /free/cluster.state/20_filtering.yml" time="3" tests="10" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:01.719Z" name="Filtering the cluster state by blocks should return the blocks field even if the response is empty" time="0"/>
    <testcase id="2023-04-12T18:13:01.974Z" name="Filtering the cluster state by blocks should return the blocks" time="0"/>
    <testcase id="2023-04-12T18:13:02.264Z" name="Filtering the cluster state by nodes only should work" time="0"/>
    <testcase id="2023-04-12T18:13:02.521Z" name="Filtering the cluster state by metadata only should work" time="0"/>
    <testcase id="2023-04-12T18:13:02.787Z" name="Filtering the cluster state by routing table only should work" time="0"/>
    <testcase id="2023-04-12T18:13:03.044Z" name="Filtering the cluster state by routing nodes only should work" time="0"/>
    <testcase id="2023-04-12T18:13:03.296Z" name="Filtering the cluster state by indices should work in routing table and metadata" time="0"/>
    <testcase id="2023-04-12T18:13:03.659Z" name="Filtering the cluster state using _all for indices and metrics should work" time="0"/>
    <testcase id="2023-04-12T18:13:03.928Z" name="Filtering the cluster state by indices using wildcards should work in routing table and metadata" time="0"/>
    <testcase id="2023-04-12T18:13:04.363Z" name="Filtering the cluster state returns cluster_uuid at the top level regardless of metric filters" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:04.634Z" name="free/cluster.state - /free/cluster.state/30_expand_wildcards.yml" time="0" tests="3" failures="0" skipped="3">
    <testcase id="2023-04-12T18:13:04.634Z" name="Test expand_wildcards parameter on closed, open indices and both" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:13:04.634Z" name="Test ignore_unavailable parameter" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:13:04.634Z" name="Test allow_no_indices parameter" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:13:04.634Z" name="free/cluster.stats - /free/cluster.stats/10_basic.yml" time="1" tests="7" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:04.634Z" name="cluster stats test" time="0"/>
    <testcase id="2023-04-12T18:13:04.798Z" name="get cluster stats returns cluster_uuid at the top level" time="0"/>
    <testcase id="2023-04-12T18:13:04.949Z" name="get cluster stats returns discovery types" time="0"/>
    <testcase id="2023-04-12T18:13:05.102Z" name="get cluster stats returns packaging types" time="0"/>
    <testcase id="2023-04-12T18:13:05.254Z" name="get cluster stats without runtime fields" time="0"/>
    <testcase id="2023-04-12T18:13:05.493Z" name="Usage stats with script-less runtime fields" time="0"/>
    <testcase id="2023-04-12T18:13:05.745Z" name="mappings sizes reported in get cluster stats" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:06.010Z" name="free/cluster.stats - /free/cluster.stats/20_indexing_pressure.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:06.010Z" name="Indexing pressure cluster stats" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:06.162Z" name="free/cluster.voting_config_exclusions - /free/cluster.voting_config_exclusions/10_basic.yml" time="1" tests="7" failures="0" skipped="2">
    <testcase id="2023-04-12T18:13:06.162Z" name="Get cluster state without voting config exclusions" time="0"/>
    <testcase id="2023-04-12T18:13:06.328Z" name="Add voting config exclusion by unknown node Id" time="0"/>
    <testcase id="2023-04-12T18:13:06.523Z" name="Add voting config exclusion by unknown node Ids" time="0">
      <skipped>{
  "reason": "contains is a newly added assertion",
  "features": [
    "contains"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:13:06.681Z" name="Add voting config exclusion by unknown node name" time="0"/>
    <testcase id="2023-04-12T18:13:06.871Z" name="Add voting config exclusion by unknown node names" time="0">
      <skipped>{
  "reason": "contains is a newly added assertion",
  "features": [
    "contains"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:13:07.029Z" name="Throw exception when adding voting config exclusion without specifying nodes" time="0"/>
    <testcase id="2023-04-12T18:13:07.191Z" name="Throw exception when adding voting config exclusion and specifying both node_ids and node_names" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:07.353Z" name="free/count - /free/count/10_basic.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:07.353Z" name="count with body" time="0"/>
    <testcase id="2023-04-12T18:13:07.629Z" name="count with empty body" time="0"/>
    <testcase id="2023-04-12T18:13:07.901Z" name="count body without query element" time="0"/>
    <testcase id="2023-04-12T18:13:08.164Z" name="test negative terminate_after throws IAE" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:08.426Z" name="free/count - /free/count/20_query_string.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:08.426Z" name="count with query_string parameters" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:08.700Z" name="free/create - /free/create/10_with_id.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:08.700Z" name="Create with ID" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:08.966Z" name="free/create - /free/create/15_without_id.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:08.966Z" name="Create without ID" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:09.115Z" name="free/create - /free/create/35_external_version.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:09.115Z" name="External version" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:09.265Z" name="free/create - /free/create/40_routing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:09.265Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:09.648Z" name="free/create - /free/create/60_refresh.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:09.648Z" name="Refresh" time="0"/>
    <testcase id="2023-04-12T18:13:09.924Z" name="When refresh url parameter is an empty string that means &quot;refresh immediately&quot;" time="0"/>
    <testcase id="2023-04-12T18:13:10.186Z" name="refresh=wait_for waits until changes are visible in search" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:11.385Z" name="free/create - /free/create/70_nested.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:11.385Z" name="Indexing a doc with No. nested objects less or equal to index.mapping.nested_objects.limit should succeed" time="0"/>
    <testcase id="2023-04-12T18:13:11.642Z" name="Indexing a doc with No. nested objects more than index.mapping.nested_objects.limit should fail" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:11.881Z" name="free/delete - /free/delete/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:11.881Z" name="Basic" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:12.153Z" name="free/delete - /free/delete/11_shard_header.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:12.153Z" name="Delete check shard header" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:12.413Z" name="free/delete - /free/delete/12_result.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:12.413Z" name="Delete result field" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:12.700Z" name="free/delete - /free/delete/20_cas.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:12.700Z" name="Internal version" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:12.982Z" name="free/delete - /free/delete/25_external_version.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:12.982Z" name="External version" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:13.256Z" name="free/delete - /free/delete/26_external_gte_version.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:13.256Z" name="External GTE version" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:13.528Z" name="free/delete - /free/delete/30_routing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:13.528Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:13.915Z" name="free/delete - /free/delete/50_refresh.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:13.915Z" name="Refresh" time="0"/>
    <testcase id="2023-04-12T18:13:14.325Z" name="When refresh url parameter is an empty string that means &quot;refresh immediately&quot;" time="0"/>
    <testcase id="2023-04-12T18:13:14.602Z" name="refresh=wait_for waits until changes are visible in search" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:15.803Z" name="free/delete - /free/delete/60_missing.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:15.803Z" name="Missing document with catch" time="0"/>
    <testcase id="2023-04-12T18:13:15.952Z" name="Missing document with ignore" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:16.103Z" name="free/exists - /free/exists/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:16.103Z" name="Basic" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:16.372Z" name="free/exists - /free/exists/40_routing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:16.372Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:16.753Z" name="free/exists - /free/exists/60_realtime_refresh.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:16.753Z" name="Realtime Refresh" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:17.063Z" name="free/exists - /free/exists/70_defaults.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:17.063Z" name="Client-side default type" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:17.334Z" name="free/explain - /free/explain/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:17.334Z" name="Basic explain" time="0"/>
    <testcase id="2023-04-12T18:13:17.613Z" name="Basic explain with alias" time="0"/>
    <testcase id="2023-04-12T18:13:17.894Z" name="Explain body without query element" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:18.176Z" name="free/explain - /free/explain/20_source_filtering.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:18.176Z" name="Source filtering" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:18.457Z" name="free/explain - /free/explain/30_query_string.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:18.457Z" name="explain with query_string parameters" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:18.742Z" name="free/features.get_features - /free/features.get_features/10_basic.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2023-04-12T18:13:18.742Z" name="Get Features" time="0">
      <skipped>{
  "features": [
    "contains"
  ],
  "version": " - 7.11.99",
  "reason": "This API was added in 7.12.0"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:13:18.895Z" name="free/features.reset_features - /free/features.reset_features/10_basic.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2023-04-12T18:13:18.895Z" name="Get Features" time="0">
      <skipped>{
  "features": [
    "contains"
  ],
  "version": " - 7.12.99",
  "reason": "This API was added in 7.13.0"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:13:19.049Z" name="free/field_caps - /free/field_caps/10_basic.yml" time="5" tests="14" failures="4" skipped="0">
    <testcase id="2023-04-12T18:13:19.049Z" name="Get simple field caps" time="0"/>
    <testcase id="2023-04-12T18:13:19.483Z" name="Get field caps with fields in body" time="0"/>
    <testcase id="2023-04-12T18:13:19.909Z" name="Get date_nanos field caps" time="1"/>
    <testcase id="2023-04-12T18:13:20.443Z" name="Get leaves field caps" time="0"/>
    <testcase id="2023-04-12T18:13:20.892Z" name="Field caps for number field with only doc values" time="0"/>
    <testcase id="2023-04-12T18:13:21.348Z" name="Field caps for date field with only doc values" time="0"/>
    <testcase id="2023-04-12T18:13:21.807Z" name="Field caps for keyword field with only doc values" time="0"/>
    <testcase id="2023-04-12T18:13:22.251Z" name="Field caps for boolean field with only doc values" time="0"/>
    <testcase id="2023-04-12T18:13:22.682Z" name="Field caps for ip field with only doc values" time="0"/>
    <testcase id="2023-04-12T18:13:23.119Z" name="Field caps for geo_point field with only doc values" time="0"/>
    <testcase id="2023-04-12T18:13:23.535Z" name="Get object and nested field caps" time="0">
      <failure message="should be equal: undefined - test1,test2, action: {&quot;fields.object.object.indices&quot;:[&quot;test1&quot;,&quot;test2&quot;]}" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: should be equal: undefined - test1,test2, action: {"fields.object.object.indices":["test1","test2"]}
    at match (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:685:12)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:557:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:13:23.793Z" name="Get prefix field caps" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test1/Up7ttnIOSDm4Bfk7_0Iw6g] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test1/Up7ttnIOSDm4Bfk7_0Iw6g] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:13:23.810Z" name="Mix in non-existing field field caps" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test1/Up7ttnIOSDm4Bfk7_0Iw6g] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test1/Up7ttnIOSDm4Bfk7_0Iw6g] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
    <testcase id="2023-04-12T18:13:23.828Z" name="Field caps with include_unmapped" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test1/Up7ttnIOSDm4Bfk7_0Iw6g] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test1/Up7ttnIOSDm4Bfk7_0Iw6g] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:287:16)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:13:23.846Z" name="free/field_caps - /free/field_caps/20_meta.yml" time="0" tests="1" failures="1" skipped="0">
    <testcase id="2023-04-12T18:13:23.846Z" name="Merge metadata across multiple indices" time="0">
      <failure message="ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test1/Up7ttnIOSDm4Bfk7_0Iw6g] already exists" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: ifError got unwanted exception: resource_already_exists_exception
	Root causes:
		resource_already_exists_exception: index [test1/Up7ttnIOSDm4Bfk7_0Iw6g] already exists
    at doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:518:14)
    at SniffingTransport.request (/home/joshmock/Code/elasticsearch-js/node_modules/@elastic/transport/lib/Transport.js:479:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Client.create (/home/joshmock/Code/elasticsearch-js/lib/api/api/indices.js:191:16)
    at async doAction (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:464:27)
    at async exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:541:9)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:13:23.877Z" name="free/field_caps - /free/field_caps/30_index_filter.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:23.877Z" name="Field caps with index filter" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:24.402Z" name="free/field_caps - /free/field_caps/40_time_series.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:24.402Z" name="Get simple time series field caps" time="0"/>
    <testcase id="2023-04-12T18:13:24.753Z" name="Get time series field caps with conflicts" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:25.110Z" name="free/field_caps - /free/field_caps/50_fieldtype_filter.yml" time="4" tests="9" failures="1" skipped="0">
    <testcase id="2023-04-12T18:13:25.110Z" name="No filters includes all the following fields" time="0"/>
    <testcase id="2023-04-12T18:13:25.564Z" name="Exclude parent objects" time="0"/>
    <testcase id="2023-04-12T18:13:26.031Z" name="Exclude metadata fields" time="0"/>
    <testcase id="2023-04-12T18:13:26.494Z" name="Exclude non-metadata fields" time="0"/>
    <testcase id="2023-04-12T18:13:26.941Z" name="Exclude nested fields" time="0"/>
    <testcase id="2023-04-12T18:13:27.378Z" name="Exclude multifields" time="0"/>
    <testcase id="2023-04-12T18:13:27.817Z" name="Exclude multifields but include runtime fields" time="0"/>
    <testcase id="2023-04-12T18:13:28.263Z" name="Field type filters" time="0"/>
    <testcase id="2023-04-12T18:13:28.702Z" name="Field type filters with field name restrictions" time="0">
      <failure message="expect truthy value: fields.non_indexed_keyword - value: undefined" type="ERR_ASSERTION">AssertionError [ERR_ASSERTION]: expect truthy value: fields.non_indexed_keyword - value: undefined
    at is_true (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:648:10)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:621:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:5)
    at async start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:11)</failure>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:13:28.966Z" name="free/get - /free/get/100_synthetic_source.yml" time="4" tests="13" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:28.966Z" name="keyword" time="0"/>
    <testcase id="2023-04-12T18:13:29.248Z" name="fetch without refresh also produces synthetic source" time="0"/>
    <testcase id="2023-04-12T18:13:29.522Z" name="force_synthetic_source_ok" time="0"/>
    <testcase id="2023-04-12T18:13:29.792Z" name="force_synthetic_source_bad_mapping" time="0"/>
    <testcase id="2023-04-12T18:13:30.061Z" name="stored text" time="0"/>
    <testcase id="2023-04-12T18:13:30.332Z" name="stored keyword" time="0"/>
    <testcase id="2023-04-12T18:13:30.605Z" name="doc values keyword with ignore_above" time="0"/>
    <testcase id="2023-04-12T18:13:30.897Z" name="stored keyword with ignore_above" time="0"/>
    <testcase id="2023-04-12T18:13:31.195Z" name="indexed dense vectors" time="0"/>
    <testcase id="2023-04-12T18:13:31.490Z" name="non-indexed dense vectors" time="0"/>
    <testcase id="2023-04-12T18:13:31.768Z" name="_source filtering" time="0"/>
    <testcase id="2023-04-12T18:13:32.037Z" name="_doc_count" time="0"/>
    <testcase id="2023-04-12T18:13:32.367Z" name="ip with ignore_malformed" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:32.649Z" name="free/get - /free/get/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:32.649Z" name="Basic" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:32.919Z" name="free/get - /free/get/110_ignore_malformed.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:32.919Z" name="ip" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:33.187Z" name="free/get - /free/get/15_default_values.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:33.187Z" name="Default values" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:33.453Z" name="free/get - /free/get/20_stored_fields.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:33.453Z" name="Stored fields" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:33.709Z" name="free/get - /free/get/40_routing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:33.709Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:34.087Z" name="free/get - /free/get/50_with_headers.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2023-04-12T18:13:34.087Z" name="REST test with headers" time="0">
      <skipped>{
  "features": [
    "headers",
    "yaml"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:13:34.243Z" name="free/get - /free/get/60_realtime_refresh.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:34.243Z" name="Realtime Refresh" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:34.509Z" name="free/get - /free/get/70_source_filtering.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:34.509Z" name="Source filtering" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:34.787Z" name="free/get - /free/get/80_missing.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:34.787Z" name="Missing document with catch" time="0"/>
    <testcase id="2023-04-12T18:13:34.937Z" name="Missing document with ignore" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:35.085Z" name="free/get - /free/get/90_versions.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:35.085Z" name="Versions" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:35.359Z" name="free/get_source - /free/get_source/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:35.359Z" name="Basic" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:35.623Z" name="free/get_source - /free/get_source/15_default_values.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:35.623Z" name="Default values" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:35.883Z" name="free/get_source - /free/get_source/40_routing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:35.883Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:36.265Z" name="free/get_source - /free/get_source/60_realtime_refresh.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:36.265Z" name="Realtime" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:36.529Z" name="free/get_source - /free/get_source/70_source_filtering.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:36.529Z" name="Source filtering" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:36.792Z" name="free/get_source - /free/get_source/80_missing.yml" time="0" tests="2" failures="0" skipped="2">
    <testcase id="2023-04-12T18:13:36.792Z" name="Missing document with catch" time="0">
      <skipped>{
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:13:36.945Z" name="Missing document with ignore" time="0">
      <skipped>{
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:13:37.093Z" name="free/get_source - /free/get_source/85_source_missing.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:37.093Z" name="Missing document source with catch" time="0"/>
    <testcase id="2023-04-12T18:13:37.355Z" name="Missing document source with ignore" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:37.625Z" name="free/health - /free/health/10_basic.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2023-04-12T18:13:37.625Z" name="cluster health basic test" time="0">
      <skipped>{
  "version": "all",
  "reason": "AwaitsFix https://github.com/elastic/elasticsearch/issues/90183"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:13:37.776Z" name="free/health - /free/health/30_feature.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2023-04-12T18:13:37.776Z" name="cluster health test drilling down into a feature" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:13:37.777Z" name="free/health - /free/health/40_diagnosis.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:37.777Z" name="Diagnosis" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:38.975Z" name="free/index - /free/index/10_with_id.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:38.975Z" name="Index with ID" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:39.248Z" name="free/index - /free/index/12_result.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:39.248Z" name="Index result field" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:39.516Z" name="free/index - /free/index/15_without_id.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:39.516Z" name="Index without ID" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:39.784Z" name="free/index - /free/index/20_optype.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:39.784Z" name="Optype" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:40.047Z" name="free/index - /free/index/30_cas.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:40.047Z" name="Compare And Swap Sequence Numbers" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:40.319Z" name="free/index - /free/index/35_external_version.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:40.319Z" name="External version" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:40.588Z" name="free/index - /free/index/36_external_gte_version.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:40.588Z" name="External GTE version" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:40.880Z" name="free/index - /free/index/40_routing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:40.880Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:41.265Z" name="free/index - /free/index/60_refresh.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:41.265Z" name="Refresh" time="0"/>
    <testcase id="2023-04-12T18:13:41.537Z" name="When refresh url parameter is an empty string that means &quot;refresh immediately&quot;" time="0"/>
    <testcase id="2023-04-12T18:13:41.804Z" name="refresh=wait_for waits until changes are visible in search" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:43.006Z" name="free/index - /free/index/70_require_alias.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:43.006Z" name="Set require_alias flag" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:43.266Z" name="free/index - /free/index/80_date_nanos.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:43.266Z" name="date_nanos requires dates after 1970 and before 2262" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:43.550Z" name="free/index - /free/index/90_geo_point.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:43.550Z" name="single null value" time="0"/>
    <testcase id="2023-04-12T18:13:43.817Z" name="null value in array" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:44.074Z" name="free/index - /free/index/91_metrics_no_subobjects.yml" time="1" tests="4" failures="0" skipped="4">
    <testcase id="2023-04-12T18:13:44.074Z" name="Metrics object indexing" time="0">
      <skipped>{
  "features": [
    "allowed_warnings_regex"
  ],
  "version": " - 8.2.99",
  "reason": "added in 8.3.0"
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:13:44.225Z" name="Root without subobjects" time="0">
      <skipped>{
  "features": [
    "allowed_warnings_regex"
  ],
  "version": " - 8.2.99",
  "reason": "added in 8.3.0"
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:13:44.378Z" name="Metrics object indexing with synthetic source" time="0">
      <skipped>{
  "features": [
    "allowed_warnings_regex"
  ],
  "version": " - 8.3.99",
  "reason": "added in 8.4.0"
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:13:44.529Z" name="Root without subobjects with synthetic source" time="0">
      <skipped>{
  "features": [
    "allowed_warnings_regex"
  ],
  "version": " - 8.3.99",
  "reason": "added in 8.4.0"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:13:44.682Z" name="free/indices.analyze - /free/indices.analyze/10_analyze.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:44.682Z" name="Basic test" time="0"/>
    <testcase id="2023-04-12T18:13:44.837Z" name="Index and field" time="0"/>
    <testcase id="2023-04-12T18:13:45.086Z" name="Array text" time="0"/>
    <testcase id="2023-04-12T18:13:45.236Z" name="Detail response with Analyzer" time="0"/>
    <testcase id="2023-04-12T18:13:45.388Z" name="Custom filter in request" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:45.542Z" name="free/indices.analyze - /free/indices.analyze/20_analyze_limit.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:45.542Z" name="_analyze with No. generated tokens less than or equal to index.analyze.max_token_count should succeed" time="0"/>
    <testcase id="2023-04-12T18:13:45.782Z" name="_analyze with No. generated tokens more than index.analyze.max_token_count should fail" time="0"/>
    <testcase id="2023-04-12T18:13:46.025Z" name="_analyze with explain with No. generated tokens more than index.analyze.max_token_count should fail" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:46.276Z" name="free/indices.blocks - /free/indices.blocks/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:46.276Z" name="Basic test for index blocks" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:46.560Z" name="free/indices.clear_cache - /free/indices.clear_cache/10_basic.yml" time="0" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:46.560Z" name="clear_cache test" time="0"/>
    <testcase id="2023-04-12T18:13:46.713Z" name="clear_cache with request set to false" time="0"/>
    <testcase id="2023-04-12T18:13:46.863Z" name="clear_cache with fielddata set to true" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:47.021Z" name="free/indices.clone - /free/indices.clone/10_basic.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:47.021Z" name="Clone index via API" time="0"/>
    <testcase id="2023-04-12T18:13:47.507Z" name="Create illegal clone indices" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:47.807Z" name="free/indices.clone - /free/indices.clone/20_source_mapping.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:47.807Z" name="Clone index ignores target template mapping" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:48.233Z" name="free/indices.clone - /free/indices.clone/30_copy_settings.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:48.233Z" name="Copy settings during clone index" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:48.574Z" name="free/indices.create - /free/indices.create/10_basic.yml" time="2" tests="9" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:48.574Z" name="Create index with mappings" time="0"/>
    <testcase id="2023-04-12T18:13:48.821Z" name="Create index with settings" time="0"/>
    <testcase id="2023-04-12T18:13:49.073Z" name="Create index" time="0"/>
    <testcase id="2023-04-12T18:13:49.311Z" name="Create index with wait_for_active_shards set to all" time="0"/>
    <testcase id="2023-04-12T18:13:49.549Z" name="Create index with aliases" time="0"/>
    <testcase id="2023-04-12T18:13:49.802Z" name="Create index with write aliases" time="0"/>
    <testcase id="2023-04-12T18:13:50.039Z" name="Create index with invalid mappings" time="0"/>
    <testcase id="2023-04-12T18:13:50.194Z" name="Create index without soft deletes" time="0"/>
    <testcase id="2023-04-12T18:13:50.346Z" name="Create with alias containing date math" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:50.586Z" name="free/indices.create - /free/indices.create/20_synthetic_source.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:50.586Z" name="invalid" time="0"/>
    <testcase id="2023-04-12T18:13:50.738Z" name="nested is disabled" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:50.891Z" name="free/indices.delete - /free/indices.delete/10_basic.yml" time="3" tests="8" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:50.891Z" name="Delete index against alias" time="0"/>
    <testcase id="2023-04-12T18:13:51.216Z" name="Delete index against alias - ignore unavailable" time="0"/>
    <testcase id="2023-04-12T18:13:51.529Z" name="Delete index against alias -  multiple indices" time="0"/>
    <testcase id="2023-04-12T18:13:51.834Z" name="Delete index against alias -  ignore unavailable - multiple indices" time="0"/>
    <testcase id="2023-04-12T18:13:52.162Z" name="Delete index against wildcard matching alias" time="0"/>
    <testcase id="2023-04-12T18:13:52.471Z" name="Delete index against wildcard matching alias - disallow no indices" time="0"/>
    <testcase id="2023-04-12T18:13:52.781Z" name="Delete index against wildcard matching alias - multiple indices" time="0"/>
    <testcase id="2023-04-12T18:13:53.105Z" name="Delete index against wildcard matching alias - disallow no indices - multiple indices" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:53.418Z" name="free/indices.delete - /free/indices.delete/20_destructive_wildcard.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:53.418Z" name="Delete nonexistent concrete index with wildcard expansion disallowed" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:53.635Z" name="free/indices.delete_alias - /free/indices.delete_alias/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:53.635Z" name="Basic test for delete alias" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:53.906Z" name="free/indices.delete_alias - /free/indices.delete_alias/all_path_options.yml" time="5" tests="10" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:53.906Z" name="check setup" time="0"/>
    <testcase id="2023-04-12T18:13:54.335Z" name="check delete with _all index" time="0"/>
    <testcase id="2023-04-12T18:13:54.798Z" name="check delete with * index" time="0"/>
    <testcase id="2023-04-12T18:13:55.260Z" name="check delete with index list" time="0"/>
    <testcase id="2023-04-12T18:13:55.726Z" name="check delete with prefix* index" time="0"/>
    <testcase id="2023-04-12T18:13:56.183Z" name="check delete with index list and * aliases" time="0"/>
    <testcase id="2023-04-12T18:13:56.638Z" name="check delete with index list and _all aliases" time="0"/>
    <testcase id="2023-04-12T18:13:57.104Z" name="check delete with index list and wildcard aliases" time="0"/>
    <testcase id="2023-04-12T18:13:57.564Z" name="check 404 on no matching alias" time="0"/>
    <testcase id="2023-04-12T18:13:58.008Z" name="check delete with blank index and blank alias" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:58.465Z" name="free/indices.exists - /free/indices.exists/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:58.465Z" name="Test indices.exists" time="0"/>
    <testcase id="2023-04-12T18:13:58.730Z" name="Test indices.exists with local flag" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:58.890Z" name="free/indices.exists - /free/indices.exists/20_read_only_index.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:58.890Z" name="Test indices.exists on a read only index" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:59.177Z" name="free/indices.exists_alias - /free/indices.exists_alias/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:59.177Z" name="Test indices.exists_alias" time="0"/>
    <testcase id="2023-04-12T18:13:59.451Z" name="Test indices.exists_alias with local flag" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:59.611Z" name="free/indices.exists_template - /free/indices.exists_template/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:59.612Z" name="Test indices.exists_template" time="0"/>
    <testcase id="2023-04-12T18:13:59.807Z" name="Test indices.exists_template with local flag" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:13:59.966Z" name="free/indices.flush - /free/indices.flush/10_basic.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:13:59.966Z" name="Flush stats" time="0"/>
    <testcase id="2023-04-12T18:14:00.249Z" name="Flush parameters validation" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:00.505Z" name="free/indices.forcemerge - /free/indices.forcemerge/10_basic.yml" time="31" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:00.505Z" name="Force merge index tests" time="0"/>
    <testcase id="2023-04-12T18:14:00.758Z" name="Force merge with incompatible only_expunge_deletes and max_num_segments values" time="0"/>
    <testcase id="2023-04-12T18:14:01.008Z" name="Force merge with wait_for_completion parameter" time="30"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:31.269Z" name="free/indices.get - /free/indices.get/10_basic.yml" time="0" tests="13" failures="0" skipped="13">
    <testcase id="2023-04-12T18:14:31.269Z" name="Get index infos" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:31.269Z" name="Get index infos should work for wildcards" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:31.269Z" name="Get index infos with human settings should return index creation date and version in readable format" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:31.269Z" name="Get index infos by default shouldn't return index creation date and version in readable format" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:31.269Z" name="Missing index should throw an Error" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:31.269Z" name="Missing index should return empty object if ignore_unavailable" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:31.269Z" name="Should return empty object if allow_no_indices" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:31.269Z" name="Should throw error if allow_no_indices=false" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:31.269Z" name="Should return test_index_2 if expand_wildcards=open" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:31.269Z" name="Should return test_index_3 if expand_wildcards=closed" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:31.269Z" name="Should return test_index_2 and test_index_3 if expand_wildcards=open,closed" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:31.269Z" name="Should return an exception when querying invalid indices" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:31.269Z" name="Should return only selected features" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:14:31.269Z" name="free/indices.get_alias - /free/indices.get_alias/10_basic.yml" time="8" tests="23" failures="0" skipped="1">
    <testcase id="2023-04-12T18:14:31.269Z" name="Get all aliases via /_alias" time="0"/>
    <testcase id="2023-04-12T18:14:31.650Z" name="Get aliases via /_alias/_all" time="0"/>
    <testcase id="2023-04-12T18:14:32.035Z" name="Get aliases via /_alias/*" time="0"/>
    <testcase id="2023-04-12T18:14:32.427Z" name="Get all aliases via /{index}/_alias/" time="0"/>
    <testcase id="2023-04-12T18:14:32.740Z" name="Get aliases via /_all/_alias/" time="0"/>
    <testcase id="2023-04-12T18:14:33.129Z" name="Get aliases via /*/_alias/" time="0"/>
    <testcase id="2023-04-12T18:14:33.521Z" name="Get and index with no aliases via /{index}/_alias/" time="0"/>
    <testcase id="2023-04-12T18:14:33.908Z" name="Get specific alias via /{index}/_alias/{name}" time="0"/>
    <testcase id="2023-04-12T18:14:34.223Z" name="Get aliases via /{index}/_alias/_all" time="0"/>
    <testcase id="2023-04-12T18:14:34.538Z" name="Get aliases via /{index}/_alias/*" time="0"/>
    <testcase id="2023-04-12T18:14:34.853Z" name="Get aliases via /{index}/_alias/prefix*" time="0"/>
    <testcase id="2023-04-12T18:14:35.166Z" name="Get aliases via /{index}/_alias/name,name" time="0"/>
    <testcase id="2023-04-12T18:14:35.477Z" name="Get aliases via /_alias/{name}" time="0"/>
    <testcase id="2023-04-12T18:14:35.784Z" name="Get aliases via /_all/_alias/{name}" time="0"/>
    <testcase id="2023-04-12T18:14:36.089Z" name="Get aliases via /*/_alias/{name}" time="0"/>
    <testcase id="2023-04-12T18:14:36.406Z" name="Get aliases via /*suf/_alias/{name}" time="0"/>
    <testcase id="2023-04-12T18:14:36.712Z" name="Get aliases via /name,name/_alias/{name}" time="0"/>
    <testcase id="2023-04-12T18:14:37.025Z" name="Non-existent alias on an existing index returns 404" time="0"/>
    <testcase id="2023-04-12T18:14:37.337Z" name="Existent and non-existent alias returns 404 and the existing alias" time="0"/>
    <testcase id="2023-04-12T18:14:37.646Z" name="Existent and non-existent aliases returns 404 and the existing alias" time="0"/>
    <testcase id="2023-04-12T18:14:37.958Z" name="Getting alias on an non-existent index should return 404" time="0"/>
    <testcase id="2023-04-12T18:14:38.270Z" name="Get alias with local flag" time="0"/>
    <testcase id="2023-04-12T18:14:38.575Z" name="Get alias against closed indices" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:14:38.890Z" name="free/indices.get_alias - /free/indices.get_alias/20_empty.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:38.890Z" name="Check empty aliases when getting all aliases via /_alias" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:39.220Z" name="free/indices.get_alias - /free/indices.get_alias/30_wildcards.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:39.220Z" name="Get aliases wildcard and inclusion" time="0"/>
    <testcase id="2023-04-12T18:14:39.472Z" name="Get aliases wildcard and simple exclusion" time="0"/>
    <testcase id="2023-04-12T18:14:39.724Z" name="Get aliases and wildcard exclusion" time="0"/>
    <testcase id="2023-04-12T18:14:39.977Z" name="Non-existent exclusion alias before wildcard returns 404" time="0"/>
    <testcase id="2023-04-12T18:14:40.229Z" name="Missing exclusions does not fire 404" time="0"/>
    <testcase id="2023-04-12T18:14:40.480Z" name="Exclusion of non wildcarded aliases" time="0"/>
    <testcase id="2023-04-12T18:14:40.727Z" name="Wildcard exclusions does not trigger 404" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:40.973Z" name="free/indices.get_field_mapping - /free/indices.get_field_mapping/10_basic.yml" time="1" tests="5" failures="0" skipped="1">
    <testcase id="2023-04-12T18:14:40.973Z" name="Get field mapping with no index" time="0"/>
    <testcase id="2023-04-12T18:14:41.223Z" name="Get field mapping by index only" time="0"/>
    <testcase id="2023-04-12T18:14:41.470Z" name="Get field mapping by field, with another field that doesn't exist" time="0"/>
    <testcase id="2023-04-12T18:14:41.723Z" name="Get field mapping with include_defaults" time="0"/>
    <testcase id="2023-04-12T18:14:41.983Z" name="Get field mapping with local parameter should fail" time="0">
      <skipped>{
  "features": [
    "warnings",
    "node_selector"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:14:42.235Z" name="free/indices.get_field_mapping - /free/indices.get_field_mapping/20_missing_field.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:42.235Z" name="Return empty object if field doesn't exist, but index does" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:42.487Z" name="free/indices.get_field_mapping - /free/indices.get_field_mapping/40_missing_index.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:42.487Z" name="Raise 404 when index doesn't exist" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:42.646Z" name="free/indices.get_field_mapping - /free/indices.get_field_mapping/50_field_wildcards.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:42.646Z" name="Get field mapping with * for fields" time="0"/>
    <testcase id="2023-04-12T18:14:42.969Z" name="Get field mapping with t* for fields" time="0"/>
    <testcase id="2023-04-12T18:14:43.298Z" name="Get field mapping with *t1 for fields" time="0"/>
    <testcase id="2023-04-12T18:14:43.623Z" name="Get field mapping with wildcarded relative names" time="0"/>
    <testcase id="2023-04-12T18:14:43.953Z" name="Get field mapping should work using '_all' for index" time="0"/>
    <testcase id="2023-04-12T18:14:44.290Z" name="Get field mapping should work using '*' for index" time="0"/>
    <testcase id="2023-04-12T18:14:44.625Z" name="Get field mapping should work using comma_separated values for indices" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:44.955Z" name="free/indices.get_index_template - /free/indices.get_index_template/10_basic.yml" time="0" tests="4" failures="0" skipped="4">
    <testcase id="2023-04-12T18:14:44.955Z" name="Get index template" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:44.955Z" name="Get all index templates" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:44.955Z" name="Pattern matching in index templates" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:44.955Z" name="Get index template with local flag" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:14:44.955Z" name="free/indices.get_index_template - /free/indices.get_index_template/20_get_missing.yml" time="0" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:44.955Z" name="Get missing template" time="0"/>
    <testcase id="2023-04-12T18:14:45.078Z" name="Get non-matching wildcard" time="0"/>
    <testcase id="2023-04-12T18:14:45.199Z" name="Reject request containing comma" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:45.322Z" name="free/indices.get_mapping - /free/indices.get_mapping/10_basic.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:45.322Z" name="Get /{index}/_mapping with empty mappings" time="0"/>
    <testcase id="2023-04-12T18:14:45.739Z" name="Get /_mapping" time="0"/>
    <testcase id="2023-04-12T18:14:46.076Z" name="Get /{index}/_mapping" time="0"/>
    <testcase id="2023-04-12T18:14:46.418Z" name="Get /_all/_mapping" time="0"/>
    <testcase id="2023-04-12T18:14:46.758Z" name="Get /*/_mapping" time="0"/>
    <testcase id="2023-04-12T18:14:47.102Z" name="Get /index,index/_mapping" time="0"/>
    <testcase id="2023-04-12T18:14:47.441Z" name="Get /index*/_mapping/" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:47.770Z" name="free/indices.get_mapping - /free/indices.get_mapping/30_missing_index.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:47.770Z" name="Raise 404 when index doesn't exist" time="0"/>
    <testcase id="2023-04-12T18:14:47.922Z" name="Index missing, no indexes" time="0"/>
    <testcase id="2023-04-12T18:14:48.076Z" name="Index missing, ignore_unavailable=true" time="0"/>
    <testcase id="2023-04-12T18:14:48.230Z" name="Index missing, ignore_unavailable=true, allow_no_indices=false" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:48.384Z" name="free/indices.get_mapping - /free/indices.get_mapping/40_aliases.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:48.384Z" name="Getting mapping for aliases should return the real index as key" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:48.641Z" name="free/indices.get_mapping - /free/indices.get_mapping/50_wildcard_expansion.yml" time="0" tests="8" failures="0" skipped="8">
    <testcase id="2023-04-12T18:14:48.641Z" name="Get test-* with defaults" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:48.642Z" name="Get test-* with wildcard_expansion=all" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:48.642Z" name="Get test-* with wildcard_expansion=open" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:48.642Z" name="Get test-* with wildcard_expansion=closed" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:48.642Z" name="Get test-* with wildcard_expansion=none" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:48.642Z" name="Get test-* with wildcard_expansion=none allow_no_indices=false" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:48.642Z" name="Get test-* with wildcard_expansion=none ignore_unavailable=false" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:48.642Z" name="Get test-* with wildcard_expansion=open,closed" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:14:48.642Z" name="free/indices.get_mapping - /free/indices.get_mapping/60_empty.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:48.642Z" name="Check empty mapping when getting all mappings via /_mapping" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:48.960Z" name="free/indices.get_settings - /free/indices.get_settings/10_basic.yml" time="6" tests="13" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:48.960Z" name="Get /_settings" time="0"/>
    <testcase id="2023-04-12T18:14:49.428Z" name="Get /{index}/_settings" time="0"/>
    <testcase id="2023-04-12T18:14:49.882Z" name="Get /{index}/_settings/_all" time="0"/>
    <testcase id="2023-04-12T18:14:50.343Z" name="Get /{index}/_settings/*" time="0"/>
    <testcase id="2023-04-12T18:14:50.797Z" name="Get /{index}/_settings/{name}" time="0"/>
    <testcase id="2023-04-12T18:14:51.265Z" name="Get /{index}/_settings/{name,name}" time="0"/>
    <testcase id="2023-04-12T18:14:51.748Z" name="Get /{index}/_settings/{name*}" time="0"/>
    <testcase id="2023-04-12T18:14:52.221Z" name="Get /_settings/{name}" time="0"/>
    <testcase id="2023-04-12T18:14:52.705Z" name="Get /_all/_settings/{name}" time="0"/>
    <testcase id="2023-04-12T18:14:53.176Z" name="Get /*/_settings/{name}" time="0"/>
    <testcase id="2023-04-12T18:14:53.629Z" name="Get /index,index/_settings/{name}" time="0"/>
    <testcase id="2023-04-12T18:14:54.113Z" name="Get /index*/_settings/{name}" time="0"/>
    <testcase id="2023-04-12T18:14:54.589Z" name="Get /_settings with local flag" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:55.050Z" name="free/indices.get_settings - /free/indices.get_settings/20_aliases.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:55.050Z" name="Getting settings for aliases should return the real index as key" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:55.324Z" name="free/indices.get_settings - /free/indices.get_settings/30_defaults.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:55.324Z" name="Test retrieval of default settings" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:55.562Z" name="free/indices.get_template - /free/indices.get_template/10_basic.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:55.562Z" name="Get template" time="0"/>
    <testcase id="2023-04-12T18:14:55.745Z" name="Get template with no mappings" time="0"/>
    <testcase id="2023-04-12T18:14:55.958Z" name="Get all templates" time="0"/>
    <testcase id="2023-04-12T18:14:56.170Z" name="Get template with local flag" time="0"/>
    <testcase id="2023-04-12T18:14:56.351Z" name="Get template with flat settings and master timeout" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:56.529Z" name="free/indices.get_template - /free/indices.get_template/20_get_missing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:56.529Z" name="Get missing template" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:14:56.726Z" name="free/indices.open - /free/indices.open/10_basic.yml" time="1" tests="5" failures="0" skipped="4">
    <testcase id="2023-04-12T18:14:56.726Z" name="Basic test for index open/close" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:56.875Z" name="Open index with wait_for_active_shards set to all" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:57.025Z" name="Close index with wait_for_active_shards set to all" time="0"/>
    <testcase id="2023-04-12T18:14:57.334Z" name="Close index response with result per index" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:57.484Z" name="?wait_for_active_shards=index-setting is deprecated" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "required deprecation warning is only emitted in 8.0 and later",
  "features": [
    "warnings",
    "node_selector"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:14:57.633Z" name="free/indices.open - /free/indices.open/20_multiple_indices.yml" time="1" tests="3" failures="0" skipped="3">
    <testcase id="2023-04-12T18:14:57.633Z" name="All indices" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:58.015Z" name="Trailing wildcard" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:14:58.399Z" name="Only wildcard" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:14:58.787Z" name="free/indices.put_alias - /free/indices.put_alias/10_basic.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:14:58.787Z" name="Basic test for put alias" time="0"/>
    <testcase id="2023-04-12T18:14:59.044Z" name="Can't create alias with invalid characters" time="0"/>
    <testcase id="2023-04-12T18:14:59.283Z" name="Can't create alias with the same name as an index" time="0"/>
    <testcase id="2023-04-12T18:14:59.594Z" name="Can set is_write_index" time="0"/>
    <testcase id="2023-04-12T18:14:59.845Z" name="Can create filtered alias with a date_nanos range query" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:00.098Z" name="free/indices.put_alias - /free/indices.put_alias/all_path_options.yml" time="3" tests="7" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:00.098Z" name="put alias per index" time="0"/>
    <testcase id="2023-04-12T18:15:00.518Z" name="put alias in _all index" time="0"/>
    <testcase id="2023-04-12T18:15:00.931Z" name="put alias in * index" time="0"/>
    <testcase id="2023-04-12T18:15:01.339Z" name="put alias prefix* index" time="0"/>
    <testcase id="2023-04-12T18:15:01.743Z" name="put alias in list of indices" time="0"/>
    <testcase id="2023-04-12T18:15:02.139Z" name="put alias with blank index" time="0"/>
    <testcase id="2023-04-12T18:15:02.518Z" name="put alias with missing name" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:02.896Z" name="free/indices.put_index_template - /free/indices.put_index_template/10_basic.yml" time="1" tests="5" failures="0" skipped="4">
    <testcase id="2023-04-12T18:15:02.896Z" name="Put index template" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:03.046Z" name="Put multiple index templates" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:03.194Z" name="Put index template with 'create' flag" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:03.344Z" name="Put index template without index_patterns" time="0"/>
    <testcase id="2023-04-12T18:15:03.494Z" name="Delete multiple templates" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "not yet backported",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:15:03.646Z" name="free/indices.put_index_template - /free/indices.put_index_template/15_composition.yml" time="1" tests="7" failures="0" skipped="7">
    <testcase id="2023-04-12T18:15:03.646Z" name="Component and index template composition" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:03.795Z" name="Index template priority" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:03.944Z" name="Component template only composition" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:04.094Z" name="Index template without component templates" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "index template v2 API unavailable before 7.8",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:04.246Z" name="Index template mapping merging" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "index template v2 mapping merging not available before 7.9",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:04.394Z" name="Index template ignore_missing_component_template valid" time="0">
      <skipped>{
  "version": " - 8.6.99",
  "reason": "index template v2 ignore_missing_component_template config not available before 8.7",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:04.543Z" name="Index template ignore_missing_component_template invalid" time="0">
      <skipped>{
  "version": " - 8.6.99",
  "reason": "index template v2 ignore_missing_component_template config not available before 8.7",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:15:04.692Z" name="free/indices.put_mapping - /free/indices.put_mapping/10_basic.yml" time="2" tests="9" failures="0" skipped="1">
    <testcase id="2023-04-12T18:15:04.692Z" name="Test Create and update mapping" time="0"/>
    <testcase id="2023-04-12T18:15:04.958Z" name="Create index with invalid mappings" time="0"/>
    <testcase id="2023-04-12T18:15:05.196Z" name="Put mappings with explicit _doc type" time="0"/>
    <testcase id="2023-04-12T18:15:05.435Z" name="Put mappings with explicit _doc type bwc" time="0">
      <skipped>{
  "version": "8.0.0 - ",
  "reason": "old deprecation message for pre 8.0",
  "features": "node_selector"
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:05.585Z" name="Update per-field metadata" time="0"/>
    <testcase id="2023-04-12T18:15:05.839Z" name="disabling synthetic source fails" time="0"/>
    <testcase id="2023-04-12T18:15:06.078Z" name="enabling synthetic source from explicit succeeds" time="0"/>
    <testcase id="2023-04-12T18:15:06.330Z" name="enabling synthetic source succeeds" time="0"/>
    <testcase id="2023-04-12T18:15:06.604Z" name="enabling synthetic source when no mapping succeeds" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:06.851Z" name="free/indices.put_mapping - /free/indices.put_mapping/all_path_options.yml" time="2" tests="6" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:06.851Z" name="put one mapping per index" time="0"/>
    <testcase id="2023-04-12T18:15:07.263Z" name="put mapping in _all index" time="0"/>
    <testcase id="2023-04-12T18:15:07.671Z" name="put mapping in * index" time="0"/>
    <testcase id="2023-04-12T18:15:08.069Z" name="put mapping in prefix* index" time="0"/>
    <testcase id="2023-04-12T18:15:08.462Z" name="put mapping in list of indices" time="0"/>
    <testcase id="2023-04-12T18:15:08.857Z" name="post a mapping with default analyzer twice" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:09.248Z" name="free/indices.put_settings - /free/indices.put_settings/10_basic.yml" time="1" tests="5" failures="0" skipped="1">
    <testcase id="2023-04-12T18:15:09.248Z" name="Test indices settings" time="0"/>
    <testcase id="2023-04-12T18:15:09.498Z" name="Test indices settings ignore_unavailable" time="0"/>
    <testcase id="2023-04-12T18:15:09.745Z" name="Test indices settings allow_no_indices" time="0"/>
    <testcase id="2023-04-12T18:15:09.978Z" name="Test preserve_existing settings" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:10.213Z" name="put unsupported setting" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:10.467Z" name="free/indices.put_settings - /free/indices.put_settings/11_reset.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:10.467Z" name="Test reset index settings" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:10.735Z" name="free/indices.put_settings - /free/indices.put_settings/all_path_options.yml" time="3" tests="6" failures="0" skipped="1">
    <testcase id="2023-04-12T18:15:10.735Z" name="put settings per index" time="0"/>
    <testcase id="2023-04-12T18:15:11.169Z" name="put settings in _all index" time="0"/>
    <testcase id="2023-04-12T18:15:11.611Z" name="put settings in * index" time="0"/>
    <testcase id="2023-04-12T18:15:12.044Z" name="put settings in prefix* index" time="0"/>
    <testcase id="2023-04-12T18:15:12.499Z" name="put settings in list of indices" time="0">
      <skipped>{
  "version": "all",
  "reason": "list of indices not implemented yet"
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:12.912Z" name="put settings in blank index" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:13.337Z" name="free/indices.put_template - /free/indices.put_template/10_basic.yml" time="1" tests="7" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:13.337Z" name="Put template" time="0"/>
    <testcase id="2023-04-12T18:15:13.528Z" name="Put multiple template" time="0"/>
    <testcase id="2023-04-12T18:15:13.716Z" name="Put template with empty mappings" time="0"/>
    <testcase id="2023-04-12T18:15:13.905Z" name="Put template with aliases" time="0"/>
    <testcase id="2023-04-12T18:15:14.093Z" name="Put template create" time="0"/>
    <testcase id="2023-04-12T18:15:14.292Z" name="Test Put Versioned Template" time="0"/>
    <testcase id="2023-04-12T18:15:14.558Z" name="Put index template without index_patterns" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:14.715Z" name="free/indices.recovery - /free/indices.recovery/10_basic.yml" time="1" tests="6" failures="0" skipped="1">
    <testcase id="2023-04-12T18:15:14.715Z" name="Indices recovery test" time="0"/>
    <testcase id="2023-04-12T18:15:14.964Z" name="Indices recovery test without recovery from snapshot" time="0"/>
    <testcase id="2023-04-12T18:15:15.209Z" name="Indices recovery test for closed index" time="0">
      <skipped>{
  "version": " - 7.1.99",
  "reason": "closed indices are replicated starting version 7.2.0",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:15.362Z" name="Indices recovery test index name not matching" time="0"/>
    <testcase id="2023-04-12T18:15:15.607Z" name="Indices recovery test, wildcard not matching any index" time="0"/>
    <testcase id="2023-04-12T18:15:15.852Z" name="Indices recovery test with detailed parameter" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:16.103Z" name="free/indices.refresh - /free/indices.refresh/10_basic.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:16.103Z" name="Indices refresh test _all" time="1"/>
    <testcase id="2023-04-12T18:15:16.656Z" name="Indices refresh test empty array" time="1"/>
    <testcase id="2023-04-12T18:15:17.208Z" name="Indices refresh test no-match wildcard" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:17.767Z" name="free/indices.resolve_index - /free/indices.resolve_index/10_basic_resolve_index.yml" time="0" tests="2" failures="0" skipped="2">
    <testcase id="2023-04-12T18:15:17.767Z" name="Resolve index with indices and aliases" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "resolve index introduced in 7.9",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:17.767Z" name="Resolve index with hidden and closed indices" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "resolve index introduced in 7.9",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:15:17.768Z" name="free/indices.resolve_index - /free/indices.resolve_index/20_resolve_system_index.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:17.768Z" name="Resolve system index" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:18.025Z" name="free/indices.rollover - /free/indices.rollover/10_basic.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:18.025Z" name="Rollover index via API" time="0"/>
    <testcase id="2023-04-12T18:15:18.422Z" name="Rollover no condition matched" time="0"/>
    <testcase id="2023-04-12T18:15:18.670Z" name="Rollover with dry-run but target index exists" time="0"/>
    <testcase id="2023-04-12T18:15:18.998Z" name="Will not rollover with only min_* conditions" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:19.278Z" name="free/indices.rollover - /free/indices.rollover/20_max_doc_condition.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:19.278Z" name="Max docs rollover conditions matches only primary shards" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:19.646Z" name="free/indices.rollover - /free/indices.rollover/25_max_shard_doc_condition.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:19.646Z" name="Rollover with max_primary_shard_docs condition" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:20.010Z" name="free/indices.rollover - /free/indices.rollover/30_max_size_condition.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:20.010Z" name="Rollover with max_size condition" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:20.368Z" name="free/indices.rollover - /free/indices.rollover/35_max_primary_shard_size_condition.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:20.368Z" name="Rollover with max_primary_shard_size condition" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:20.721Z" name="free/indices.rollover - /free/indices.rollover/40_mapping.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:20.721Z" name="Typeless mapping" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:21.073Z" name="free/indices.rollover - /free/indices.rollover/50_min_age_condition.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:21.073Z" name="Rollover with min_age condition" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:21.411Z" name="free/indices.rollover - /free/indices.rollover/55_min_docs_condition.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:21.411Z" name="Rollover with min_docs condition" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:21.744Z" name="free/indices.rollover - /free/indices.rollover/60_min_primary_shard_docs_condition.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:21.744Z" name="Rollover with min_primary_shard_docs condition" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:22.076Z" name="free/indices.rollover - /free/indices.rollover/65_min_primary_shard_size_condition.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:22.076Z" name="Rollover with min_primary_shard_size condition" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:22.415Z" name="free/indices.rollover - /free/indices.rollover/70_min_size_condition.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:22.415Z" name="Rollover with min_size condition" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:22.753Z" name="free/indices.segments - /free/indices.segments/10_basic.yml" time="1" tests="4" failures="0" skipped="1">
    <testcase id="2023-04-12T18:15:22.753Z" name="no segments test" time="0"/>
    <testcase id="2023-04-12T18:15:22.903Z" name="basic segments test" time="0"/>
    <testcase id="2023-04-12T18:15:23.168Z" name="segments from multiple indices" time="0"/>
    <testcase id="2023-04-12T18:15:23.529Z" name="closed segments test" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:15:23.682Z" name="free/indices.shard_stores - /free/indices.shard_stores/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:23.682Z" name="no indices test" time="0"/>
    <testcase id="2023-04-12T18:15:23.833Z" name="basic index test" time="0"/>
    <testcase id="2023-04-12T18:15:24.091Z" name="multiple indices test" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:24.473Z" name="free/indices.shrink - /free/indices.shrink/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:24.473Z" name="Shrink index via API" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:24.901Z" name="free/indices.shrink - /free/indices.shrink/20_source_mapping.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:24.901Z" name="Shrink index ignores target template mapping" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:25.335Z" name="free/indices.shrink - /free/indices.shrink/30_copy_settings.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:25.335Z" name="Copy settings during shrink index" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:25.697Z" name="free/indices.simulate_index_template - /free/indices.simulate_index_template/10_basic.yml" time="1" tests="5" failures="0" skipped="5">
    <testcase id="2023-04-12T18:15:25.697Z" name="Simulate index template without new template in the body" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "simulate index template API is only in 7.8.0+",
  "features": [
    "default_shards"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:25.846Z" name="Simulate index template specifying a new template" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "simulate index template API is only in 7.8.0+",
  "features": [
    "default_shards"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:25.996Z" name="Simulate index template with index not matching any template" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "simulate index template API is only in 7.8.0+",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:26.147Z" name="Simulate index matches overlapping legacy and composable templates" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "simulate index template API is only in 7.8.0+",
  "features": [
    "allowed_warnings",
    "default_shards"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:26.298Z" name="Simulate an index for and index or alias that already exists" time="0">
      <skipped>{
  "version": " - 8.1.99",
  "reason": "simulating index template API for an existing index has not yet been backported",
  "features": [
    "default_shards"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:15:26.450Z" name="free/indices.simulate_template - /free/indices.simulate_template/10_basic.yml" time="1" tests="4" failures="0" skipped="4">
    <testcase id="2023-04-12T18:15:26.450Z" name="Simulate template without a template in the body" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "only available in 7.9+",
  "features": [
    "default_shards"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:26.600Z" name="Simulate index template specifying a new template" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "only available in 7.9+",
  "features": [
    "default_shards"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:26.750Z" name="Simulate template matches overlapping legacy and composable templates" time="0">
      <skipped>{
  "version": " - 7.8.99",
  "reason": "only available in 7.9+",
  "features": [
    "allowed_warnings",
    "default_shards"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:15:26.900Z" name="Simulate replacing a template with a newer version" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "not yet backported",
  "features": [
    "allowed_warnings",
    "default_shards"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:15:27.053Z" name="free/indices.sort - /free/indices.sort/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:27.053Z" name="Index Sort" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:27.415Z" name="free/indices.split - /free/indices.split/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:27.415Z" name="Split index via API" time="0"/>
    <testcase id="2023-04-12T18:15:27.891Z" name="Split from 1 to N" time="1"/>
    <testcase id="2023-04-12T18:15:28.563Z" name="Create illegal split indices" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:28.861Z" name="free/indices.split - /free/indices.split/20_source_mapping.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:28.861Z" name="Split index ignores target template mapping" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:29.310Z" name="free/indices.split - /free/indices.split/30_copy_settings.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2023-04-12T18:15:29.310Z" name="Copy settings during split index" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:15:29.310Z" name="free/indices.split - /free/indices.split/40_routing_partition_size.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:29.310Z" name="more than 1" time="0"/>
    <testcase id="2023-04-12T18:15:29.806Z" name="exactly 1" time="1"/>
    <testcase id="2023-04-12T18:15:30.308Z" name="nested" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:30.825Z" name="free/indices.split - /free/indices.split/50_routing_required.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:30.825Z" name="routing required" time="1"/>
    <testcase id="2023-04-12T18:15:31.331Z" name="nested" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:31.810Z" name="free/indices.split - /free/indices.split/60_nested.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:31.810Z" name="nested" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:32.306Z" name="free/indices.stats - /free/indices.stats/10_index.yml" time="4" tests="8" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:32.306Z" name="Index - blank" time="1"/>
    <testcase id="2023-04-12T18:15:32.816Z" name="Index - all" time="1"/>
    <testcase id="2023-04-12T18:15:33.320Z" name="Index - star" time="1"/>
    <testcase id="2023-04-12T18:15:33.839Z" name="Index - star, no match" time="0"/>
    <testcase id="2023-04-12T18:15:34.336Z" name="Index - one index" time="0"/>
    <testcase id="2023-04-12T18:15:34.829Z" name="Index - multi-index" time="1"/>
    <testcase id="2023-04-12T18:15:35.331Z" name="Index - pattern" time="1"/>
    <testcase id="2023-04-12T18:15:35.842Z" name="Indices stats unrecognized parameter" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:36.330Z" name="free/indices.stats - /free/indices.stats/11_metric.yml" time="3" tests="9" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:36.330Z" name="Metric - blank" time="0"/>
    <testcase id="2023-04-12T18:15:36.683Z" name="Metric - _all" time="0"/>
    <testcase id="2023-04-12T18:15:37.029Z" name="Metric - one" time="0"/>
    <testcase id="2023-04-12T18:15:37.374Z" name="Metric - multi" time="0"/>
    <testcase id="2023-04-12T18:15:37.713Z" name="Metric - recovery" time="0"/>
    <testcase id="2023-04-12T18:15:38.052Z" name="Metric - _all include_segment_file_sizes" time="0"/>
    <testcase id="2023-04-12T18:15:38.398Z" name="Metric - segments include_segment_file_sizes" time="0"/>
    <testcase id="2023-04-12T18:15:38.753Z" name="Metric - _all include_unloaded_segments" time="0"/>
    <testcase id="2023-04-12T18:15:39.109Z" name="Metric - segments include_unloaded_segments" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:39.463Z" name="free/indices.stats - /free/indices.stats/12_level.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:39.463Z" name="Level - blank" time="0"/>
    <testcase id="2023-04-12T18:15:39.823Z" name="Level - indices" time="0"/>
    <testcase id="2023-04-12T18:15:40.195Z" name="Level - cluster" time="0"/>
    <testcase id="2023-04-12T18:15:40.570Z" name="Level - shards" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:15:40.939Z" name="free/indices.stats - /free/indices.stats/13_fields.yml" time="696" tests="23" failures="0" skipped="0">
    <testcase id="2023-04-12T18:15:40.939Z" name="Fields - blank" time="30"/>
    <testcase id="2023-04-12T18:16:11.212Z" name="Fields - one" time="30"/>
    <testcase id="2023-04-12T18:16:41.452Z" name="Fields - multi" time="30"/>
    <testcase id="2023-04-12T18:17:11.695Z" name="Fields - star" time="30"/>
    <testcase id="2023-04-12T18:17:41.938Z" name="Fields - pattern" time="30"/>
    <testcase id="2023-04-12T18:18:12.177Z" name="Fields - _all metric" time="30"/>
    <testcase id="2023-04-12T18:18:42.419Z" name="Fields - fielddata metric" time="30"/>
    <testcase id="2023-04-12T18:19:12.656Z" name="Fields - completion metric" time="30"/>
    <testcase id="2023-04-12T18:19:42.898Z" name="Fields - multi metric" time="30"/>
    <testcase id="2023-04-12T18:20:13.135Z" name="Fielddata fields - one" time="30"/>
    <testcase id="2023-04-12T18:20:43.372Z" name="Fielddata fields - multi" time="30"/>
    <testcase id="2023-04-12T18:21:13.611Z" name="Fielddata fields - star" time="30"/>
    <testcase id="2023-04-12T18:21:43.849Z" name="Fielddata fields - pattern" time="30"/>
    <testcase id="2023-04-12T18:22:14.084Z" name="Fielddata fields - all metric" time="30"/>
    <testcase id="2023-04-12T18:22:44.325Z" name="Fielddata fields - one metric" time="30"/>
    <testcase id="2023-04-12T18:23:14.561Z" name="Fielddata fields - multi metric" time="30"/>
    <testcase id="2023-04-12T18:23:44.799Z" name="Completion fields - one" time="30"/>
    <testcase id="2023-04-12T18:24:15.035Z" name="Completion fields - multi" time="30"/>
    <testcase id="2023-04-12T18:24:45.274Z" name="Completion fields - star" time="30"/>
    <testcase id="2023-04-12T18:25:15.509Z" name="Completion - pattern" time="30"/>
    <testcase id="2023-04-12T18:25:45.748Z" name="Completion - all metric" time="30"/>
    <testcase id="2023-04-12T18:26:15.993Z" name="Completion - one metric" time="30"/>
    <testcase id="2023-04-12T18:26:46.234Z" name="Completion - multi metric" time="30"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:16.472Z" name="free/indices.stats - /free/indices.stats/14_groups.yml" time="2" tests="8" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:16.472Z" name="Groups - blank" time="0"/>
    <testcase id="2023-04-12T18:27:16.727Z" name="Groups - one" time="0"/>
    <testcase id="2023-04-12T18:27:16.995Z" name="Groups - multi" time="0"/>
    <testcase id="2023-04-12T18:27:17.249Z" name="Groups - star" time="0"/>
    <testcase id="2023-04-12T18:27:17.505Z" name="Groups - pattern" time="0"/>
    <testcase id="2023-04-12T18:27:17.765Z" name="Groups - _all metric" time="0"/>
    <testcase id="2023-04-12T18:27:18.023Z" name="Groups - search metric" time="0"/>
    <testcase id="2023-04-12T18:27:18.281Z" name="Groups - multi metric" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:18.539Z" name="free/indices.stats - /free/indices.stats/20_translog.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:18.539Z" name="Translog retention" time="0"/>
    <testcase id="2023-04-12T18:27:18.835Z" name="Translog retention settings are no long supported" time="0"/>
    <testcase id="2023-04-12T18:27:19.077Z" name="Translog last modified age stats" time="0"/>
    <testcase id="2023-04-12T18:27:19.335Z" name="Translog stats on closed indices" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:19.674Z" name="free/indices.stats - /free/indices.stats/30_segments.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:19.674Z" name="Segment Stats" time="0"/>
    <testcase id="2023-04-12T18:27:20.036Z" name="Indices Stats API with extended files stats" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:20.312Z" name="free/indices.stats - /free/indices.stats/40_updates_on_refresh.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:20.312Z" name="Completion stats" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:20.631Z" name="free/indices.stats - /free/indices.stats/50_disk_usage.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:20.631Z" name="Name the index" time="0"/>
    <testcase id="2023-04-12T18:27:20.915Z" name="Star" time="0"/>
    <testcase id="2023-04-12T18:27:21.190Z" name="Dense vectors" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:21.493Z" name="free/indices.stats - /free/indices.stats/60_field_usage.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2023-04-12T18:27:21.493Z" name="Field usage stats" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:27:21.493Z" name="free/indices.stats - /free/indices.stats/70_write_load.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:21.493Z" name="Write load average is tracked at shard level" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:21.745Z" name="free/indices.update_aliases - /free/indices.update_aliases/10_basic.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:21.745Z" name="Basic test for aliases" time="0"/>
    <testcase id="2023-04-12T18:27:22.008Z" name="Basic test for multiple aliases" time="0"/>
    <testcase id="2023-04-12T18:27:22.263Z" name="Remove alias" time="0"/>
    <testcase id="2023-04-12T18:27:22.563Z" name="Aliases with date math" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:22.818Z" name="free/indices.update_aliases - /free/indices.update_aliases/20_routing.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:22.818Z" name="Routing" time="0"/>
    <testcase id="2023-04-12T18:27:23.067Z" name="Index Routing" time="0"/>
    <testcase id="2023-04-12T18:27:23.321Z" name="Search Routing" time="0"/>
    <testcase id="2023-04-12T18:27:23.572Z" name="Index, Default Routing" time="0"/>
    <testcase id="2023-04-12T18:27:23.822Z" name="Search, Default Routing" time="0"/>
    <testcase id="2023-04-12T18:27:24.069Z" name="Index, Search, Default Routing" time="0"/>
    <testcase id="2023-04-12T18:27:24.320Z" name="Numeric Routing" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:24.573Z" name="free/indices.update_aliases - /free/indices.update_aliases/30_remove_index_and_replace_with_alias.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:24.573Z" name="Remove an index and replace it with an alias" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:24.903Z" name="free/indices.update_aliases - /free/indices.update_aliases/40_must_exist.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:24.903Z" name="Remove alias with must_exist" time="0"/>
    <testcase id="2023-04-12T18:27:25.177Z" name="Alias must_exist only on remove" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:25.418Z" name="free/indices.validate_query - /free/indices.validate_query/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:25.418Z" name="Validate query api" time="0"/>
    <testcase id="2023-04-12T18:27:25.660Z" name="Validate body without query element" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:25.897Z" name="free/indices.validate_query - /free/indices.validate_query/20_query_string.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:25.897Z" name="validate_query with query_string parameters" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:26.150Z" name="free/info - /free/info/10_info.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:26.150Z" name="Info" time="0"/>
    <testcase id="2023-04-12T18:27:26.299Z" name="Info build flavor" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:26.452Z" name="free/info - /free/info/20_lucene_version.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:26.452Z" name="Lucene Version" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:26.599Z" name="free/ingest - /free/ingest/10_basic.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:26.599Z" name="Test basic pipeline crud" time="0"/>
    <testcase id="2023-04-12T18:27:26.784Z" name="Test Put Versioned Pipeline" time="0"/>
    <testcase id="2023-04-12T18:27:27.031Z" name="Test Get All Pipelines" time="0"/>
    <testcase id="2023-04-12T18:27:27.213Z" name="Test invalid config" time="0"/>
    <testcase id="2023-04-12T18:27:27.364Z" name="Test Get Summarized Pipelines" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:27.515Z" name="free/mget - /free/mget/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:27.515Z" name="Basic multi-get" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:27.851Z" name="free/mget - /free/mget/12_non_existent_index.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:27.851Z" name="Non-existent index" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:28.114Z" name="free/mget - /free/mget/13_missing_metadata.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:28.114Z" name="Missing metadata" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:28.377Z" name="free/mget - /free/mget/14_alias_to_multiple_indices.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:28.377Z" name="Multi Get with alias that resolves to multiple indices" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:28.715Z" name="free/mget - /free/mget/15_ids.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:28.715Z" name="IDs" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:28.981Z" name="free/mget - /free/mget/17_default_index.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:28.981Z" name="Default index/type" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:29.331Z" name="free/mget - /free/mget/20_stored_fields.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:29.331Z" name="Stored fields" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:29.596Z" name="free/mget - /free/mget/40_routing.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:29.596Z" name="routing" time="0"/>
    <testcase id="2023-04-12T18:27:29.975Z" name="requires routing" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:30.363Z" name="free/mget - /free/mget/60_realtime_refresh.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:30.363Z" name="Realtime Refresh" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:30.635Z" name="free/mget - /free/mget/70_source_filtering.yml" time="2" tests="8" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:30.635Z" name="Source filtering -  true/false" time="0"/>
    <testcase id="2023-04-12T18:27:30.900Z" name="Source filtering -  include field" time="0"/>
    <testcase id="2023-04-12T18:27:31.175Z" name="Source filtering -  include nested field" time="0"/>
    <testcase id="2023-04-12T18:27:31.451Z" name="Source filtering -  exclude field" time="0"/>
    <testcase id="2023-04-12T18:27:31.725Z" name="Source filtering -  ids and true/false" time="0"/>
    <testcase id="2023-04-12T18:27:32.000Z" name="Source filtering -  ids and include field" time="0"/>
    <testcase id="2023-04-12T18:27:32.272Z" name="Source filtering -  ids and include nested field" time="0"/>
    <testcase id="2023-04-12T18:27:32.541Z" name="Source filtering -  ids and exclude field" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:32.811Z" name="free/mget - /free/mget/80_deprecated.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2023-04-12T18:27:32.811Z" name="Deprecated parameters should fail in Multi Get query" time="0">
      <skipped>{
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:27:32.959Z" name="free/mget - /free/mget/90_synthetic_source.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:32.959Z" name="keyword" time="0"/>
    <testcase id="2023-04-12T18:27:33.217Z" name="stored text" time="0"/>
    <testcase id="2023-04-12T18:27:33.474Z" name="force_synthetic_source_ok" time="0"/>
    <testcase id="2023-04-12T18:27:33.739Z" name="force_synthetic_source_bad_mapping" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:34.001Z" name="free/migration - /free/migration/10_get_feature_upgrade_status.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:34.001Z" name="Get feature upgrade status" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:34.157Z" name="free/migration - /free/migration/20_post_feature_upgrade.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:34.157Z" name="Get feature upgrade status" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:34.310Z" name="free/mlt - /free/mlt/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:34.310Z" name="Basic mlt" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:34.573Z" name="free/mlt - /free/mlt/20_docs.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:34.573Z" name="Basic mlt query with docs" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:34.846Z" name="free/mlt - /free/mlt/30_unlike.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:34.846Z" name="Basic mlt query with unlike" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:35.122Z" name="free/msearch - /free/msearch/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:35.122Z" name="Basic multi-search" time="0"/>
    <testcase id="2023-04-12T18:27:35.491Z" name="Least impact smoke test" time="0"/>
    <testcase id="2023-04-12T18:27:35.853Z" name="Search with new response format" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:36.219Z" name="free/msearch - /free/msearch/11_status.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:36.219Z" name="Check Status" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:36.459Z" name="free/msearch - /free/msearch/20_typed_keys.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:36.459Z" name="Multisearch test with typed_keys parameter" time="0"/>
    <testcase id="2023-04-12T18:27:36.818Z" name="Multisearch test with typed_keys parameter for sampler and significant terms" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:37.167Z" name="free/mtermvectors - /free/mtermvectors/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:37.167Z" name="Basic tests for multi termvector get" time="0"/>
    <testcase id="2023-04-12T18:27:37.429Z" name="Tests index not found error in item" time="0"/>
    <testcase id="2023-04-12T18:27:37.688Z" name="Tests catching other exceptions per item" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:38.046Z" name="free/mtermvectors - /free/mtermvectors/20_deprecated.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2023-04-12T18:27:38.046Z" name="Deprecated camel case and _ parameters should fail in Term Vectors query" time="0">
      <skipped>{
  "features": [
    "warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:27:38.194Z" name="free/mtermvectors - /free/mtermvectors/30_routing.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:38.194Z" name="routing" time="0"/>
    <testcase id="2023-04-12T18:27:38.570Z" name="requires routing" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:38.962Z" name="free/nodes.hot_threads - /free/nodes.hot_threads/10_basic.yml" time="4" tests="6" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:38.962Z" name="Nodes hot threads - CPU" time="1"/>
    <testcase id="2023-04-12T18:27:39.728Z" name="Nodes hot threads - CPU sort" time="1"/>
    <testcase id="2023-04-12T18:27:40.488Z" name="Nodes hot threads - WAIT" time="1"/>
    <testcase id="2023-04-12T18:27:41.244Z" name="Nodes hot threads - BLOCK" time="1"/>
    <testcase id="2023-04-12T18:27:42.004Z" name="Nodes hot threads - MEM" time="1"/>
    <testcase id="2023-04-12T18:27:42.764Z" name="Nodes hot threads - BAD" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:42.917Z" name="free/nodes.info - /free/nodes.info/10_basic.yml" time="0" tests="2" failures="0" skipped="1">
    <testcase id="2023-04-12T18:27:42.917Z" name="node_info test" time="0"/>
    <testcase id="2023-04-12T18:27:43.070Z" name="node_info role test" time="0">
      <skipped>{
  "version": " - 7.7.99",
  "reason": "node roles were not sorted before 7.8.0",
  "features": [
    "no_xpack"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:27:43.221Z" name="free/nodes.info - /free/nodes.info/20_transport.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:43.221Z" name="node_info test profile is empty" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:43.372Z" name="free/nodes.info - /free/nodes.info/30_settings.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:43.372Z" name="node_info test flat_settings" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:43.526Z" name="free/nodes.info - /free/nodes.info/40_aggs.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:43.526Z" name="node_info test aggregations" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:43.679Z" name="free/nodes.info - /free/nodes.info/50_metrics.yml" time="2" tests="14" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:43.679Z" name="_all metrics" time="0"/>
    <testcase id="2023-04-12T18:27:43.830Z" name="settings metric" time="0"/>
    <testcase id="2023-04-12T18:27:43.982Z" name="os metric" time="0"/>
    <testcase id="2023-04-12T18:27:44.134Z" name="process metric" time="0"/>
    <testcase id="2023-04-12T18:27:44.285Z" name="jvm metric" time="0"/>
    <testcase id="2023-04-12T18:27:44.435Z" name="thread_pool metric" time="0"/>
    <testcase id="2023-04-12T18:27:44.587Z" name="transport metric" time="0"/>
    <testcase id="2023-04-12T18:27:44.739Z" name="http metric" time="0"/>
    <testcase id="2023-04-12T18:27:44.893Z" name="plugins metric" time="0"/>
    <testcase id="2023-04-12T18:27:45.049Z" name="ingest metric" time="0"/>
    <testcase id="2023-04-12T18:27:45.206Z" name="indices metric" time="0"/>
    <testcase id="2023-04-12T18:27:45.359Z" name="aggregations metric" time="0"/>
    <testcase id="2023-04-12T18:27:45.517Z" name="lists of metrics" time="0"/>
    <testcase id="2023-04-12T18:27:45.672Z" name="no metrics" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:45.829Z" name="free/nodes.reload_secure_settings - /free/nodes.reload_secure_settings/10_basic.yml" time="0" tests="2" failures="0" skipped="1">
    <testcase id="2023-04-12T18:27:45.829Z" name="node_reload_secure_settings test wrong password" time="0"/>
    <testcase id="2023-04-12T18:27:46.004Z" name="node_reload_secure_settings test correct(empty) password" time="0">
      <skipped>{
  "features": [
    "fips_140"
  ],
  "reason": "In FIPS 140 mode, we use a password protected elasticsearch keystore"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:27:46.162Z" name="free/nodes.stats - /free/nodes.stats/10_basic.yml" time="0" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:46.162Z" name="Nodes stats" time="0"/>
    <testcase id="2023-04-12T18:27:46.326Z" name="Nodes stats level" time="0"/>
    <testcase id="2023-04-12T18:27:46.486Z" name="Nodes stats unrecognized parameter" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:46.648Z" name="free/nodes.stats - /free/nodes.stats/11_indices_metrics.yml" time="3" tests="17" failures="0" skipped="1">
    <testcase id="2023-04-12T18:27:46.648Z" name="Metric - blank" time="0"/>
    <testcase id="2023-04-12T18:27:46.824Z" name="Metric - _all" time="0"/>
    <testcase id="2023-04-12T18:27:46.990Z" name="Metric - indices _all" time="0"/>
    <testcase id="2023-04-12T18:27:47.158Z" name="Metric - one" time="0"/>
    <testcase id="2023-04-12T18:27:47.322Z" name="Metric - multi" time="0"/>
    <testcase id="2023-04-12T18:27:47.488Z" name="Metric - recovery" time="0"/>
    <testcase id="2023-04-12T18:27:47.652Z" name="Metric - _all include_segment_file_sizes" time="0"/>
    <testcase id="2023-04-12T18:27:47.814Z" name="Metric - segments include_segment_file_sizes" time="0"/>
    <testcase id="2023-04-12T18:27:47.974Z" name="Metric - segments include_unloaded_segments" time="0"/>
    <testcase id="2023-04-12T18:27:48.132Z" name="Metric - _all include_unloaded_segments" time="0"/>
    <testcase id="2023-04-12T18:27:48.293Z" name="Metric - http" time="0"/>
    <testcase id="2023-04-12T18:27:48.452Z" name="Metric - blank for indices shard_stats" time="0"/>
    <testcase id="2023-04-12T18:27:48.621Z" name="Metric - _all for indices shard_stats" time="0"/>
    <testcase id="2023-04-12T18:27:48.791Z" name="indices shard_stats total count test" time="0">
      <skipped>{
  "features": [
    "allowed_warnings",
    "arbitrary_key"
  ],
  "version": " - 7.15.0",
  "reason": "total shard count added in version 7.15.0, and fixed in 7.15.1"
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:27:48.955Z" name="Metric - blank for indices mappings" time="0"/>
    <testcase id="2023-04-12T18:27:49.125Z" name="indices mappings exact count test for indices level" time="0"/>
    <testcase id="2023-04-12T18:27:49.434Z" name="indices mappings does not exist in shards level" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:49.750Z" name="free/nodes.stats - /free/nodes.stats/20_response_filtering.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:49.750Z" name="Nodes Stats with response filtering" time="0"/>
    <testcase id="2023-04-12T18:27:49.951Z" name="Nodes Stats filtered using both includes and excludes filters" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:50.127Z" name="free/nodes.stats - /free/nodes.stats/30_discovery.yml" time="0" tests="4" failures="0" skipped="4">
    <testcase id="2023-04-12T18:27:50.127Z" name="Discovery stats" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:27:50.127Z" name="Master timing stats" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:27:50.127Z" name="Master cluster applier stats" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:27:50.127Z" name="Master serialization stats" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:27:50.127Z" name="free/nodes.stats - /free/nodes.stats/40_store_stats.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:50.127Z" name="Store stats" time="0"/>
    <testcase id="2023-04-12T18:27:50.290Z" name="Store stats bwc" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:50.452Z" name="free/nodes.stats - /free/nodes.stats/50_indexing_pressure.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:50.452Z" name="Indexing pressure stats" time="0"/>
    <testcase id="2023-04-12T18:27:50.612Z" name="Indexing pressure memory limit" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:50.771Z" name="free/nodes.stats - /free/nodes.stats/60_transport_stats.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:50.771Z" name="Transport stats" time="0"/>
    <testcase id="2023-04-12T18:27:50.930Z" name="Transport handling time histogram" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:51.090Z" name="free/ping - /free/ping/10_ping.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:51.090Z" name="Ping" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:51.251Z" name="free/range - /free/range/10_basic.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:51.251Z" name="Integer range" time="0"/>
    <testcase id="2023-04-12T18:27:51.542Z" name="Long range" time="0"/>
    <testcase id="2023-04-12T18:27:51.829Z" name="Float range" time="0"/>
    <testcase id="2023-04-12T18:27:52.108Z" name="Double range" time="0"/>
    <testcase id="2023-04-12T18:27:52.387Z" name="IP range" time="0"/>
    <testcase id="2023-04-12T18:27:52.667Z" name="Date range" time="0"/>
    <testcase id="2023-04-12T18:27:52.948Z" name="Date range rounding" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:53.223Z" name="free/scripts - /free/scripts/20_get_script_context.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:53.223Z" name="Action to get all contexts" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:53.382Z" name="free/scripts - /free/scripts/25_get_script_languages.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:53.382Z" name="Action to get script languages" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:53.543Z" name="free/scroll - /free/scroll/10_basic.yml" time="2" tests="7" failures="0" skipped="1">
    <testcase id="2023-04-12T18:27:53.543Z" name="Basic scroll" time="0"/>
    <testcase id="2023-04-12T18:27:53.860Z" name="Basic scroll with 1 shard" time="0"/>
    <testcase id="2023-04-12T18:27:54.158Z" name="Body params override query string" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:27:54.158Z" name="Scroll cannot used the request cache" time="0"/>
    <testcase id="2023-04-12T18:27:54.410Z" name="Scroll with size 0" time="0"/>
    <testcase id="2023-04-12T18:27:54.666Z" name="Scroll max_score is null" time="0"/>
    <testcase id="2023-04-12T18:27:54.949Z" name="Scroll with new response format" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:55.242Z" name="free/scroll - /free/scroll/11_clear.yml" time="0" tests="3" failures="0" skipped="2">
    <testcase id="2023-04-12T18:27:55.242Z" name="Clear scroll" time="0"/>
    <testcase id="2023-04-12T18:27:55.532Z" name="Body params with array param override query string" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:27:55.532Z" name="Body params with string param scroll id override query string" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:27:55.532Z" name="free/scroll - /free/scroll/12_slices.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:55.532Z" name="Sliced scroll" time="0"/>
    <testcase id="2023-04-12T18:27:55.964Z" name="Sliced scroll with invalid arguments" time="0"/>
    <testcase id="2023-04-12T18:27:56.405Z" name="Sliced scroll with doc values" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:56.826Z" name="free/scroll - /free/scroll/20_keep_alive.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:56.826Z" name="Max keep alive" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:57.176Z" name="free/search - /free/search/100_stored_fields.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:57.176Z" name="Stored fields" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:27:57.478Z" name="free/search - /free/search/10_source_filtering.yml" time="7" tests="19" failures="0" skipped="0">
    <testcase id="2023-04-12T18:27:57.478Z" name="_source: true" time="0"/>
    <testcase id="2023-04-12T18:27:57.863Z" name="_source: false" time="0"/>
    <testcase id="2023-04-12T18:27:58.236Z" name="no filtering" time="0"/>
    <testcase id="2023-04-12T18:27:58.614Z" name="_source in body" time="0"/>
    <testcase id="2023-04-12T18:27:58.995Z" name="_source_includes and _source in body" time="0"/>
    <testcase id="2023-04-12T18:27:59.376Z" name="_source_includes" time="0"/>
    <testcase id="2023-04-12T18:27:59.763Z" name="_source_excludes" time="0"/>
    <testcase id="2023-04-12T18:28:00.144Z" name="_source field1 field2" time="0"/>
    <testcase id="2023-04-12T18:28:00.518Z" name="_source.include field1 field2" time="0"/>
    <testcase id="2023-04-12T18:28:00.896Z" name="_source includes and excludes" time="0"/>
    <testcase id="2023-04-12T18:28:01.274Z" name="_source include on bigint" time="0"/>
    <testcase id="2023-04-12T18:28:01.659Z" name="_source filtering on bigint" time="0"/>
    <testcase id="2023-04-12T18:28:02.049Z" name="fields in body" time="0"/>
    <testcase id="2023-04-12T18:28:02.441Z" name="fields in body with source" time="0"/>
    <testcase id="2023-04-12T18:28:02.831Z" name="docvalue_fields" time="0"/>
    <testcase id="2023-04-12T18:28:03.215Z" name="multiple docvalue_fields" time="0"/>
    <testcase id="2023-04-12T18:28:03.599Z" name="docvalue_fields as url param" time="0"/>
    <testcase id="2023-04-12T18:28:03.985Z" name="docvalue_fields with explicit format" time="0"/>
    <testcase id="2023-04-12T18:28:04.367Z" name="docvalue_fields - double" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:04.750Z" name="free/search - /free/search/110_field_collapsing.yml" time="5" tests="15" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:04.750Z" name="field collapsing" time="0"/>
    <testcase id="2023-04-12T18:28:05.061Z" name="field collapsing and from" time="0"/>
    <testcase id="2023-04-12T18:28:05.364Z" name="field collapsing and inner_hits" time="0"/>
    <testcase id="2023-04-12T18:28:05.671Z" name="field collapsing, inner_hits, and fields" time="0"/>
    <testcase id="2023-04-12T18:28:05.975Z" name="field collapsing, inner_hits and maxConcurrentGroupRequests" time="0"/>
    <testcase id="2023-04-12T18:28:06.280Z" name="field collapsing and scroll" time="0"/>
    <testcase id="2023-04-12T18:28:06.586Z" name="field collapsing and search_after with invalid sort" time="0"/>
    <testcase id="2023-04-12T18:28:06.894Z" name="field collapsing and search_after" time="0"/>
    <testcase id="2023-04-12T18:28:07.192Z" name="field collapsing and rescore" time="0"/>
    <testcase id="2023-04-12T18:28:07.500Z" name="no hits and inner_hits" time="0"/>
    <testcase id="2023-04-12T18:28:07.798Z" name="no hits and inner_hits max_score null" time="0"/>
    <testcase id="2023-04-12T18:28:08.095Z" name="field collapsing and multiple inner_hits" time="0"/>
    <testcase id="2023-04-12T18:28:08.390Z" name="field collapsing, inner_hits and version" time="0"/>
    <testcase id="2023-04-12T18:28:08.683Z" name="field collapsing on a field alias" time="0"/>
    <testcase id="2023-04-12T18:28:09.105Z" name="field collapsing, inner_hits and seq_no" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:09.410Z" name="free/search - /free/search/115_multiple_field_collapsing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:09.410Z" name="two levels fields collapsing" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:09.683Z" name="free/search - /free/search/120_batch_reduce_size.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:09.683Z" name="batched_reduce_size lower limit" time="0"/>
    <testcase id="2023-04-12T18:28:10.039Z" name="batched_reduce_size 2 with 5 shards" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:10.428Z" name="free/search - /free/search/140_pre_filter_search_shards.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:10.428Z" name="pre_filter_shard_size with invalid parameter" time="0"/>
    <testcase id="2023-04-12T18:28:10.855Z" name="pre_filter_shard_size with shards that have no hit" time="0"/>
    <testcase id="2023-04-12T18:28:11.320Z" name="prefilter on non-indexed date fields" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:11.776Z" name="free/search - /free/search/150_rewrite_on_coordinator.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:11.776Z" name="Ensure that we fetch the document only once" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:12.269Z" name="free/search - /free/search/160_exists_query.yml" time="0" tests="71" failures="0" skipped="71">
    <testcase id="2023-04-12T18:28:12.269Z" name="Test exists query on mapped binary field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.269Z" name="Test exists query on mapped boolean field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.269Z" name="Test exists query on mapped date field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.269Z" name="Test exists query on mapped geo_point field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.269Z" name="Test exists query on mapped ip field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on mapped keyword field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on mapped byte field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on mapped double field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on mapped float field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on mapped half_float field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on mapped integer field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on mapped long field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on mapped short field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on mapped object field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on mapped object inner field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on mapped text field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on _id field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on _index field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on _routing field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on _seq_no field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on _source field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on _version field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on unmapped binary field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on unmapped boolean field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on unmapped date field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on unmapped geo_point field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on unmapped ip field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on unmapped keyword field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on unmapped byte field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on unmapped double field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on unmapped float field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on unmapped half_float field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on unmapped integer field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on unmapped long field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.270Z" name="Test exists query on unmapped short field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on unmapped object field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on unmapped object inner field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on unmapped text field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on binary field in empty index" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on boolean field in empty index" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on date field in empty index" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on geo_point field in empty index" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on ip field in empty index" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on keyword field in empty index" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on byte field in empty index" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on double field in empty index" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on float field in empty index" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on half_float field in empty index" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on integer field in empty index" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on long field in empty index" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on short field in empty index" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on object field in empty index" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on object inner field in empty index" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on text field in empty index" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on mapped binary field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on mapped boolean field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on mapped date field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on mapped geo_point field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on mapped ip field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on mapped keyword field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on mapped byte field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on mapped double field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on mapped float field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on mapped half_float field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on mapped integer field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.271Z" name="Test exists query on mapped long field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.272Z" name="Test exists query on mapped short field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.272Z" name="Test exists query on mapped object field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.272Z" name="Test exists query on mapped object inner field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.272Z" name="Test exists query on mapped text field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.272Z" name="Test exists query on text field with empty values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:28:12.273Z" name="free/search - /free/search/161_exists_query_within_nested_query.yml" time="0" tests="32" failures="0" skipped="32">
    <testcase id="2023-04-12T18:28:12.273Z" name="Test exists query within nested query on mapped binary field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.273Z" name="Test exists query within nested query on mapped boolean field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.273Z" name="Test exists query within nested query on mapped date field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.273Z" name="Test exists query within nested query on mapped geo_point field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.273Z" name="Test exists query within nested query on mapped ip field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.273Z" name="Test exists query within nested query on mapped keyword field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.273Z" name="Test exists query within nested query on mapped byte field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.273Z" name="Test exists query within nested query on mapped double field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.273Z" name="Test exists query within nested query on mapped float field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.273Z" name="Test exists query within nested query on mapped half_float field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.273Z" name="Test exists query within nested query on mapped integer field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped long field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped short field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped object field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped object inner field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped text field" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped binary field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped boolean field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped date field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped geo_point field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped ip field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped keyword field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped byte field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped double field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped float field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped half_float field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped integer field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped long field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.274Z" name="Test exists query within nested query on mapped short field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.275Z" name="Test exists query within nested query on mapped object field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.275Z" name="Test exists query within nested query on mapped object inner field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:12.275Z" name="Test exists query within nested query on mapped text field with no doc values" time="0">
      <skipped>{
  "features": [
    "headers",
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:28:12.275Z" name="free/search - /free/search/170_terms_query.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:12.275Z" name="Terms Query with No.of terms exceeding index.max_terms_count should FAIL" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:12.551Z" name="free/search - /free/search/180_locale_dependent_mapping.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:12.551Z" name="Test Index and Search locale dependent mappings / dates" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:12.826Z" name="free/search - /free/search/190_index_prefix_search.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:12.826Z" name="search with index prefixes" time="0"/>
    <testcase id="2023-04-12T18:28:13.105Z" name="search index prefixes with span_multi" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:13.379Z" name="free/search - /free/search/200_ignore_malformed.yml" time="2" tests="6" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:13.379Z" name="Exists on _ignored" time="0"/>
    <testcase id="2023-04-12T18:28:13.649Z" name="Search on _ignored with term" time="0"/>
    <testcase id="2023-04-12T18:28:13.912Z" name="Search on _ignored with terms" time="0"/>
    <testcase id="2023-04-12T18:28:14.173Z" name="_ignored is returned by default" time="0"/>
    <testcase id="2023-04-12T18:28:14.426Z" name="_ignored is still returned with explicit list of stored fields" time="0"/>
    <testcase id="2023-04-12T18:28:14.682Z" name="ignored_field_values is returned by default" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:14.934Z" name="free/search - /free/search/200_index_phrase_search.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:14.934Z" name="search with indexed phrases" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:15.195Z" name="free/search - /free/search/20_default_values.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:15.195Z" name="Basic search" time="0"/>
    <testcase id="2023-04-12T18:28:15.555Z" name="Search body without query element" time="0"/>
    <testcase id="2023-04-12T18:28:15.909Z" name="Search with new response format" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:16.257Z" name="free/search - /free/search/210_rescore_explain.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:16.257Z" name="Score should match explanation in rescore" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:16.525Z" name="free/search - /free/search/220_total_hits_object.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:16.525Z" name="hits.total as an object" time="0"/>
    <testcase id="2023-04-12T18:28:16.902Z" name="track_total_hits with rest_total_hits_as_int" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:17.281Z" name="free/search - /free/search/230_interval_query.yml" time="6" tests="22" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:17.281Z" name="Test ordered matching" time="0"/>
    <testcase id="2023-04-12T18:28:17.542Z" name="Test default unordered matching" time="0"/>
    <testcase id="2023-04-12T18:28:17.793Z" name="Test explicit unordered matching" time="0"/>
    <testcase id="2023-04-12T18:28:18.045Z" name="Test phrase matching" time="0"/>
    <testcase id="2023-04-12T18:28:18.297Z" name="Test unordered max_gaps matching" time="0"/>
    <testcase id="2023-04-12T18:28:18.544Z" name="Test ordered max_gaps matching" time="0"/>
    <testcase id="2023-04-12T18:28:18.808Z" name="Test ordered combination with disjunction" time="0"/>
    <testcase id="2023-04-12T18:28:19.058Z" name="Test ordered combination with max_gaps" time="0"/>
    <testcase id="2023-04-12T18:28:19.308Z" name="Test ordered combination" time="0"/>
    <testcase id="2023-04-12T18:28:19.556Z" name="Test unordered combination" time="0"/>
    <testcase id="2023-04-12T18:28:19.805Z" name="Test block combination" time="0"/>
    <testcase id="2023-04-12T18:28:20.051Z" name="Test containing" time="0"/>
    <testcase id="2023-04-12T18:28:20.300Z" name="Test not containing" time="0"/>
    <testcase id="2023-04-12T18:28:20.548Z" name="Test contained_by" time="0"/>
    <testcase id="2023-04-12T18:28:20.800Z" name="Test not_contained_by" time="0"/>
    <testcase id="2023-04-12T18:28:21.047Z" name="Test not_overlapping" time="0"/>
    <testcase id="2023-04-12T18:28:21.295Z" name="Test overlapping" time="0"/>
    <testcase id="2023-04-12T18:28:21.542Z" name="Test before" time="0"/>
    <testcase id="2023-04-12T18:28:21.789Z" name="Test after" time="0"/>
    <testcase id="2023-04-12T18:28:22.039Z" name="Test prefix" time="0"/>
    <testcase id="2023-04-12T18:28:22.295Z" name="Test wildcard" time="0"/>
    <testcase id="2023-04-12T18:28:22.541Z" name="Test fuzzy match" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:22.793Z" name="free/search - /free/search/240_date_nanos.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:22.793Z" name="test sorting against date_nanos only fields" time="0"/>
    <testcase id="2023-04-12T18:28:23.183Z" name="doc value fields are working as expected across date and date_nanos fields" time="0"/>
    <testcase id="2023-04-12T18:28:23.588Z" name="date histogram aggregation with date and date_nanos mapping" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:23.979Z" name="free/search - /free/search/250_distance_feature.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:23.979Z" name="test distance_feature query on date type" time="0"/>
    <testcase id="2023-04-12T18:28:24.225Z" name="test distance_feature query on date_nanos type" time="0"/>
    <testcase id="2023-04-12T18:28:24.470Z" name="test distance_feature query on geo_point type" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:24.715Z" name="free/search - /free/search/260_parameter_validation.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:24.715Z" name="test negative size throws IAE" time="0"/>
    <testcase id="2023-04-12T18:28:24.963Z" name="test negative terminate_after throws IAE" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:25.212Z" name="free/search - /free/search/300_sequence_numbers.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:25.212Z" name="sequence numbers are returned if requested from body" time="0"/>
    <testcase id="2023-04-12T18:28:25.479Z" name="sequence numbers are returned if requested from url" time="0"/>
    <testcase id="2023-04-12T18:28:25.744Z" name="sequence numbers are not returned if not requested" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:26.009Z" name="free/search - /free/search/30_limits.yml" time="2" tests="8" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:26.009Z" name="Request window limits without scroll" time="0"/>
    <testcase id="2023-04-12T18:28:26.270Z" name="Request with negative from value url parameter" time="0"/>
    <testcase id="2023-04-12T18:28:26.529Z" name="Request with negative from value in body" time="0"/>
    <testcase id="2023-04-12T18:28:26.788Z" name="Request window limits with scroll" time="0"/>
    <testcase id="2023-04-12T18:28:27.048Z" name="Rescore window limits" time="0"/>
    <testcase id="2023-04-12T18:28:27.312Z" name="Docvalues_fields size limit" time="0"/>
    <testcase id="2023-04-12T18:28:27.574Z" name="Script_fields size limit" time="0"/>
    <testcase id="2023-04-12T18:28:27.837Z" name="Regexp length limit" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:28.108Z" name="free/search - /free/search/310_match_bool_prefix.yml" time="4" tests="15" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:28.108Z" name="scoring complete term" time="0"/>
    <testcase id="2023-04-12T18:28:28.372Z" name="scoring partial term" time="0"/>
    <testcase id="2023-04-12T18:28:28.634Z" name="minimum should match" time="0"/>
    <testcase id="2023-04-12T18:28:28.891Z" name="analyzer" time="0"/>
    <testcase id="2023-04-12T18:28:29.150Z" name="operator" time="0"/>
    <testcase id="2023-04-12T18:28:29.415Z" name="fuzziness" time="0"/>
    <testcase id="2023-04-12T18:28:29.686Z" name="multi_match single field complete term" time="0"/>
    <testcase id="2023-04-12T18:28:29.954Z" name="multi_match single field partial term" time="0"/>
    <testcase id="2023-04-12T18:28:30.218Z" name="multi_match multiple fields complete term" time="0"/>
    <testcase id="2023-04-12T18:28:30.495Z" name="multi_match multiple fields partial term" time="0"/>
    <testcase id="2023-04-12T18:28:30.768Z" name="multi_match multiple fields with analyzer" time="0"/>
    <testcase id="2023-04-12T18:28:31.042Z" name="multi_match multiple fields with minimum_should_match" time="0"/>
    <testcase id="2023-04-12T18:28:31.322Z" name="multi_match multiple fields with fuzziness" time="0"/>
    <testcase id="2023-04-12T18:28:31.607Z" name="multi_match multiple fields with boost" time="0"/>
    <testcase id="2023-04-12T18:28:31.888Z" name="multi_match multiple fields with slop throws exception" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:32.162Z" name="free/search - /free/search/320_disallow_queries.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2023-04-12T18:28:32.162Z" name="Test disallow expensive queries" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:28:32.164Z" name="free/search - /free/search/330_fetch_fields.yml" time="6" tests="22" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:32.164Z" name="Test basic field retrieval" time="0"/>
    <testcase id="2023-04-12T18:28:32.424Z" name="Test date formatting" time="0"/>
    <testcase id="2023-04-12T18:28:32.687Z" name="Test disable source" time="0"/>
    <testcase id="2023-04-12T18:28:32.955Z" name="Test ignore malformed" time="0"/>
    <testcase id="2023-04-12T18:28:33.223Z" name="Test disable _source loading" time="0"/>
    <testcase id="2023-04-12T18:28:33.490Z" name="Test search rewrite" time="0"/>
    <testcase id="2023-04-12T18:28:33.756Z" name="Test token count" time="0"/>
    <testcase id="2023-04-12T18:28:34.025Z" name="Test unmapped field" time="0"/>
    <testcase id="2023-04-12T18:28:34.288Z" name="Test unmapped fields inside disabled objects" time="0"/>
    <testcase id="2023-04-12T18:28:34.547Z" name="Test nested fields" time="0"/>
    <testcase id="2023-04-12T18:28:34.813Z" name="Test nested field inside object structure" time="0"/>
    <testcase id="2023-04-12T18:28:35.089Z" name="Test doubly nested fields" time="0"/>
    <testcase id="2023-04-12T18:28:35.376Z" name="Test nested fields with unmapped subfields" time="0"/>
    <testcase id="2023-04-12T18:28:35.650Z" name="Test nested fields with ignored subfields" time="0"/>
    <testcase id="2023-04-12T18:28:35.922Z" name="Test nested field with sibling field resolving to DocValueFetcher" time="0"/>
    <testcase id="2023-04-12T18:28:36.196Z" name="Test ignores malformed values while returning valid ones" time="0"/>
    <testcase id="2023-04-12T18:28:36.463Z" name="Test token_count inside nested field doesn't fail" time="0"/>
    <testcase id="2023-04-12T18:28:36.734Z" name="error includes field name" time="0"/>
    <testcase id="2023-04-12T18:28:37.004Z" name="error includes glob pattern" time="0"/>
    <testcase id="2023-04-12T18:28:37.269Z" name="error for flattened includes whole path" time="0"/>
    <testcase id="2023-04-12T18:28:37.535Z" name="test fetching metadata fields" time="0"/>
    <testcase id="2023-04-12T18:28:37.802Z" name="fetch geo_point" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:38.079Z" name="free/search - /free/search/340_flattened.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:38.079Z" name="Test exists query on flattened object field" time="0"/>
    <testcase id="2023-04-12T18:28:38.360Z" name="Test query string query on flattened object field" time="0"/>
    <testcase id="2023-04-12T18:28:38.653Z" name="Test fields option on flattened object field" time="0"/>
    <testcase id="2023-04-12T18:28:38.930Z" name="Test fields option on flattened object field with include_unmapped" time="0"/>
    <testcase id="2023-04-12T18:28:39.205Z" name="Test fetching flattened subfields via fields option" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:39.479Z" name="free/search - /free/search/350_binary_field.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:39.479Z" name="binary" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:39.754Z" name="free/search - /free/search/350_point_in_time.yml" time="2" tests="4" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:39.754Z" name="basic" time="0"/>
    <testcase id="2023-04-12T18:28:40.180Z" name="point-in-time with slicing" time="0"/>
    <testcase id="2023-04-12T18:28:40.580Z" name="wildcard" time="0"/>
    <testcase id="2023-04-12T18:28:40.991Z" name="msearch" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:41.391Z" name="free/search - /free/search/360_combined_fields.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:41.391Z" name="Test combined_fields query" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:41.680Z" name="free/search - /free/search/370_profile.yml" time="2" tests="6" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:41.680Z" name="fetch fields" time="0"/>
    <testcase id="2023-04-12T18:28:41.965Z" name="fetch source" time="0"/>
    <testcase id="2023-04-12T18:28:42.242Z" name="fetch nested source" time="0"/>
    <testcase id="2023-04-12T18:28:42.619Z" name="disabling stored fields removes fetch sub phases" time="0"/>
    <testcase id="2023-04-12T18:28:42.883Z" name="dfs knn vector profiling" time="0"/>
    <testcase id="2023-04-12T18:28:43.244Z" name="dfs profile for search with dfs_query_then_fetch" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:43.657Z" name="free/search - /free/search/380_sort_segments_on_timestamp.yml" time="0" tests="3" failures="2" skipped="1">
    <testcase id="2023-04-12T18:28:43.657Z" name="Test that index segments are sorted on timestamp field if @timestamp field is defined in mapping" time="0">
      <skipped>{
  "version": " - 7.99.99",
  "reason": "sorting segments was added in 7.16",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:28:43.810Z" name="Test that index segments are NOT sorted on timestamp field when @timestamp field is dynamically added" time="0">
      <failure message="skip: Bad version range:  - ">Error: skip: Bad version range:  - 
    at shouldSkip (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:938:15)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:533:13)
    at Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:11)
    at start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:28)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)</failure>
    </testcase>
    <testcase id="2023-04-12T18:28:43.843Z" name="Test if segments are missing @timestamp field we don't get errors" time="0">
      <failure message="skip: Bad version range:  - ">Error: skip: Bad version range:  - 
    at shouldSkip (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:938:15)
    at exec (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:533:13)
    at Object.run (/home/joshmock/Code/elasticsearch-js/test/integration/test-runner.js:289:11)
    at start (/home/joshmock/Code/elasticsearch-js/test/integration/index.js:354:28)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)</failure>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:28:43.883Z" name="free/search - /free/search/390_doc_values_search.yml" time="6" tests="23" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:43.883Z" name="Test match queries on number fields where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:44.144Z" name="Test terms queries on number fields where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:44.396Z" name="Test range queries on number fields where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:44.648Z" name="Test match query on date field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:44.900Z" name="Test range query on date field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:45.148Z" name="Test distance_feature query on date field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:45.404Z" name="Test match query on keyword field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:45.662Z" name="Test terms query on keyword field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:45.921Z" name="Test range query on keyword field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:46.173Z" name="Test fuzzy query on keyword field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:46.437Z" name="Test prefix query on keyword field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:46.693Z" name="Test case insensitive term query on keyword field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:46.942Z" name="Test wildcard query on keyword field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:47.192Z" name="Test case insensitive wildcard query on keyword field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:47.442Z" name="Test regexp query on keyword field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:47.693Z" name="Test match query on boolean field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:47.944Z" name="Test terms query on boolean field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:48.195Z" name="Test range query on boolean field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:48.447Z" name="Test match query on ip field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:48.711Z" name="Test terms query on ip field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:48.962Z" name="Test range query on ip field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:49.217Z" name="Test geo shape query on geo_point field where only doc values are enabled" time="0"/>
    <testcase id="2023-04-12T18:28:49.471Z" name="Test distance_feature query on geo_point field where only doc values are enabled" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:49.721Z" name="free/search - /free/search/390_lookup_fields.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:49.721Z" name="Retrieve lookup fields" time="0"/>
    <testcase id="2023-04-12T18:28:50.087Z" name="Fails to query or aggregate on lookup fields" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:50.446Z" name="free/search - /free/search/400_synthetic_source.yml" time="3" tests="10" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:50.446Z" name="keyword" time="0"/>
    <testcase id="2023-04-12T18:28:50.699Z" name="stored text" time="0"/>
    <testcase id="2023-04-12T18:28:50.953Z" name="stored keyword" time="0"/>
    <testcase id="2023-04-12T18:28:51.197Z" name="stored keyword without sibling fields" time="0"/>
    <testcase id="2023-04-12T18:28:51.458Z" name="force_synthetic_source_ok" time="0"/>
    <testcase id="2023-04-12T18:28:51.716Z" name="force_synthetic_source_bad_mapping" time="0"/>
    <testcase id="2023-04-12T18:28:51.966Z" name="doc values keyword with ignore_above" time="0"/>
    <testcase id="2023-04-12T18:28:52.250Z" name="stored keyword with ignore_above" time="0"/>
    <testcase id="2023-04-12T18:28:52.533Z" name="_source filtering" time="0"/>
    <testcase id="2023-04-12T18:28:52.785Z" name="_doc_count" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:53.068Z" name="free/search - /free/search/40_indices_boost.yml" time="2" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:53.068Z" name="Basic indices boost" time="0"/>
    <testcase id="2023-04-12T18:28:53.452Z" name="Indices boost with alias" time="0"/>
    <testcase id="2023-04-12T18:28:53.836Z" name="Indices boost with wildcard" time="0"/>
    <testcase id="2023-04-12T18:28:54.236Z" name="Indices boost multiple match" time="0"/>
    <testcase id="2023-04-12T18:28:54.618Z" name="Indices boost for nonexistent index/alias" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:55.000Z" name="free/search - /free/search/500_date_range.yml" time="1" tests="4" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:55.000Z" name="test range query for all docs with year uuuu" time="0"/>
    <testcase id="2023-04-12T18:28:55.362Z" name="test match query gte and lt for single result with year uuuu" time="0"/>
    <testcase id="2023-04-12T18:28:55.726Z" name="test match query gte and lte with year uuuu" time="0"/>
    <testcase id="2023-04-12T18:28:56.085Z" name="test match query with year uuuu" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:56.460Z" name="free/search - /free/search/60_query_string.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:56.460Z" name="search with query_string parameters" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:56.734Z" name="free/search - /free/search/70_response_filtering.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:56.734Z" name="Search with response filtering" time="0"/>
    <testcase id="2023-04-12T18:28:57.002Z" name="Search results filtered using both includes and excludes filters" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:57.281Z" name="free/search - /free/search/80_indices_options.yml" time="0" tests="3" failures="0" skipped="1">
    <testcase id="2023-04-12T18:28:57.281Z" name="Missing index date math with catch" time="0"/>
    <testcase id="2023-04-12T18:28:57.428Z" name="Missing index" time="0"/>
    <testcase id="2023-04-12T18:28:57.578Z" name="Closed index" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:28:57.728Z" name="free/search - /free/search/90_search_after.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:57.728Z" name="search with search_after parameter" time="0"/>
    <testcase id="2023-04-12T18:28:58.001Z" name="date" time="0"/>
    <testcase id="2023-04-12T18:28:58.249Z" name="date_nanos" time="0"/>
    <testcase id="2023-04-12T18:28:58.498Z" name="_shard_doc sort" time="0"/>
    <testcase id="2023-04-12T18:28:58.761Z" name="Format sort values" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:59.100Z" name="free/search - /free/search/issue4895.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:59.100Z" name="Test with _local preference placed in query body - should fail" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:59.370Z" name="free/search.highlight - /free/search.highlight/10_unified.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:59.370Z" name="Basic multi_match query" time="0"/>
    <testcase id="2023-04-12T18:28:59.629Z" name="Basic combined_fields query" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:28:59.885Z" name="free/search.highlight - /free/search.highlight/20_fvh.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:28:59.885Z" name="Highlight query" time="0"/>
    <testcase id="2023-04-12T18:29:00.151Z" name="Highlight multiple documents" time="0"/>
    <testcase id="2023-04-12T18:29:00.412Z" name="Highlight multiple nested documents" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:00.673Z" name="free/search.highlight - /free/search.highlight/30_max_analyzed_offset.yml" time="2" tests="8" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:00.673Z" name="Unified highlighter on a field WITHOUT OFFSETS exceeding index.highlight.max_analyzed_offset should FAIL" time="0"/>
    <testcase id="2023-04-12T18:29:00.925Z" name="Unified highlighter on a field WITHOUT OFFSETS exceeding index.highlight.max_analyzed_offset with max_analyzed_offset=20 should SUCCEED" time="0"/>
    <testcase id="2023-04-12T18:29:01.180Z" name="Plain highlighter on a field WITHOUT OFFSETS exceeding index.highlight.max_analyzed_offset should FAIL" time="0"/>
    <testcase id="2023-04-12T18:29:01.436Z" name="Plain highlighter on a field WITHOUT OFFSETS exceeding index.highlight.max_analyzed_offset with max_analyzed_offset=20 should SUCCEED" time="0"/>
    <testcase id="2023-04-12T18:29:01.711Z" name="Unified highlighter on a field WITH OFFSETS exceeding index.highlight.max_analyzed_offset should SUCCEED" time="0"/>
    <testcase id="2023-04-12T18:29:02.003Z" name="Plain highlighter on a field WITH OFFSETS exceeding index.highlight.max_analyzed_offset should FAIL" time="0"/>
    <testcase id="2023-04-12T18:29:02.281Z" name="Plain highlighter on a field WITH OFFSETS exceeding index.highlight.max_analyzed_offset with max_analyzed_offset=20 should SUCCEED" time="0"/>
    <testcase id="2023-04-12T18:29:02.553Z" name="Plain highlighter with max_analyzed_offset &lt; 0 should FAIL" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:02.819Z" name="free/search.highlight - /free/search.highlight/40_keyword_ignore.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:02.819Z" name="Plain Highligher should skip highlighting ignored keyword values" time="0"/>
    <testcase id="2023-04-12T18:29:03.081Z" name="Unified Highligher should skip highlighting ignored keyword values" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:03.340Z" name="free/search.highlight - /free/search.highlight/50_synthetic_source.yml" time="5" tests="18" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:03.340Z" name="keyword single plain" time="0"/>
    <testcase id="2023-04-12T18:29:03.607Z" name="keyword multi plain" time="0"/>
    <testcase id="2023-04-12T18:29:03.886Z" name="keyword single unified" time="0"/>
    <testcase id="2023-04-12T18:29:04.162Z" name="keyword multi unified" time="0"/>
    <testcase id="2023-04-12T18:29:04.452Z" name="keyword single fvh" time="0"/>
    <testcase id="2023-04-12T18:29:04.745Z" name="keyword multi fvh" time="0"/>
    <testcase id="2023-04-12T18:29:05.044Z" name="text single plain" time="0"/>
    <testcase id="2023-04-12T18:29:05.349Z" name="text multi plain" time="0"/>
    <testcase id="2023-04-12T18:29:05.676Z" name="text single unified from reanalysis" time="0"/>
    <testcase id="2023-04-12T18:29:06.005Z" name="text multi unified from reanalysis" time="0"/>
    <testcase id="2023-04-12T18:29:06.351Z" name="text single unified from positions" time="0"/>
    <testcase id="2023-04-12T18:29:06.677Z" name="text multi unified from positions" time="0"/>
    <testcase id="2023-04-12T18:29:06.975Z" name="text single unified from vectors" time="0"/>
    <testcase id="2023-04-12T18:29:07.256Z" name="text multi unified from vectors" time="0"/>
    <testcase id="2023-04-12T18:29:07.537Z" name="text single fvh source order" time="0"/>
    <testcase id="2023-04-12T18:29:07.828Z" name="text multi fvh source order" time="0"/>
    <testcase id="2023-04-12T18:29:08.138Z" name="text single fvh score order" time="0"/>
    <testcase id="2023-04-12T18:29:08.432Z" name="text multi fvh score order" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:08.726Z" name="free/search.inner_hits - /free/search.inner_hits/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:08.726Z" name="Nested inner hits" time="0"/>
    <testcase id="2023-04-12T18:29:09.019Z" name="Nested doc version and seqIDs" time="0"/>
    <testcase id="2023-04-12T18:29:09.339Z" name="Inner hits with disabled _source" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:09.737Z" name="free/search.inner_hits - /free/search.inner_hits/20_highlighting.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:09.737Z" name="Unified highlighter" time="0"/>
    <testcase id="2023-04-12T18:29:10.027Z" name="Unified highlighter with stored fields" time="0"/>
    <testcase id="2023-04-12T18:29:10.332Z" name="Unified highlighter with stored fields and disabled source" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:10.750Z" name="free/search.vectors - /free/search.vectors/40_knn_search.yml" time="3" tests="10" failures="0" skipped="2">
    <testcase id="2023-04-12T18:29:10.750Z" name="kNN search only" time="0"/>
    <testcase id="2023-04-12T18:29:11.044Z" name="kNN multi-field search only" time="0"/>
    <testcase id="2023-04-12T18:29:11.333Z" name="kNN search plus query" time="0"/>
    <testcase id="2023-04-12T18:29:11.617Z" name="kNN multi-field search with query" time="0"/>
    <testcase id="2023-04-12T18:29:11.906Z" name="kNN search with filter" time="0"/>
    <testcase id="2023-04-12T18:29:12.193Z" name="kNN search with explicit search_type" time="0"/>
    <testcase id="2023-04-12T18:29:12.472Z" name="kNN search in _knn_search endpoint" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:29:12.749Z" name="kNN search with filter in _knn_search endpoint" time="0">
      <skipped>{
  "version": " - 8.1.99",
  "reason": "kNN with filtering added in 8.2",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:29:13.034Z" name="Test nonexistent field" time="0"/>
    <testcase id="2023-04-12T18:29:13.314Z" name="Direct kNN queries are disallowed" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:13.589Z" name="free/search.vectors - /free/search.vectors/45_knn_search_byte.yml" time="2" tests="6" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:13.589Z" name="kNN search only" time="0"/>
    <testcase id="2023-04-12T18:29:13.870Z" name="kNN search plus query" time="0"/>
    <testcase id="2023-04-12T18:29:14.148Z" name="kNN search with filter" time="0"/>
    <testcase id="2023-04-12T18:29:14.421Z" name="kNN search with explicit search_type" time="0"/>
    <testcase id="2023-04-12T18:29:14.691Z" name="Test nonexistent field" time="0"/>
    <testcase id="2023-04-12T18:29:14.960Z" name="Direct kNN queries are disallowed" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:15.228Z" name="free/search.vectors - /free/search.vectors/50_dense_vector_field_usage.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2023-04-12T18:29:15.228Z" name="Field usage" time="0">
      <skipped>{
  "version": " - 8.0.99",
  "reason": "dense_vector field usage was added in 8.1",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:29:15.505Z" name="free/search.vectors - /free/search.vectors/60_knn_search_filter_alias.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:15.505Z" name="kNN filter alias" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:15.804Z" name="free/search.vectors - /free/search.vectors/70_dense_vector_telemetry.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:15.804Z" name="Field mapping stats" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:16.193Z" name="free/search_shards - /free/search_shards/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:16.193Z" name="Basic /_search_shards test" time="0"/>
    <testcase id="2023-04-12T18:29:16.430Z" name="Search shards aliases with and without filters" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:16.667Z" name="free/snapshot.clone - /free/snapshot.clone/10_basic.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:16.667Z" name="Clone a snapshot" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:17.363Z" name="free/snapshot.create - /free/snapshot.create/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:17.363Z" name="Create a snapshot" time="0"/>
    <testcase id="2023-04-12T18:29:17.785Z" name="Create a snapshot and clean up repository" time="0"/>
    <testcase id="2023-04-12T18:29:18.240Z" name="Create a snapshot for missing index" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:18.635Z" name="free/snapshot.get - /free/snapshot.get/10_basic.yml" time="3" tests="9" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:18.635Z" name="Get snapshot info" time="0"/>
    <testcase id="2023-04-12T18:29:19.028Z" name="Get missing snapshot info throws an exception" time="0"/>
    <testcase id="2023-04-12T18:29:19.242Z" name="Get missing snapshot info succeeds when ignore_unavailable is true" time="0"/>
    <testcase id="2023-04-12T18:29:19.457Z" name="Get snapshot info when verbose is false" time="0"/>
    <testcase id="2023-04-12T18:29:19.863Z" name="Get snapshot info contains include_global_state" time="1"/>
    <testcase id="2023-04-12T18:29:20.390Z" name="Get snapshot info with metadata" time="0"/>
    <testcase id="2023-04-12T18:29:20.808Z" name="Get snapshot info with index details" time="0"/>
    <testcase id="2023-04-12T18:29:21.216Z" name="Get snapshot info without index names" time="0"/>
    <testcase id="2023-04-12T18:29:21.626Z" name="Get snapshot info without repository names" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:22.042Z" name="free/snapshot.get_repository - /free/snapshot.get_repository/10_basic.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:22.042Z" name="Get all repositories" time="0"/>
    <testcase id="2023-04-12T18:29:22.299Z" name="Get repository by name" time="0"/>
    <testcase id="2023-04-12T18:29:22.558Z" name="Get missing repository by name" time="0"/>
    <testcase id="2023-04-12T18:29:22.815Z" name="Get all repositories with local flag" time="0"/>
    <testcase id="2023-04-12T18:29:23.075Z" name="Verify created repository" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:23.347Z" name="free/snapshot.get_repository - /free/snapshot.get_repository/20_repository_uuid.yml" time="1" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:23.347Z" name="Get repository returns UUID" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:23.864Z" name="free/snapshot.restore - /free/snapshot.restore/10_basic.yml" time="1" tests="2" failures="0" skipped="2">
    <testcase id="2023-04-12T18:29:23.864Z" name="Create a snapshot with single index and then restore it" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:29:24.156Z" name="Create a snapshot and then restore single index from it" time="0">
      <skipped>{
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:29:24.445Z" name="free/snapshot.status - /free/snapshot.status/10_basic.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:24.445Z" name="Get snapshot status" time="0"/>
    <testcase id="2023-04-12T18:29:24.843Z" name="Get missing snapshot status throws an exception" time="0"/>
    <testcase id="2023-04-12T18:29:25.058Z" name="Get missing snapshot status succeeds when ignoreUnavailable is true" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:25.272Z" name="free/suggest - /free/suggest/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:25.272Z" name="Basic tests for suggest API" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:25.538Z" name="free/suggest - /free/suggest/20_completion.yml" time="2" tests="7" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:25.538Z" name="Simple suggestion should work" time="0"/>
    <testcase id="2023-04-12T18:29:25.796Z" name="Simple suggestion array should work" time="0"/>
    <testcase id="2023-04-12T18:29:26.052Z" name="Suggestion entry should work" time="0"/>
    <testcase id="2023-04-12T18:29:26.306Z" name="Suggestion entry array should work" time="0"/>
    <testcase id="2023-04-12T18:29:26.561Z" name="Multiple Completion fields should work" time="0"/>
    <testcase id="2023-04-12T18:29:26.816Z" name="Suggestions with source should work" time="0"/>
    <testcase id="2023-04-12T18:29:27.088Z" name="Skip duplicates should work" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:27.342Z" name="free/suggest - /free/suggest/30_context.yml" time="2" tests="6" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:27.342Z" name="Simple context suggestion should work" time="0"/>
    <testcase id="2023-04-12T18:29:27.608Z" name="Category suggest context from path should work" time="0"/>
    <testcase id="2023-04-12T18:29:27.887Z" name="Geo suggest should work" time="0"/>
    <testcase id="2023-04-12T18:29:28.147Z" name="Multi contexts should work" time="0"/>
    <testcase id="2023-04-12T18:29:28.421Z" name="Skip duplicates with contexts should work" time="0"/>
    <testcase id="2023-04-12T18:29:28.681Z" name="Indexing and Querying without contexts is forbidden" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:28.948Z" name="free/suggest - /free/suggest/40_typed_keys.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:28.948Z" name="Test typed keys parameter for suggesters" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:29.207Z" name="free/suggest - /free/suggest/50_completion_with_multi_fields.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:29.207Z" name="Search by suggestion and by keyword sub-field should work" time="0"/>
    <testcase id="2023-04-12T18:29:29.469Z" name="Search by suggestion on sub field should work" time="0"/>
    <testcase id="2023-04-12T18:29:29.726Z" name="Search by suggestion on sub field with context should work" time="0"/>
    <testcase id="2023-04-12T18:29:29.988Z" name="Search by suggestion on sub field with weight should work" time="0"/>
    <testcase id="2023-04-12T18:29:30.244Z" name="Search by suggestion on geofield-hash on sub field should work" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:30.504Z" name="free/tasks.cancel - /free/tasks.cancel/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:30.504Z" name="tasks_cancel test" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:30.656Z" name="free/tasks.get - /free/tasks.get/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:30.656Z" name="get task test" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:30.809Z" name="free/tasks.list - /free/tasks.list/10_basic.yml" time="0" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:30.809Z" name="tasks_list test" time="0"/>
    <testcase id="2023-04-12T18:29:30.964Z" name="tasks_list headers" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:31.116Z" name="free/termvectors - /free/termvectors/10_basic.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:31.116Z" name="Basic tests for termvector get" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:31.368Z" name="free/termvectors - /free/termvectors/20_issue7121.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:31.368Z" name="Term vector API should return 'found: false' for docs between index and refresh" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:31.614Z" name="free/termvectors - /free/termvectors/30_realtime.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:31.614Z" name="Realtime Term Vectors" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:31.879Z" name="free/tsdb - /free/tsdb/05_dimension_and_metric_in_non_tsdb_index.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:31.879Z" name="add time series mappings" time="0"/>
    <testcase id="2023-04-12T18:29:32.155Z" name="can't shadow dimensions" time="0"/>
    <testcase id="2023-04-12T18:29:32.452Z" name="can't shadow metrics" time="0"/>
    <testcase id="2023-04-12T18:29:32.753Z" name="no _tsid in standard indices" time="0"/>
    <testcase id="2023-04-12T18:29:33.019Z" name="no nested dimensions" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:33.182Z" name="free/tsdb - /free/tsdb/100_composite.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:33.182Z" name="composite aggregation on tsid" time="0"/>
    <testcase id="2023-04-12T18:29:33.463Z" name="composite aggregation on tsid with after" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:33.744Z" name="free/tsdb - /free/tsdb/10_settings.yml" time="4" tests="19" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:33.744Z" name="enable" time="0"/>
    <testcase id="2023-04-12T18:29:34.030Z" name="no sort field" time="0"/>
    <testcase id="2023-04-12T18:29:34.187Z" name="no sort order" time="0"/>
    <testcase id="2023-04-12T18:29:34.355Z" name="no sort mode" time="0"/>
    <testcase id="2023-04-12T18:29:34.520Z" name="no sort missing" time="0"/>
    <testcase id="2023-04-12T18:29:34.686Z" name="no partitioning" time="0"/>
    <testcase id="2023-04-12T18:29:34.849Z" name="routing_path required" time="0"/>
    <testcase id="2023-04-12T18:29:35.010Z" name="routing_path is not allowed in standard mode" time="0"/>
    <testcase id="2023-04-12T18:29:35.173Z" name="routing required" time="0"/>
    <testcase id="2023-04-12T18:29:35.333Z" name="empty routing_path" time="0"/>
    <testcase id="2023-04-12T18:29:35.491Z" name="empty start end times" time="0"/>
    <testcase id="2023-04-12T18:29:35.651Z" name="set start_time and end_time" time="0"/>
    <testcase id="2023-04-12T18:29:35.939Z" name="set start_time and end_time without timeseries mode" time="0"/>
    <testcase id="2023-04-12T18:29:36.096Z" name="set bad start_time and end_time" time="0"/>
    <testcase id="2023-04-12T18:29:36.347Z" name="check start_time and end_time with data_nano" time="0"/>
    <testcase id="2023-04-12T18:29:36.612Z" name="check start_time boundary with data_nano" time="0"/>
    <testcase id="2023-04-12T18:29:36.872Z" name="check end_time boundary with data_nano" time="0"/>
    <testcase id="2023-04-12T18:29:37.139Z" name="check time_series default time bound value" time="0"/>
    <testcase id="2023-04-12T18:29:37.394Z" name="check time_series empty time bound value" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:37.648Z" name="free/tsdb - /free/tsdb/110_field_caps.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:37.648Z" name="field caps on time_series indices" time="0"/>
    <testcase id="2023-04-12T18:29:37.979Z" name="field caps on standard indices" time="0"/>
    <testcase id="2023-04-12T18:29:38.309Z" name="field caps on mixed indices" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:38.638Z" name="free/tsdb - /free/tsdb/120_counter_fields.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:38.638Z" name="avg aggregation on counter field" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:38.969Z" name="free/tsdb - /free/tsdb/15_timestamp_mapping.yml" time="3" tests="10" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:38.969Z" name="date" time="0"/>
    <testcase id="2023-04-12T18:29:39.347Z" name="date_nanos" time="0"/>
    <testcase id="2023-04-12T18:29:39.733Z" name="automatically add with date" time="0"/>
    <testcase id="2023-04-12T18:29:40.125Z" name="reject @timestamp with wrong type" time="0"/>
    <testcase id="2023-04-12T18:29:40.286Z" name="reject timestamp meta field with wrong type" time="0"/>
    <testcase id="2023-04-12T18:29:40.443Z" name="enable timestamp meta field" time="0"/>
    <testcase id="2023-04-12T18:29:40.726Z" name="reject bad timestamp meta field" time="0"/>
    <testcase id="2023-04-12T18:29:40.882Z" name="write without timestamp" time="0"/>
    <testcase id="2023-04-12T18:29:41.164Z" name="explicitly enable timestamp meta field" time="0"/>
    <testcase id="2023-04-12T18:29:41.481Z" name="unable to create a time series index with @timestamp runtime field" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:41.642Z" name="free/tsdb - /free/tsdb/20_mapping.yml" time="3" tests="13" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:41.642Z" name="ecs style" time="0"/>
    <testcase id="2023-04-12T18:29:41.924Z" name="top level wildcard dim object" time="0"/>
    <testcase id="2023-04-12T18:29:42.206Z" name="exact match object type" time="0"/>
    <testcase id="2023-04-12T18:29:42.367Z" name="non keyword matches routing_path" time="0"/>
    <testcase id="2023-04-12T18:29:42.526Z" name="runtime field matching routing path" time="0"/>
    <testcase id="2023-04-12T18:29:42.778Z" name="dynamic: runtime matches routing_path" time="0"/>
    <testcase id="2023-04-12T18:29:43.032Z" name="dynamic: false matches routing_path" time="0"/>
    <testcase id="2023-04-12T18:29:43.283Z" name="nested dimensions" time="0"/>
    <testcase id="2023-04-12T18:29:43.439Z" name="nested fields" time="0"/>
    <testcase id="2023-04-12T18:29:43.596Z" name="Unable to define a metric type for a runtime field" time="0"/>
    <testcase id="2023-04-12T18:29:43.752Z" name="regular source" time="0"/>
    <testcase id="2023-04-12T18:29:43.907Z" name="disabled source" time="0"/>
    <testcase id="2023-04-12T18:29:44.061Z" name="source include/exclude" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:44.219Z" name="free/tsdb - /free/tsdb/25_id_generation.yml" time="5" tests="15" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:44.219Z" name="generates a consistent id" time="0"/>
    <testcase id="2023-04-12T18:29:44.543Z" name="index a new document on top of an old one" time="0"/>
    <testcase id="2023-04-12T18:29:44.875Z" name="index a new document on top of an old one over bulk" time="0"/>
    <testcase id="2023-04-12T18:29:45.198Z" name="create operation on top of old document fails" time="0"/>
    <testcase id="2023-04-12T18:29:45.501Z" name="create operation on top of old document fails over bulk" time="0"/>
    <testcase id="2023-04-12T18:29:45.801Z" name="ids query" time="0"/>
    <testcase id="2023-04-12T18:29:46.107Z" name="get" time="0"/>
    <testcase id="2023-04-12T18:29:46.395Z" name="get not found" time="0"/>
    <testcase id="2023-04-12T18:29:46.673Z" name="get with routing" time="0"/>
    <testcase id="2023-04-12T18:29:46.953Z" name="delete" time="0"/>
    <testcase id="2023-04-12T18:29:47.241Z" name="delete not found" time="0"/>
    <testcase id="2023-04-12T18:29:47.528Z" name="delete with routing" time="0"/>
    <testcase id="2023-04-12T18:29:47.809Z" name="delete over _bulk" time="0"/>
    <testcase id="2023-04-12T18:29:48.091Z" name="routing_path matches deep object" time="0"/>
    <testcase id="2023-04-12T18:29:48.489Z" name="routing_path matches object" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:48.880Z" name="free/tsdb - /free/tsdb/30_snapshot.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2023-04-12T18:29:48.880Z" name="Create a snapshot and then restore it" time="0">
      <skipped>{
  "version": " - 8.1.99",
  "reason": "tsdb indexing changed in 8.2.0",
  "features": [
    "allowed_warnings"
  ]
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:29:49.078Z" name="free/tsdb - /free/tsdb/40_search.yml" time="3" tests="13" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:49.078Z" name="query a dimension" time="0"/>
    <testcase id="2023-04-12T18:29:49.328Z" name="query a metric" time="0"/>
    <testcase id="2023-04-12T18:29:49.584Z" name="query tsid fails" time="0"/>
    <testcase id="2023-04-12T18:29:49.832Z" name="fetch a dimension" time="0"/>
    <testcase id="2023-04-12T18:29:50.082Z" name="fetch a metric" time="0"/>
    <testcase id="2023-04-12T18:29:50.333Z" name="fetch a tag" time="0"/>
    <testcase id="2023-04-12T18:29:50.585Z" name="fetch the tsid" time="0"/>
    <testcase id="2023-04-12T18:29:50.836Z" name="aggregate a dimension" time="0"/>
    <testcase id="2023-04-12T18:29:51.088Z" name="aggregate a metric" time="0"/>
    <testcase id="2023-04-12T18:29:51.342Z" name="aggregate a tag" time="0"/>
    <testcase id="2023-04-12T18:29:51.591Z" name="aggregate the tsid" time="0"/>
    <testcase id="2023-04-12T18:29:51.844Z" name="aggregate filter the tsid fails" time="0"/>
    <testcase id="2023-04-12T18:29:52.097Z" name="sort by tsid" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:52.348Z" name="free/tsdb - /free/tsdb/50_alias.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:52.348Z" name="search an alias" time="0"/>
    <testcase id="2023-04-12T18:29:52.608Z" name="index into alias" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:52.887Z" name="free/tsdb - /free/tsdb/60_add_dimensions.yml" time="1" tests="5" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:52.887Z" name="add dimensions with put_mapping" time="0"/>
    <testcase id="2023-04-12T18:29:53.149Z" name="add dimensions to no dims with dynamic_template over index" time="0"/>
    <testcase id="2023-04-12T18:29:53.413Z" name="add dimensions to no dims with dynamic_template over bulk" time="0"/>
    <testcase id="2023-04-12T18:29:53.681Z" name="add dimensions to some dims with dynamic_template over index" time="0"/>
    <testcase id="2023-04-12T18:29:53.944Z" name="add dimensions to some dims with dynamic_template over bulk" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:54.210Z" name="free/tsdb - /free/tsdb/70_dimension_types.yml" time="1" tests="4" failures="0" skipped="3">
    <testcase id="2023-04-12T18:29:54.210Z" name="keyword dimension" time="0">
      <skipped>{
  "features": [
    "close_to"
  ],
  "version": " - 8.1.99",
  "reason": "tsdb indexing changed in 8.2.0"
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:29:54.357Z" name="long dimension" time="0">
      <skipped>{
  "features": [
    "close_to"
  ],
  "version": " - 8.1.99",
  "reason": "tsdb indexing changed in 8.2.0"
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:29:54.510Z" name="ip dimension" time="0">
      <skipped>{
  "features": [
    "close_to"
  ],
  "version": " - 8.1.99",
  "reason": "tsdb indexing changed in 8.2.0"
}</skipped>
    </testcase>
    <testcase id="2023-04-12T18:29:54.657Z" name="runtime time series dimension" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:54.807Z" name="free/tsdb - /free/tsdb/80_index_resize.yml" time="1" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:54.807Z" name="split" time="0"/>
    <testcase id="2023-04-12T18:29:55.124Z" name="shrink" time="0"/>
    <testcase id="2023-04-12T18:29:55.570Z" name="clone" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:56.028Z" name="free/tsdb - /free/tsdb/90_unsupported_operations.yml" time="3" tests="12" failures="0" skipped="1">
    <testcase id="2023-04-12T18:29:56.028Z" name="index with routing" time="0"/>
    <testcase id="2023-04-12T18:29:56.311Z" name="index with routing over _bulk" time="0"/>
    <testcase id="2023-04-12T18:29:56.598Z" name="noop update" time="0">
      <skipped>This test is in the skip list of the client</skipped>
    </testcase>
    <testcase id="2023-04-12T18:29:56.598Z" name="update" time="0"/>
    <testcase id="2023-04-12T18:29:56.890Z" name="update over _bulk" time="0"/>
    <testcase id="2023-04-12T18:29:57.168Z" name="search with routing" time="0"/>
    <testcase id="2023-04-12T18:29:57.444Z" name="alias with routing" time="0"/>
    <testcase id="2023-04-12T18:29:57.722Z" name="alias with search_routing" time="0"/>
    <testcase id="2023-04-12T18:29:57.999Z" name="sort by _id" time="0"/>
    <testcase id="2023-04-12T18:29:58.278Z" name="aggregate on _id" time="0"/>
    <testcase id="2023-04-12T18:29:58.557Z" name="synthetic source flattened field" time="0"/>
    <testcase id="2023-04-12T18:29:58.837Z" name="synthetic source text field" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:59.124Z" name="free/update - /free/update/100_synthetic_source.yml" time="1" tests="2" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:59.124Z" name="keyword" time="0"/>
    <testcase id="2023-04-12T18:29:59.415Z" name="stored text" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:59.706Z" name="free/update - /free/update/10_doc.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:59.706Z" name="Partial document" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:29:59.969Z" name="free/update - /free/update/11_shard_header.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:29:59.969Z" name="Update check shard header" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:30:00.233Z" name="free/update - /free/update/12_result.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:30:00.233Z" name="Update result field" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:30:00.506Z" name="free/update - /free/update/13_legacy_doc.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:30:00.506Z" name="Partial document" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:30:00.785Z" name="free/update - /free/update/16_noop.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:30:00.785Z" name="Noop" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:30:01.076Z" name="free/update - /free/update/20_doc_upsert.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:30:01.076Z" name="Doc upsert" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:30:01.365Z" name="free/update - /free/update/22_doc_as_upsert.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:30:01.365Z" name="Doc as upsert" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:30:01.650Z" name="free/update - /free/update/35_if_seq_no.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:30:01.650Z" name="Update with if_seq_no" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:30:01.931Z" name="free/update - /free/update/40_routing.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:30:01.931Z" name="Routing" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:30:02.330Z" name="free/update - /free/update/60_refresh.yml" time="2" tests="3" failures="0" skipped="0">
    <testcase id="2023-04-12T18:30:02.330Z" name="Refresh" time="0"/>
    <testcase id="2023-04-12T18:30:02.603Z" name="When refresh url parameter is an empty string that means &quot;refresh immediately&quot;" time="0"/>
    <testcase id="2023-04-12T18:30:02.900Z" name="refresh=wait_for waits until changes are visible in search" time="1"/>
  </testsuite>
  <testsuite id="2023-04-12T18:30:04.106Z" name="free/update - /free/update/80_source_filtering.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:30:04.106Z" name="Source filtering" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:30:04.370Z" name="free/update - /free/update/85_fields_meta.yml" time="0" tests="1" failures="0" skipped="1">
    <testcase id="2023-04-12T18:30:04.370Z" name="Metadata Fields" time="0">
      <skipped>{
  "version": "all",
  "reason": "Update doesn't return metadata fields, waiting for #3259"
}</skipped>
    </testcase>
  </testsuite>
  <testsuite id="2023-04-12T18:30:04.526Z" name="free/update - /free/update/90_error.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:30:04.526Z" name="Misspelled fields get &quot;did you mean&quot;" time="0"/>
  </testsuite>
  <testsuite id="2023-04-12T18:30:04.680Z" name="free/update - /free/update/95_require_alias.yml" time="0" tests="1" failures="0" skipped="0">
    <testcase id="2023-04-12T18:30:04.680Z" name="Set require_alias flag" time="0"/>
  </testsuite>
</testsuites>